syntax = "proto3";

package serverless.clusters.v1;

import "google/protobuf/timestamp.proto";

// Cluster represents a cluster entity with its details.
message Cluster {
    // ID of the cluster.
    string id = 1;
    // Name of the cluster.
    string name = 2;
    // URL of the cluster.
    string url = 3;
    // API key to access the cluster.
    optional string api_key = 4;
    // Indicates whether the cluster is active.
    bool is_active = 5;
    // The last time the cluster was used.
    optional google.protobuf.Timestamp last_used_at = 6;
    // The time the cluster was created.
    google.protobuf.Timestamp created_at = 7;
    // ID of the user who created the cluster.
    string account_id = 8;
}

// RegisterClusterRequest represents a request to register a cluster.
message RegisterClusterRequest {
    // Name of the cluster.
    string name = 1;
    // URL of the cluster.
    string url = 2;
    // API key to access the cluster.
    optional string api_key = 3;
}

// ListClustersRequest represents a request to list clusters.
message ListClustersRequest {
    string account_id = 1;
}

// ListClustersResponse represents a response to list clusters.
message ListClustersResponse {
    // List of clusters.
    repeated Cluster clusters = 1;
}

// DeleteClusterRequest represents a request to delete a cluster.
message DeleteClusterRequest {
    // ID of the cluster to delete.
    string cluster_id = 1;
}

// ClusterService is the service that provides cluster management.
service ClusterService {
    // RegisterCluster registers a cluster.
    rpc RegisterCluster (RegisterClusterRequest) returns (Cluster);
    // ListClusters lists clusters.
    rpc ListClusters (ListClustersRequest) returns (ListClustersResponse);
    // DeleteCluster deletes a cluster.
    rpc DeleteCluster (DeleteClusterRequest) returns (Cluster);
}
