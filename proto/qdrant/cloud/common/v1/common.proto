syntax = "proto3";

package qdrant.cloud.common.v1;

import "buf/validate/validate.proto";
import "google/protobuf/descriptor.proto";

// The extension for adding permissions to the system
extend google.protobuf.MethodOptions {
  // A list of permissions which ALL need to be met by the current user.
  repeated string permissions = 50001;
}

// The extension for adding an expression where to find the account ID in a message
// If the extension is missing 'account_id' will be used.
extend google.protobuf.MethodOptions {
  // The expression to find the account ID field, which should be a string field.
  // It is allowed to nest fields with a point, like 'cluster.account_id' or 'account.id'
  // If the expression is set to an empty string, no account ID will be used.
  string account_id_expression = 50002;
}

// The extension for allowing a method to be be used without authentication.
// If the extension is missing the system requires authentication and return a 'permission denied' error if missing.
extend google.protobuf.MethodOptions {
  // Set to allow a method to be used without authentication.
  bool requires_authentication = 50003;
}

// The extension for allowing a method to be be used with specific actor types.
// If the extension is missing the system allows all actor types.
extend google.protobuf.MethodOptions {
  // If this option is set, only the specified actor types are allowed to call the method.
  // If empty or not set, all authenticated actor types (that pass other permission checks) are allowed.
  repeated ActorType supported_actor_types = 50004 [
    packed = true,
    (buf.validate.field).repeated.items.enum = {
      defined_only: true // Ensures only defined enum values are used
      not_in: [0] /* Disallows ACTOR_TYPE_UNSPECIFIED (value 0) */
    }
  ];
}

// ActorType specifies the type of actor that can call a method.
enum ActorType {
  // Default, unspecified actor type. Should generally not be used explicitly in options
  // unless to signify an error or uninitialized state.
  ACTOR_TYPE_UNSPECIFIED = 0;
  // Represents a human user, typically authenticated via an identity provider (Auth0).
  ACTOR_TYPE_USER = 1;
  // Represents a service account or machine user, often used for M2M communication.
  ACTOR_TYPE_SERVICE_ACCOUNT = 2;
  // Represents a programmatic access key, also called management key,
  // that is not be tied to a specific user or service account identity, but rather an account.
  ACTOR_TYPE_MANAGEMENT_KEY = 3;
}

// Semantic version number.
message Version {
  // Major version (increasing may break APIs)
  uint32 major = 1;
  // Minor version (increased for new features)
  uint32 minor = 2;
  // Patch version (increased for fixes)
  uint32 patch = 3;
}

// SecretKeyRef is a reference to a Kubernetes secret name and the key inside the secret
message SecretKeyRef {
  // The name of the secret (in the same namespace as the QdrantCluster CRD instance)
  // This is a required field
  string name = 1 [(buf.validate.field).string = {
    min_len: 1
    max_len: 253 // Kubernetes secret names have a max length of 253
    pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$" // Kubernetes secret name restrictions
  }];
  // The key inside the secret
  // This is a required field
  string key = 2 [(buf.validate.field).string = {
    min_len: 1
    max_len: 1024
  }];
}

// KeyValue is a key-value tuple (used in e.g. node selectors / annotations)
// The message represents an object for Kubernetes.
message KeyValue {
  // The key part of a key-value pair
  string key = 1 [(buf.validate.field).string = {
    max_len: 63
    pattern: "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$"
  }];
  // The value part of a key-value pair
  string value = 2 [(buf.validate.field).string = {max_len: 1024}];
}
