// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: qdrant/cloud/billing/v1/billing.proto

package billingv1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/billing/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// BillingServiceName is the fully-qualified name of the BillingService service.
	BillingServiceName = "qdrant.cloud.billing.v1.BillingService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// BillingServiceListInvoicesProcedure is the fully-qualified name of the BillingService's
	// ListInvoices RPC.
	BillingServiceListInvoicesProcedure = "/qdrant.cloud.billing.v1.BillingService/ListInvoices"
)

// BillingServiceClient is a client for the qdrant.cloud.billing.v1.BillingService service.
type BillingServiceClient interface {
	// Lists all invoices for the account identified by the given ID.
	// Required permissions:
	// - read:payment_information
	ListInvoices(context.Context, *connect.Request[v1.ListInvoicesRequest]) (*connect.Response[v1.ListInvoicesResponse], error)
}

// NewBillingServiceClient constructs a client for the qdrant.cloud.billing.v1.BillingService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewBillingServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) BillingServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	billingServiceMethods := v1.File_qdrant_cloud_billing_v1_billing_proto.Services().ByName("BillingService").Methods()
	return &billingServiceClient{
		listInvoices: connect.NewClient[v1.ListInvoicesRequest, v1.ListInvoicesResponse](
			httpClient,
			baseURL+BillingServiceListInvoicesProcedure,
			connect.WithSchema(billingServiceMethods.ByName("ListInvoices")),
			connect.WithClientOptions(opts...),
		),
	}
}

// billingServiceClient implements BillingServiceClient.
type billingServiceClient struct {
	listInvoices *connect.Client[v1.ListInvoicesRequest, v1.ListInvoicesResponse]
}

// ListInvoices calls qdrant.cloud.billing.v1.BillingService.ListInvoices.
func (c *billingServiceClient) ListInvoices(ctx context.Context, req *connect.Request[v1.ListInvoicesRequest]) (*connect.Response[v1.ListInvoicesResponse], error) {
	return c.listInvoices.CallUnary(ctx, req)
}

// BillingServiceHandler is an implementation of the qdrant.cloud.billing.v1.BillingService service.
type BillingServiceHandler interface {
	// Lists all invoices for the account identified by the given ID.
	// Required permissions:
	// - read:payment_information
	ListInvoices(context.Context, *connect.Request[v1.ListInvoicesRequest]) (*connect.Response[v1.ListInvoicesResponse], error)
}

// NewBillingServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewBillingServiceHandler(svc BillingServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	billingServiceMethods := v1.File_qdrant_cloud_billing_v1_billing_proto.Services().ByName("BillingService").Methods()
	billingServiceListInvoicesHandler := connect.NewUnaryHandler(
		BillingServiceListInvoicesProcedure,
		svc.ListInvoices,
		connect.WithSchema(billingServiceMethods.ByName("ListInvoices")),
		connect.WithHandlerOptions(opts...),
	)
	return "/qdrant.cloud.billing.v1.BillingService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case BillingServiceListInvoicesProcedure:
			billingServiceListInvoicesHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedBillingServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedBillingServiceHandler struct{}

func (UnimplementedBillingServiceHandler) ListInvoices(context.Context, *connect.Request[v1.ListInvoicesRequest]) (*connect.Response[v1.ListInvoicesResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("qdrant.cloud.billing.v1.BillingService.ListInvoices is not implemented"))
}
