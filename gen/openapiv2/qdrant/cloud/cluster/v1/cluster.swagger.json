{
  "swagger": "2.0",
  "info": {
    "title": "qdrant/cloud/cluster/v1/cluster.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ClusterService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/cluster/v1/accounts/{accountId}/backups/{backupId}/clusters": {
      "post": {
        "summary": "Create a new cluster from an existing backup\nRequired permissions (both):\n- admin:backups\n- write:clusters",
        "operationId": "ClusterService_CreateClusterFromBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateClusterFromBackupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "description": "The identifier of the backup (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterName",
            "description": "Name of the new cluster",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "packageId",
            "description": "The package identifier to use for the new cluster (optional).\nIf not specified, the package from backup cluster will be used.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/cluster/v1/accounts/{accountId}/clusters": {
      "get": {
        "summary": "Lists all clusters in the account identified by the given ID.\nRequired permissions:\n- read:clusters",
        "operationId": "ClusterService_ListClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListClustersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloudProviderId",
            "description": "Optional filter specifying the cloud provider where the cluster is hosted.\nMust match one of the provider IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListCloudProviders` method.\nIf omitted, all clusters for the specified account are returned, including those hosted in hybrid cloud environments.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProviderRegionId",
            "description": "Optional filter specifying the cloud provider region where the cluster is hosted.\nMust match one of the region IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListCloudProviderRegions` method.\nIf this field is set, the `cloud_provider_id` is required to set as well (and it should match).\nFor hybrid this should be the hybrid cloud environment ID.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/cluster/v1/accounts/{accountId}/clusters/suggest-name": {
      "get": {
        "summary": "Suggests a unique and human-friendly name for a new cluster in the specified account.\nThis can be used by clients to pre-fill the name field when creating a new cluster.\nRequired permissions:\n- None (authenticated only)",
        "operationId": "ClusterService_SuggestClusterName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SuggestClusterNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/cluster/v1/accounts/{accountId}/clusters/{clusterId}": {
      "get": {
        "summary": "Gets a cluster in the account identified by the given ID.\nRequired permissions:\n- read:clusters",
        "operationId": "ClusterService_GetCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier for the cluster (in GUID format).\nThis cluster should be part of the provided account.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      },
      "delete": {
        "summary": "Deletes a cluster in the account identified by the given ID.\nRequired permissions:\n- delete:clusters",
        "operationId": "ClusterService_DeleteCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier for the cluster (in GUID format).\nThis cluster should be part of the provided account.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleteBackups",
            "description": "If set, the backups of this cluster will be deleted as well.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/cluster/v1/accounts/{accountId}/clusters/{clusterId}/restart": {
      "post": {
        "summary": "Restarts a cluster in the account identified by the given ID.\nRequired permissions:\n- write:clusters",
        "operationId": "ClusterService_RestartCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RestartClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier for the cluster (in GUID format).\nThis cluster should be part of the provided account.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/cluster/v1/accounts/{accountId}/clusters/{clusterId}/suspend": {
      "post": {
        "summary": "Suspends a cluster in the account identified by the given ID.\nRequired permissions:\n- write:clusters",
        "operationId": "ClusterService_SuspendCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SuspendClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier for the cluster (in GUID format).\nThis cluster should be part of the provided account.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/cluster/v1/accounts/{accountId}/releases": {
      "get": {
        "summary": "Lists all qdrant releases in the account identified by the given ID.\nOptional a cluster ID can be provided, the list will return the options to update to only.\nRequired permissions:\n- read:clusters",
        "operationId": "ClusterService_ListQdrantReleases",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListQdrantReleasesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier for the cluster (in GUID format).\nThis cluster should be part of the provided account.\nThis is an optional field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/cluster/v1/accounts/{cluster.accountId}/clusters": {
      "post": {
        "summary": "Creates a cluster in the account identified by the given ID.\nRequired permissions:\n- write:clusters",
        "operationId": "ClusterService_CreateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster.accountId",
            "description": "Identifier of the account associated with the cluster (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterServiceCreateClusterBody"
            }
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/cluster/v1/accounts/{cluster.accountId}/clusters/{cluster.id}": {
      "put": {
        "summary": "Updates a cluster in the account identified by the given ID.\nRequired permissions:\n- write:clusters",
        "operationId": "ClusterService_UpdateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster.accountId",
            "description": "Identifier of the account associated with the cluster (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster.id",
            "description": "Unique identifier for the cluster (in GUID format).\nThis is a read-only field and will be available after a cluster is created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterServiceUpdateClusterBody"
            }
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    }
  },
  "definitions": {
    "ClusterServiceCreateClusterBody": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier for the cluster (in GUID format).\nThis is a read-only field and will be available after a cluster is created."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the cluster was created.\nThis is a read-only field and will be available after a cluster is created."
            },
            "name": {
              "type": "string",
              "title": "Name of the cluster.\nThis is a required field.\nName can only contain letters, numbers, underscores and dashes"
            },
            "deletedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the cluster was deleted (or is started to be deleting).\nThis is a read-only field and will be set after DeleteCluster is called."
            },
            "cloudProviderId": {
              "type": "string",
              "description": "Cloud provider where the cluster is hosted.\nMust match one of the provider IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListCloudProviders` method.\nAfter creation, this field cannot be changed."
            },
            "cloudProviderRegionId": {
              "type": "string",
              "description": "Cloud provider region where the cluster is hosted.\nMust match one of the region IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListCloudProviderRegions` method.\nFor hybrid this should be the hybrid cloud environment ID.\nThis is a required field.\nAfter creation, this field cannot be changed."
            },
            "configuration": {
              "$ref": "#/definitions/v1ClusterConfiguration",
              "description": "Current configuration details of the cluster."
            },
            "state": {
              "$ref": "#/definitions/v1ClusterState",
              "description": "Current state of the cluster (available after the cluster has been created).\nAll fields inside `state` are read-only."
            }
          },
          "title": "The actual cluster"
        }
      },
      "title": "CreateClusterRequest is the request for the CreateCluster function"
    },
    "ClusterServiceUpdateClusterBody": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the cluster was created.\nThis is a read-only field and will be available after a cluster is created."
            },
            "name": {
              "type": "string",
              "title": "Name of the cluster.\nThis is a required field.\nName can only contain letters, numbers, underscores and dashes"
            },
            "deletedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the cluster was deleted (or is started to be deleting).\nThis is a read-only field and will be set after DeleteCluster is called."
            },
            "cloudProviderId": {
              "type": "string",
              "description": "Cloud provider where the cluster is hosted.\nMust match one of the provider IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListCloudProviders` method.\nAfter creation, this field cannot be changed."
            },
            "cloudProviderRegionId": {
              "type": "string",
              "description": "Cloud provider region where the cluster is hosted.\nMust match one of the region IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListCloudProviderRegions` method.\nFor hybrid this should be the hybrid cloud environment ID.\nThis is a required field.\nAfter creation, this field cannot be changed."
            },
            "configuration": {
              "$ref": "#/definitions/v1ClusterConfiguration",
              "description": "Current configuration details of the cluster."
            },
            "state": {
              "$ref": "#/definitions/v1ClusterState",
              "description": "Current state of the cluster (available after the cluster has been created).\nAll fields inside `state` are read-only."
            }
          },
          "title": "The actual cluster"
        }
      },
      "title": "UpdateClusterRequest is the request for the UpdateCluster function"
    },
    "cloudclusterv1Toleration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to match against the key of a node label."
        },
        "operator": {
          "$ref": "#/definitions/v1TolerationOperator",
          "description": "The operator represents a key's relationship to the value.\nThe default is TOLERATION_OPERATOR_EXISTS."
        },
        "value": {
          "type": "string",
          "description": "The value to match against the value of a node label."
        },
        "effect": {
          "$ref": "#/definitions/v1TolerationEffect",
          "description": "The effect indicates the taint effect to match.\nThe default is TOLERATION_EFFECT_NO_SCHEDULE."
        },
        "tolerationSeconds": {
          "type": "string",
          "format": "uint64",
          "description": "The toleration seconds indicates the duration to tolerate the taint."
        }
      },
      "description": "The Toleration message represents a toleration object for Kubernetes."
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "v1AdditionalResources": {
      "type": "object",
      "properties": {
        "disk": {
          "type": "integer",
          "format": "int64",
          "title": "Additional Disk (expressed in Gib)"
        }
      },
      "title": "AdditionalResources contains the information about additional resources"
    },
    "v1Cluster": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the cluster (in GUID format).\nThis is a read-only field and will be available after a cluster is created."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the cluster was created.\nThis is a read-only field and will be available after a cluster is created."
        },
        "accountId": {
          "type": "string",
          "description": "Identifier of the account associated with the cluster (in GUID format).\nThis is a required field."
        },
        "name": {
          "type": "string",
          "title": "Name of the cluster.\nThis is a required field.\nName can only contain letters, numbers, underscores and dashes"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the cluster was deleted (or is started to be deleting).\nThis is a read-only field and will be set after DeleteCluster is called."
        },
        "cloudProviderId": {
          "type": "string",
          "description": "Cloud provider where the cluster is hosted.\nMust match one of the provider IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListCloudProviders` method.\nAfter creation, this field cannot be changed."
        },
        "cloudProviderRegionId": {
          "type": "string",
          "description": "Cloud provider region where the cluster is hosted.\nMust match one of the region IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListCloudProviderRegions` method.\nFor hybrid this should be the hybrid cloud environment ID.\nThis is a required field.\nAfter creation, this field cannot be changed."
        },
        "configuration": {
          "$ref": "#/definitions/v1ClusterConfiguration",
          "description": "Current configuration details of the cluster."
        },
        "state": {
          "$ref": "#/definitions/v1ClusterState",
          "description": "Current state of the cluster (available after the cluster has been created).\nAll fields inside `state` are read-only."
        }
      },
      "description": "A Cluster represents one cluster of a Qdrant database."
    },
    "v1ClusterConfiguration": {
      "type": "object",
      "properties": {
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the cluster configuration was last updated.\nThis is a read-only field and will be available after a cluster is created."
        },
        "numberOfNodes": {
          "type": "integer",
          "format": "int64",
          "description": "The number of nodes in a cluster.\nThis should be a number 1...20 [both included].\nThis is a required field."
        },
        "version": {
          "type": "string",
          "description": "Version of the cluster software.\nIf omitted the latest version will be used and filled out during create.\nUse ListReleases() to determine which versions are allowed to be used.\nSee upgrade guidelines for more info."
        },
        "packageId": {
          "type": "string",
          "description": "The package identifier used to configure the resources of the cluster. Use `qdrant.cloud.booking.v1.BookingService.ListPackages` to select one.\nThis is a required field."
        },
        "additionalResources": {
          "$ref": "#/definitions/v1AdditionalResources",
          "description": "The additional resources on top of the selected package.\nThis is an optional field, if not specified all additional resources are 0."
        },
        "databaseConfiguration": {
          "$ref": "#/definitions/v1DatabaseConfiguration",
          "description": "Configuration to setup a qdrant database.\nThis is an optional field."
        },
        "nodeSelector": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeyValue"
          },
          "title": "The node selector for this cluster in a hybrid cloud environment.\nIt is ignored for managed cloud clusters. This is an optional field"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cloudclusterv1Toleration"
          },
          "title": "List of tolerations for this cluster in a hybrid cloud environment.\nIt is ignored for managed cloud clusters. This is an optional field"
        },
        "annotations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeyValue"
          },
          "title": "List of annotations for this cluster in a hybrid cloud environment.\nIt is ignored for managed cloud clusters. This is an optional field"
        },
        "allowedIpSourceRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of allowed IP source ranges for this cluster.\nField is used for both managed cloud and hybrid cloud and clusters. This is an optional field\nThe CIDRs supports IPv4 only."
        },
        "serviceType": {
          "$ref": "#/definitions/v1ClusterServiceType",
          "description": "The type of service to use for this cluster in a hybrid cloud environment.\nIt is ignored for managed cloud clusters. This is an optional field, default is Cluster IP."
        },
        "serviceAnnotations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeyValue"
          },
          "title": "List of annotations applied to the service of this cluster in a hybrid cloud environment.\nIt is ignored for managed cloud clusters. This is an optional field"
        },
        "podLabels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeyValue"
          },
          "title": "List of labels applied to the pods of this cluster in a hybrid cloud environment.\nIt is ignored for managed cloud clusters. This is an optional field"
        },
        "reservedCpuPercentage": {
          "type": "integer",
          "format": "int64",
          "title": "The percentage of CPU resources reserved for system components\nThis is an optional field, default is 0.\nNumber between 0..80"
        },
        "reservedMemoryPercentage": {
          "type": "integer",
          "format": "int64",
          "title": "The percentage of RAM resources reserved for system components\nThis is an optional field, default is 0.\nNumber between 0..80"
        },
        "gpuType": {
          "$ref": "#/definitions/v1ClusterConfigurationGpuType",
          "title": "The gpu type that should be used for the database\nThis is an optional field, default is No configured GPU"
        },
        "restartPolicy": {
          "$ref": "#/definitions/v1ClusterConfigurationRestartPolicy",
          "title": "The restart policy for the database\nThis is an optional field, default is Automatic"
        },
        "rebalanceStrategy": {
          "$ref": "#/definitions/v1ClusterConfigurationRebalanceStrategy",
          "title": "The automatic shard rebalancing strategy for the database\nThis is an optional field, default is none"
        }
      },
      "description": "A ClusterConfiguration represents the configuration of a cluster."
    },
    "v1ClusterConfigurationGpuType": {
      "type": "string",
      "enum": [
        "CLUSTER_CONFIGURATION_GPU_TYPE_UNSPECIFIED",
        "CLUSTER_CONFIGURATION_GPU_TYPE_NVIDIA",
        "CLUSTER_CONFIGURATION_GPU_TYPE_AMD"
      ],
      "default": "CLUSTER_CONFIGURATION_GPU_TYPE_UNSPECIFIED",
      "description": "ClusterConfigurationGpuType defines GPU types available for clusters.\n\n - CLUSTER_CONFIGURATION_GPU_TYPE_UNSPECIFIED: No GPU is configured.\n - CLUSTER_CONFIGURATION_GPU_TYPE_NVIDIA: Use an NVIDIA GPU.\n - CLUSTER_CONFIGURATION_GPU_TYPE_AMD: Use an AMD GPU."
    },
    "v1ClusterConfigurationRebalanceStrategy": {
      "type": "string",
      "enum": [
        "CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_UNSPECIFIED",
        "CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_BY_COUNT",
        "CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_BY_SIZE",
        "CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_BY_COUNT_AND_SIZE"
      ],
      "default": "CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_UNSPECIFIED",
      "description": "ClusterConfigurationRebalanceStrategy defines shard rebalancing strategies.\n\n - CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_UNSPECIFIED: No rebalancing strategy is configured.\n - CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_BY_COUNT: Rebalance shards by count.\n - CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_BY_SIZE: Rebalance shards by size.\n - CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_BY_COUNT_AND_SIZE: Rebalance shards by both count and size."
    },
    "v1ClusterConfigurationRestartPolicy": {
      "type": "string",
      "enum": [
        "CLUSTER_CONFIGURATION_RESTART_POLICY_UNSPECIFIED",
        "CLUSTER_CONFIGURATION_RESTART_POLICY_ROLLING",
        "CLUSTER_CONFIGURATION_RESTART_POLICY_PARALLEL",
        "CLUSTER_CONFIGURATION_RESTART_POLICY_AUTOMATIC"
      ],
      "default": "CLUSTER_CONFIGURATION_RESTART_POLICY_UNSPECIFIED",
      "description": "ClusterConfigurationRestartPolicy defines restart strategies for the cluster's database.\n\n - CLUSTER_CONFIGURATION_RESTART_POLICY_UNSPECIFIED: Restart policy is unspecified.\n - CLUSTER_CONFIGURATION_RESTART_POLICY_ROLLING: Rolling restart policy (one by one).\n - CLUSTER_CONFIGURATION_RESTART_POLICY_PARALLEL: Parallel restart policy (restart all at once).\n - CLUSTER_CONFIGURATION_RESTART_POLICY_AUTOMATIC: Automatic restart policy."
    },
    "v1ClusterEndpoint": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "URL to access the qdrant cluster (aka database) without port"
        },
        "restPort": {
          "type": "integer",
          "format": "int32",
          "title": "The port to use for HTTP REST calls (6333)"
        },
        "grpcPort": {
          "type": "integer",
          "format": "int32",
          "title": "The port to use for gRPC calls (6334)"
        }
      },
      "description": "Endpoint information to access the qdrant cluster (aka database) or a specific node in the cluster.\nAll fields in this message are a read-only field."
    },
    "v1ClusterNodeInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name specifies the name of the node."
        },
        "startedAt": {
          "type": "string",
          "format": "date-time",
          "description": "StartedAt specifies the time when the node started."
        },
        "version": {
          "type": "string",
          "description": "Version specifies the version of Qdrant running on the node."
        },
        "endpoint": {
          "$ref": "#/definitions/v1ClusterEndpoint",
          "description": "Endpoint specific to this node."
        },
        "state": {
          "$ref": "#/definitions/v1ClusterNodeState",
          "description": "State of the node."
        }
      },
      "description": "ClusterNodeInfo represents a node in a cluster.\nAll fields in this message are read-only."
    },
    "v1ClusterNodeResources": {
      "type": "object",
      "properties": {
        "base": {
          "type": "number",
          "format": "double",
          "description": "Base resources that are part of the standard allocation for the cluster per node.\nThis includes default CPU, memory, storage, etc."
        },
        "complimentary": {
          "type": "number",
          "format": "double",
          "description": "Complimentary resources provided to the cluster at no additional cost.\nThis might include complimentary network bandwidth, credits, etc."
        },
        "additional": {
          "type": "number",
          "format": "double",
          "description": "Additional resources allocated to the cluster.\nThis could include additional storage, compute power, etc."
        },
        "reserved": {
          "type": "number",
          "format": "double",
          "description": "The reserved is the amount used by the system, which cannot be used by the database itself."
        },
        "available": {
          "type": "number",
          "format": "double",
          "title": "The available is the total (base+complimentary+additional) - reserved"
        }
      },
      "description": "ClusterNodeResources represents the allocation of various resources for a cluster per node."
    },
    "v1ClusterNodeResourcesSummary": {
      "type": "object",
      "properties": {
        "disk": {
          "$ref": "#/definitions/v1ClusterNodeResources",
          "title": "Disk resources"
        },
        "ram": {
          "$ref": "#/definitions/v1ClusterNodeResources",
          "title": "Memory resources"
        },
        "cpu": {
          "$ref": "#/definitions/v1ClusterNodeResources",
          "title": "CPU resources"
        }
      },
      "description": "ClusterNodeResourcesSummary represents the resources used in this cluster per node."
    },
    "v1ClusterNodeState": {
      "type": "string",
      "enum": [
        "CLUSTER_NODE_STATE_UNSPECIFIED",
        "CLUSTER_NODE_STATE_STARTING",
        "CLUSTER_NODE_STATE_HEALTHY",
        "CLUSTER_NODE_STATE_UNHEALTHY",
        "CLUSTER_NODE_STATE_SUSPENDED"
      ],
      "default": "CLUSTER_NODE_STATE_UNSPECIFIED",
      "description": "ClusterNodeState represents the state of a cluster node.\n\n - CLUSTER_NODE_STATE_UNSPECIFIED: The state is unspecified.\n - CLUSTER_NODE_STATE_STARTING: The node is starting.\n - CLUSTER_NODE_STATE_HEALTHY: The node is healthy.\n - CLUSTER_NODE_STATE_UNHEALTHY: The node is unhealthy.\n - CLUSTER_NODE_STATE_SUSPENDED: The node is suspended."
    },
    "v1ClusterPhase": {
      "type": "string",
      "enum": [
        "CLUSTER_PHASE_UNSPECIFIED",
        "CLUSTER_PHASE_CREATING",
        "CLUSTER_PHASE_FAILED_TO_CREATE",
        "CLUSTER_PHASE_UPDATING",
        "CLUSTER_PHASE_FAILED_TO_UPDATE",
        "CLUSTER_PHASE_SCALING",
        "CLUSTER_PHASE_UPGRADING",
        "CLUSTER_PHASE_SUSPENDING",
        "CLUSTER_PHASE_SUSPENDED",
        "CLUSTER_PHASE_FAILED_TO_SUSPEND",
        "CLUSTER_PHASE_RESUMING",
        "CLUSTER_PHASE_FAILED_TO_RESUME",
        "CLUSTER_PHASE_HEALTHY",
        "CLUSTER_PHASE_NOT_READY",
        "CLUSTER_PHASE_RECOVERY_MODE",
        "CLUSTER_PHASE_MANUAL_MAINTENANCE",
        "CLUSTER_PHASE_FAILED_TO_SYNC",
        "CLUSTER_PHASE_NOT_FOUND"
      ],
      "default": "CLUSTER_PHASE_UNSPECIFIED",
      "description": "Defines the operational or transitional state of the Qdrant cluster.\n\n - CLUSTER_PHASE_UNSPECIFIED: The phase is unknown or not specified. Should not normally be used.\n - CLUSTER_PHASE_CREATING: The cluster is currently being created.\n - CLUSTER_PHASE_FAILED_TO_CREATE: The cluster creation process failed.\n - CLUSTER_PHASE_UPDATING: The cluster configuration is being updated.\n - CLUSTER_PHASE_FAILED_TO_UPDATE: The cluster update process failed.\n - CLUSTER_PHASE_SCALING: The cluster is undergoing scaling (up or down).\n - CLUSTER_PHASE_UPGRADING: The Qdrant version in the cluster is being upgraded.\n - CLUSTER_PHASE_SUSPENDING: The cluster is in the process of being suspended.\n - CLUSTER_PHASE_SUSPENDED: The cluster is currently suspended (inactive).\n - CLUSTER_PHASE_FAILED_TO_SUSPEND: The cluster suspension process failed.\n - CLUSTER_PHASE_RESUMING: The cluster is resuming from a suspended state.\n - CLUSTER_PHASE_FAILED_TO_RESUME: The cluster resumption process failed.\n - CLUSTER_PHASE_HEALTHY: The cluster is operational and healthy.\n - CLUSTER_PHASE_NOT_READY: The cluster is operational but not all components are ready or healthy.\n - CLUSTER_PHASE_RECOVERY_MODE: The cluster is in recovery mode, potentially after a failure.\n - CLUSTER_PHASE_MANUAL_MAINTENANCE: The cluster is under manual maintenance.\n - CLUSTER_PHASE_FAILED_TO_SYNC: There was an error syncing the cluster in the cloud provider region.\n - CLUSTER_PHASE_NOT_FOUND: The cluster was expected but not found in the cloud provider region."
    },
    "v1ClusterScalabilityInfo": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1ClusterScalabilityStatus",
          "description": "The current scalability status of the cluster."
        },
        "reason": {
          "type": "string",
          "description": "Optional human-readable reason providing more context about the scalability status.\nWhen a cluster is not scalable, this field explains why."
        }
      },
      "title": "ClusterScalabilityInfo provides information about the"
    },
    "v1ClusterScalabilityStatus": {
      "type": "string",
      "enum": [
        "CLUSTER_SCALABILITY_STATUS_UNSPECIFIED",
        "CLUSTER_SCALABILITY_STATUS_NOT_SCALABLE",
        "CLUSTER_SCALABILITY_STATUS_SCALABLE"
      ],
      "default": "CLUSTER_SCALABILITY_STATUS_UNSPECIFIED",
      "description": "ClusterScalabilityStatus defines the scalability states of a cluster.\n\n - CLUSTER_SCALABILITY_STATUS_UNSPECIFIED: Scalability status is unspecified.\n - CLUSTER_SCALABILITY_STATUS_NOT_SCALABLE: The cluster is not scalable.\n - CLUSTER_SCALABILITY_STATUS_SCALABLE: The cluster supports scaling operations."
    },
    "v1ClusterServiceType": {
      "type": "string",
      "enum": [
        "CLUSTER_SERVICE_TYPE_UNSPECIFIED",
        "CLUSTER_SERVICE_TYPE_CLUSTER_IP",
        "CLUSTER_SERVICE_TYPE_NODE_PORT",
        "CLUSTER_SERVICE_TYPE_LOAD_BALANCER"
      ],
      "default": "CLUSTER_SERVICE_TYPE_UNSPECIFIED",
      "description": "- CLUSTER_SERVICE_TYPE_UNSPECIFIED: Service type is unspecified.\n - CLUSTER_SERVICE_TYPE_CLUSTER_IP: Use a service configured with type ClusterIP.\n - CLUSTER_SERVICE_TYPE_NODE_PORT: Use a service configured with type NodePort.\n - CLUSTER_SERVICE_TYPE_LOAD_BALANCER: Use a service configured with type LoadBalancer.",
      "title": "ClusterServiceType defines the type of service to use for the cluster.\nSee: https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/#ServiceSpec"
    },
    "v1ClusterState": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version of the cluster software."
        },
        "nodesUp": {
          "type": "integer",
          "format": "int64",
          "description": "Number of cluster nodes that are up and running."
        },
        "restartedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the cluster was restarted."
        },
        "phase": {
          "$ref": "#/definitions/v1ClusterPhase",
          "description": "Current phase of the cluster."
        },
        "reason": {
          "type": "string",
          "description": "Reason for the current phase of the cluster."
        },
        "endpoint": {
          "$ref": "#/definitions/v1ClusterEndpoint",
          "description": "Endpoint information to access the qdrant cluster (aka database)."
        },
        "resources": {
          "$ref": "#/definitions/v1ClusterNodeResourcesSummary",
          "title": "The resources used by the cluster per node.\nFor the complete cluster you have to multiply by cluster.configuration.number_of_nodes"
        },
        "scalabilityInfo": {
          "$ref": "#/definitions/v1ClusterScalabilityInfo",
          "description": "Whether the cluster can be scaled up or down."
        },
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ClusterNodeInfo"
          },
          "description": "List of nodes in the cluster."
        }
      },
      "description": "ClusterState represents the current state of a cluster\nAll fields in this message are read-only."
    },
    "v1CreateClusterFromBackupResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/v1Cluster",
          "title": "Cluster created from the backup"
        }
      },
      "description": "CreateClusterFromBackupResponse is the response for the CreateCluster function."
    },
    "v1CreateClusterResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/v1Cluster",
          "title": "The actual cluster"
        }
      },
      "title": "CreateClusterResponse is the response from the CreateCluster function"
    },
    "v1DatabaseConfiguration": {
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/v1DatabaseConfigurationCollection",
          "description": "The default Qdrant database collection configuration.\nThis setting is for both managed and hybrid cloud clusters, see sub-messages for more details.\nThis is an optional field."
        },
        "storage": {
          "$ref": "#/definitions/v1DatabaseConfigurationStorage",
          "description": "The default Qdrant database storage configuration.\nThis setting is for both managed and hybrid cloud clusters.\nThis is an optional field."
        },
        "service": {
          "$ref": "#/definitions/v1DatabaseConfigurationService",
          "title": "The Qdrant database service configuration\nThis setting is for both managed and hybrid cloud clusters, see sub-messages for more details.\nThis is an optional field"
        },
        "logLevel": {
          "$ref": "#/definitions/v1DatabaseConfigurationLogLevel",
          "description": "The log level for the database.\nQdrant is written in Rust and is using: https://docs.rs/log/latest/log/enum.LevelFilter.html\nThis setting is for hybrid cloud clusters only, it is ignored for managed cloud clusters.\nThis is an optional field, default is Info."
        },
        "tls": {
          "$ref": "#/definitions/v1DatabaseConfigurationTls",
          "description": "The Qdrant database TLS configuration.\nThis setting is for hybrid cloud clusters only, it is ignored for managed cloud clusters.\nThis is an optional field, if not set an unsecure connection is provided."
        },
        "inference": {
          "$ref": "#/definitions/v1DatabaseConfigurationInference",
          "title": "The Qdrant database inference configuration.\nThis setting is for managed cloud clusters only, it is ignored for hybrid cloud clusters.\nThis is an optional field, if unset, the database is not configured for cloud inferencing"
        }
      },
      "description": "Configuration to setup a Qdrant database.\nThe settings apply to managed and/or hybrid cloud, see documentation on each message for more details."
    },
    "v1DatabaseConfigurationCollection": {
      "type": "object",
      "properties": {
        "replicationFactor": {
          "type": "integer",
          "format": "int64",
          "title": "Number of replicas of each shard that network tries to maintain\nThis is an optional, the default is 1"
        },
        "writeConsistencyFactor": {
          "type": "integer",
          "format": "int32",
          "title": "How many replicas should apply the operation for us to consider it successful\nThis is an optional, the default is 1"
        },
        "vectors": {
          "$ref": "#/definitions/v1DatabaseConfigurationCollectionVectors",
          "description": "The default parameters for vectors."
        }
      },
      "title": "The default Qdrant database collection configuration"
    },
    "v1DatabaseConfigurationCollectionVectors": {
      "type": "object",
      "properties": {
        "onDisk": {
          "type": "boolean",
          "description": "If set, this will create a collection with all vectors immediately stored in memmap storage.\nThis is the recommended way, in case your Qdrant instance operates with fast disks and you are working with large collections.\nFor more info see: https://qdrant.tech/documentation/concepts/storage/#configuring-memmap-storage\nThis is an optional field, the default value will be true."
        }
      },
      "title": "The default Qdrant database collection vectors configuration"
    },
    "v1DatabaseConfigurationInference": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "If true, the database is configured to use cloud inferencing"
        }
      },
      "title": "DatabaseConfigurationInference contains cloud inferencing configuration"
    },
    "v1DatabaseConfigurationLogLevel": {
      "type": "string",
      "enum": [
        "DATABASE_CONFIGURATION_LOG_LEVEL_UNSPECIFIED",
        "DATABASE_CONFIGURATION_LOG_LEVEL_TRACE",
        "DATABASE_CONFIGURATION_LOG_LEVEL_DEBUG",
        "DATABASE_CONFIGURATION_LOG_LEVEL_INFO",
        "DATABASE_CONFIGURATION_LOG_LEVEL_WARN",
        "DATABASE_CONFIGURATION_LOG_LEVEL_ERROR",
        "DATABASE_CONFIGURATION_LOG_LEVEL_OFF"
      ],
      "default": "DATABASE_CONFIGURATION_LOG_LEVEL_UNSPECIFIED",
      "description": "- DATABASE_CONFIGURATION_LOG_LEVEL_UNSPECIFIED: Unspecified log level.\n - DATABASE_CONFIGURATION_LOG_LEVEL_TRACE: Trace log level.\n - DATABASE_CONFIGURATION_LOG_LEVEL_DEBUG: Debug log level.\n - DATABASE_CONFIGURATION_LOG_LEVEL_INFO: Info log level.\n - DATABASE_CONFIGURATION_LOG_LEVEL_WARN: Warn log level.\n - DATABASE_CONFIGURATION_LOG_LEVEL_ERROR: Error log level.\n - DATABASE_CONFIGURATION_LOG_LEVEL_OFF: Off log level.",
      "title": "DatabaseConfigurationLogLevel defines the supported logging levels for the\nQdrant database. See: https://docs.rs/log/latest/log/enum.LevelFilter.html"
    },
    "v1DatabaseConfigurationService": {
      "type": "object",
      "properties": {
        "apiKey": {
          "$ref": "#/definitions/v1SecretKeyRef",
          "title": "Set an api-key.\nThis setting is for hybrid cloud clusters only, for managed cloud please use qdrant.cloud.cluster.auth.[v1|v2].DatabaseApiKeyService to configure keys.\nIf set, all requests must include a header with the api-key.\nexample header: `api-key: \u003cAPI-KEY\u003e`"
        },
        "readOnlyApiKey": {
          "$ref": "#/definitions/v1SecretKeyRef",
          "title": "Set an api-key for read-only operations.\nThis setting is for hybrid cloud clusters only, for managed cloud please use qdrant.cloud.cluster.auth.[v1|v2].DatabaseApiKeyService to configure keys.\nIf set, all requests must include a header with the api-key.\nexample header: `api-key: \u003cAPI-KEY\u003e`"
        },
        "jwtRbac": {
          "type": "boolean",
          "description": "Enable JWT Role Based Access Control (RBAC).\nThis setting is for both managed and hybrid cloud clusters.\nIf enabled, you can generate JWT tokens with fine-grained rules for access control.\nUse generated token instead of API key."
        },
        "enableTls": {
          "type": "boolean",
          "description": "Enable HTTPS for the REST and gRPC API\nThis setting is for hybrid cloud clusters only, for managed cloud clusters the platform controls it (and clients need to use a secure connection)."
        }
      },
      "title": "The Qdrant database service configuration"
    },
    "v1DatabaseConfigurationStorage": {
      "type": "object",
      "properties": {
        "performance": {
          "$ref": "#/definitions/v1DatabaseConfigurationStoragePerformance",
          "title": "The performance related Qdrant database storage configuration"
        }
      },
      "title": "The Qdrant storage configuration"
    },
    "v1DatabaseConfigurationStoragePerformance": {
      "type": "object",
      "properties": {
        "optimizerCpuBudget": {
          "type": "integer",
          "format": "int32",
          "description": "CPU budget, how many CPUs (threads) to allocate for an optimization job.\nIf 0 - auto selection, keep 1 or more CPUs unallocated depending on CPU size\nIf negative - subtract this number of CPUs from the available CPUs.\nIf positive - use this exact number of CPUs."
        },
        "asyncScorer": {
          "type": "boolean",
          "title": "Enable async scorer which uses io_uring when rescoring.\nOnly supported on Linux, must be enabled in your kernel.\nSee: https://qdrant.tech/articles/io_uring/#and-what-about-qdrant"
        }
      },
      "title": "The performance related Qdrant database storage configuration"
    },
    "v1DatabaseConfigurationTls": {
      "type": "object",
      "properties": {
        "cert": {
          "$ref": "#/definitions/v1SecretKeyRef",
          "title": "Secret to use for the certificate"
        },
        "key": {
          "$ref": "#/definitions/v1SecretKeyRef",
          "title": "Secret to use for the private key"
        }
      },
      "title": "DatabaseConfigurationTls contains the information to setup a TLS connection to the database endpoint"
    },
    "v1DeleteClusterResponse": {
      "type": "object",
      "description": "Empty",
      "title": "DeleteClusterResponse is the response from the DeleteCluster function"
    },
    "v1GetClusterResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/v1Cluster",
          "title": "The actual cluster"
        }
      },
      "title": "GetClusterResponse is the response from the GetCluster function"
    },
    "v1KeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "The key part of a key-value pair"
        },
        "value": {
          "type": "string",
          "title": "The value part of a key-value pair"
        }
      },
      "description": "KeyValue is a key-value tuple (used in e.g. node selectors / annotations)\nThe message represents an object for Kubernetes."
    },
    "v1ListClustersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Cluster"
          },
          "title": "The actual clusters in this list"
        }
      },
      "title": "ListClustersResponse is the response from the ListClusters function"
    },
    "v1ListQdrantReleasesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1QdrantRelease"
          },
          "title": "The actual Qdrant releases in this list"
        }
      },
      "title": "ListQdrantReleasesResponse is the response from the ListQdrantReleases function"
    },
    "v1QdrantRelease": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "Version of the Qdrant release"
        },
        "default": {
          "type": "boolean",
          "description": "Flag to indicate if this is the default release\nThere can be at most a single item in the list that have this property set."
        },
        "releaseNotesUrl": {
          "type": "string",
          "title": "URL to the release notes"
        },
        "remarks": {
          "type": "string",
          "title": "Additional message regarding this release that might be useful to the client\""
        },
        "endOfLife": {
          "type": "boolean",
          "title": "True, if the release version is end of life and not supported anymore"
        },
        "unavailable": {
          "type": "boolean",
          "title": "True, if the release is not available for the cluster creation or updates"
        }
      },
      "title": "QdrantRelease represent a single Qdrant release"
    },
    "v1RestartClusterResponse": {
      "type": "object",
      "description": "Empty",
      "title": "RestartClusterResponse is the response from the RestartCluster function"
    },
    "v1SecretKeyRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the secret (in the same namespace as the QdrantCluster CRD instance)\nThis is a required field"
        },
        "key": {
          "type": "string",
          "title": "The key inside the secret\nThis is a required field"
        }
      },
      "title": "SecretKeyRef is a reference to a Kubernetes secret name and the key inside the secret"
    },
    "v1SuggestClusterNameResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The suggested name for a new cluster."
        }
      },
      "title": "SuggestClusterNameResponse is the response from the SuggestClusterName function"
    },
    "v1SuspendClusterResponse": {
      "type": "object",
      "description": "Empty",
      "title": "SuspendClusterResponse is the response from the SuspendCluster function"
    },
    "v1TolerationEffect": {
      "type": "string",
      "enum": [
        "TOLERATION_EFFECT_UNSPECIFIED",
        "TOLERATION_EFFECT_NO_SCHEDULE",
        "TOLERATION_EFFECT_PREFER_NO_SCHEDULE",
        "TOLERATION_EFFECT_NO_EXECUTE"
      ],
      "default": "TOLERATION_EFFECT_UNSPECIFIED",
      "description": "- TOLERATION_EFFECT_UNSPECIFIED: Unspecified effect.\n - TOLERATION_EFFECT_NO_SCHEDULE: NoSchedule taint effect.\n - TOLERATION_EFFECT_PREFER_NO_SCHEDULE: PreferNoSchedule taint effect.\n - TOLERATION_EFFECT_NO_EXECUTE: NoExecute taint effect.",
      "title": "TolerationEffect represents the effects a taint has on pod scheduling and eviction.\nSee: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/"
    },
    "v1TolerationOperator": {
      "type": "string",
      "enum": [
        "TOLERATION_OPERATOR_UNSPECIFIED",
        "TOLERATION_OPERATOR_EXISTS",
        "TOLERATION_OPERATOR_EQUAL"
      ],
      "default": "TOLERATION_OPERATOR_UNSPECIFIED",
      "description": "- TOLERATION_OPERATOR_UNSPECIFIED: Unspecified operator.\n - TOLERATION_OPERATOR_EXISTS: The operator means the key exists.\n - TOLERATION_OPERATOR_EQUAL: The operator means the key equals the given value.",
      "title": "TolerationOperator defines the valid operators for tolerations.\nSee: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/"
    },
    "v1UpdateClusterResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/v1Cluster",
          "title": "The actual cluster"
        }
      },
      "title": "UpdateClusterResponse is the response from the UpdateCluster function"
    }
  }
}
