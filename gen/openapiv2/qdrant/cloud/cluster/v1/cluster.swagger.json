{
  "swagger": "2.0",
  "info": {
    "title": "qdrant/cloud/cluster/v1/cluster.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ClusterService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/accounts/{accountId}/clusters": {
      "get": {
        "summary": "Fetch all clusters in the account identified by the given ID.\nRequired permissions:\n- read:clusters",
        "operationId": "ClusterService_ListClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ClusterList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hybridCloudId",
            "description": "The optional identifier for hybrid cloud (in Guid format).\nIf ommited all clusters, including the hybrid cloud ones, which belongs to the provided account are returned.\n\nTODO: ListOptions",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      },
      "post": {
        "summary": "Creates a cluster in the account identified by the given ID.\nRequired permissions:\n- write:clusters",
        "operationId": "ClusterService_CreateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "Identifier of the account associated with the cluster (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterServiceCreateClusterBody"
            }
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/accounts/{accountId}/clusters/{clusterId}": {
      "get": {
        "summary": "Fetch a cluster in the account identified by the given IDs.\nRequired permissions:\n- read:clusters",
        "operationId": "ClusterService_GetCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier for the cluster (in Guid format).\nThis cluster should be part of the provided account.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      },
      "delete": {
        "summary": "Deletes a cluster in the account identified by the given ID.\nRequired permissions:\n- delete:clusters",
        "operationId": "ClusterService_DeleteCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier for the cluster (in Guid format).\nThis cluster should be part of the provided account.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleteBackups",
            "description": "If set, the backups of this cluster will be deleted as well.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/accounts/{accountId}/clusters/{id}": {
      "patch": {
        "summary": "Update a cluster in the account identified by the given ID.\nRequired permissions:\n- write:clusters",
        "operationId": "ClusterService_UpdateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "Identifier of the account associated with the cluster (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Unique identifier for the cluster (in Guid format).\nThis is a read-only field and will be available after a cluster is created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterServiceUpdateClusterBody"
            }
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/accounts/{accountId}/releases": {
      "get": {
        "summary": "Fetch all qdrant releases in the account identified by the given ID.\nOptional a cluster ID can be provided, the list will return the options to update to only.\nRequired permissions:\n- read:clusters",
        "operationId": "ClusterService_ListQdrantReleases",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1QdrantReleaseList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier for the cluster (in Guid format).\nThis cluster should be part of the provided account.\nThis is an optional field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/cluster/api-version": {
      "get": {
        "summary": "TODO: Remove in first iteration?\nGet the current API version of this service.\nRequired permissions:\n- None (authenticated only)",
        "operationId": "ClusterService_GetAPIVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Version"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ClusterService"
        ]
      }
    }
  },
  "definitions": {
    "ClusterServiceCreateClusterBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the cluster (in Guid format).\nThis is a read-only field and will be available after a cluster is created."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the cluster was created.\nThis is a read-only field and will be available after a cluster is created."
        },
        "name": {
          "type": "string",
          "title": "Name of the cluster.\nThis is a required field.\nName can only contain letters, numbers, underscores and dashes"
        },
        "cloudProvider": {
          "type": "string",
          "description": "Cloud provider where the cluster is hosted.\nThis is a required field (one of the following: aws, gcp, azure, hybrid).\nAfter creation, this field cannot be changed."
        },
        "cloudRegion": {
          "type": "string",
          "description": "Cloud region where the cluster is located.\nFor hybrid this should be the hybrid cloud ID.\nThis is a required field.\nAfter creation, this field cannot be changed."
        },
        "configuration": {
          "$ref": "#/definitions/v1ClusterConfiguration",
          "description": "Current configuration details of the cluster."
        },
        "state": {
          "$ref": "#/definitions/v1ClusterState",
          "description": "Current state of the cluster.\nAll fields inside `state` are read-only."
        }
      },
      "description": "A Cluster represents one cluster of a Qdrant database."
    },
    "ClusterServiceUpdateClusterBody": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the cluster was created.\nThis is a read-only field and will be available after a cluster is created."
        },
        "name": {
          "type": "string",
          "title": "Name of the cluster.\nThis is a required field.\nName can only contain letters, numbers, underscores and dashes"
        },
        "cloudProvider": {
          "type": "string",
          "description": "Cloud provider where the cluster is hosted.\nThis is a required field (one of the following: aws, gcp, azure, hybrid).\nAfter creation, this field cannot be changed."
        },
        "cloudRegion": {
          "type": "string",
          "description": "Cloud region where the cluster is located.\nFor hybrid this should be the hybrid cloud ID.\nThis is a required field.\nAfter creation, this field cannot be changed."
        },
        "configuration": {
          "$ref": "#/definitions/v1ClusterConfiguration",
          "description": "Current configuration details of the cluster."
        },
        "state": {
          "$ref": "#/definitions/v1ClusterState",
          "description": "Current state of the cluster.\nAll fields inside `state` are read-only."
        }
      },
      "description": "A Cluster represents one cluster of a Qdrant database."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AdditionalResources": {
      "type": "object",
      "properties": {
        "disk": {
          "type": "integer",
          "format": "int64",
          "title": "Additional Disk (expressed in Gib)"
        }
      },
      "title": "Currently not supported, but will be added in the near future:\n Additional CPU (expressed in milli vCPU)\n int cpu = 1;\n Additional Memory (expressed in Gib)\n int ram = 2;"
    },
    "v1Cluster": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the cluster (in Guid format).\nThis is a read-only field and will be available after a cluster is created."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the cluster was created.\nThis is a read-only field and will be available after a cluster is created."
        },
        "accountId": {
          "type": "string",
          "description": "Identifier of the account associated with the cluster (in Guid format).\nThis is a required field."
        },
        "name": {
          "type": "string",
          "title": "Name of the cluster.\nThis is a required field.\nName can only contain letters, numbers, underscores and dashes"
        },
        "cloudProvider": {
          "type": "string",
          "description": "Cloud provider where the cluster is hosted.\nThis is a required field (one of the following: aws, gcp, azure, hybrid).\nAfter creation, this field cannot be changed."
        },
        "cloudRegion": {
          "type": "string",
          "description": "Cloud region where the cluster is located.\nFor hybrid this should be the hybrid cloud ID.\nThis is a required field.\nAfter creation, this field cannot be changed."
        },
        "configuration": {
          "$ref": "#/definitions/v1ClusterConfiguration",
          "description": "Current configuration details of the cluster."
        },
        "state": {
          "$ref": "#/definitions/v1ClusterState",
          "description": "Current state of the cluster.\nAll fields inside `state` are read-only."
        }
      },
      "description": "A Cluster represents one cluster of a Qdrant database."
    },
    "v1ClusterConfiguration": {
      "type": "object",
      "properties": {
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the cluster configuration was last updated.\nThis is a read-only field and will be available after a cluster is created."
        },
        "numberOfNodes": {
          "type": "integer",
          "format": "int64",
          "description": "The number of nodes in a cluster.\nThis should be a number 1...20 [both included]."
        },
        "version": {
          "type": "string",
          "description": "Version of the cluster software.\nIf ommited the latest version will be used and filled out during create.\nUse ListReleases() to determine which versions are allowed to be used.\nSee upgrade guidelines for more info."
        },
        "packageId": {
          "type": "string",
          "description": "The package identifier used to configure the resources of the cluster. Use ListPackages() to select one."
        },
        "additionalResources": {
          "$ref": "#/definitions/v1AdditionalResources",
          "description": "The additional resources on top of the selected package.\nThis is an optional field, if not specified all additional resources are 0."
        },
        "databaseConfiguration": {
          "$ref": "#/definitions/v1DatabaseConfiguration",
          "title": "Configuration to setup a qdrant database in a hybrid cloud.\nIt is ignored for Managed Cloud clusters. This is an optional field"
        },
        "nodeSelector": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeyValue"
          },
          "title": "The node selector for this cluster in a hybrid cloud.\nIt is ignored for Managed Cloud clusters. This is an optional field"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Toleration"
          },
          "title": "List of tolerations for this cluster in a hybrid cloud.\nIt is ignored for Managed Cloud clusters. This is an optional field"
        },
        "annotations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeyValue"
          },
          "title": "List of annotations for this cluster in a hybrid cloud.\nIt is ignored for Managed Cloud clusters. This is an optional field"
        },
        "allowedIpSourceRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of allowed IP source ranges for this cluster. Field is used for both\nhybrid cloud and Managed Cloud clusters. This is an optional field\nTODO: Are both IPv4 and IPv6 supported? --\u003e IPv4 only for now?\nTODO: Do we want to create a reg-ex for validation?"
        },
        "reservedCpuPercentage": {
          "type": "integer",
          "format": "int64",
          "title": "TODO: Ask Bastian if 80 is OK (or it should be 99/100)?\nThe percentage of CPU resources reserved for system components\nThis is an optional field, default is 0.\nNumber between 0..80"
        },
        "reservedMemoryPercentage": {
          "type": "integer",
          "format": "int64",
          "title": "The percentage of RAM resources reserved for system components\nThis is an optional field, default is 0.\nNumber between 0..80"
        }
      },
      "description": "A ClusterConfiguration represents the configuration of a cluster."
    },
    "v1ClusterEndpoint": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "URL to access the qdrant cluster (aka database) without port"
        },
        "restPort": {
          "type": "integer",
          "format": "int32",
          "title": "The port to use for HTTP REST calls (6333)"
        },
        "grpcPort": {
          "type": "integer",
          "format": "int32",
          "title": "The port to use for gRPC calls (6334)"
        }
      },
      "description": "Endpoint information to access the qdrant cluster (aka database).\nAll fields in this message are a read-only field."
    },
    "v1ClusterList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Cluster"
          },
          "description": "TODO: Add an operation timestamp the ListClusters is started, to support the `since` in ListOptions",
          "title": "The actual clusters in this list"
        }
      },
      "description": "List of Clusters."
    },
    "v1ClusterNodeResources": {
      "type": "object",
      "properties": {
        "base": {
          "type": "number",
          "format": "double",
          "description": "Base resources that are part of the standard allocation for the cluster per node.\nThis includes default CPU, memory, storage, etc."
        },
        "complimentary": {
          "type": "number",
          "format": "double",
          "description": "Complimentary resources provided to the cluster at no additional cost.\nThis might include complimentary network bandwidth, credits, etc."
        },
        "additional": {
          "type": "number",
          "format": "double",
          "description": "Additional resources allocated to the cluster.\nThis could include additional storage, compute power, etc."
        },
        "reserved": {
          "type": "number",
          "format": "double",
          "description": "The reserved is the amount used by the system, which cannot be used by the database itself."
        },
        "available": {
          "type": "number",
          "format": "double",
          "title": "The available is the total (base+complimentary+additional) - reserved"
        }
      },
      "description": "ClusterNodeResources represents the allocation of various resources for a cluster per node."
    },
    "v1ClusterNodeResourcesSummary": {
      "type": "object",
      "properties": {
        "disk": {
          "$ref": "#/definitions/v1ClusterNodeResources",
          "title": "Disk resources"
        },
        "ram": {
          "$ref": "#/definitions/v1ClusterNodeResources",
          "title": "Memory resources"
        },
        "cpu": {
          "$ref": "#/definitions/v1ClusterNodeResources",
          "title": "CPU resouces"
        }
      },
      "description": "ClusterResourcesSummary represents the summary of the resources used in this cluster per node."
    },
    "v1ClusterState": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "Version of the cluster software"
        },
        "nodesUp": {
          "type": "integer",
          "format": "int64",
          "title": "Number of cluster nodes that are up and running"
        },
        "restartedAt": {
          "type": "string",
          "format": "date-time",
          "title": "The date and time when the cluster was restarted"
        },
        "phase": {
          "type": "string",
          "description": "Current phase of the cluster\nOne of the following: Creating, ..."
        },
        "reason": {
          "type": "string",
          "description": "Reason for the current phase of the cluster."
        },
        "endpoint": {
          "$ref": "#/definitions/v1ClusterEndpoint",
          "description": "Endpoint information to access the qdrant cluster (aka database)."
        },
        "resources": {
          "$ref": "#/definitions/v1ClusterNodeResourcesSummary",
          "description": "Summary of the resources used by the cluster per node."
        }
      },
      "description": "ClusterState represents the current state of a cluster\nAll fields in this message are read-only."
    },
    "v1DatabaseConfiguration": {
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/v1QdrantConfigurationCollection"
        },
        "storage": {
          "$ref": "#/definitions/v1QdrantConfigurationStorage"
        },
        "service": {
          "$ref": "#/definitions/v1QdrantConfigurationService"
        },
        "logLevel": {
          "type": "string"
        },
        "tls": {
          "$ref": "#/definitions/v1QdrantConfigurationTls"
        }
      },
      "description": "TODO: Messages below needs comments and validation!\nConfiguration to setup a qdrant database in a hybrid cloud."
    },
    "v1KeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "The key part of a key-value pair"
        },
        "value": {
          "type": "string",
          "title": "The value part of a key-value pair"
        }
      },
      "title": "KeyValue is a key-value tuple (used in e.g. node selectors / annotations)\nThe message represents an object for Kubernetes.\nTODO: Move to common.v1"
    },
    "v1QdrantConfigApiKey": {
      "type": "object",
      "properties": {
        "secretKeyRef": {
          "$ref": "#/definitions/v1SecretKeyRef"
        }
      }
    },
    "v1QdrantConfigSecretKey": {
      "type": "object",
      "properties": {
        "secretKeyRef": {
          "$ref": "#/definitions/v1SecretKeyRef"
        }
      }
    },
    "v1QdrantConfigurationCollection": {
      "type": "object",
      "properties": {
        "replicationFactor": {
          "type": "integer",
          "format": "int64"
        },
        "writeConsistencyFactor": {
          "type": "integer",
          "format": "int32"
        },
        "vectors": {
          "$ref": "#/definitions/v1QdrantConfigurationCollectionVectors"
        }
      }
    },
    "v1QdrantConfigurationCollectionVectors": {
      "type": "object",
      "properties": {
        "onDisk": {
          "type": "boolean"
        }
      }
    },
    "v1QdrantConfigurationService": {
      "type": "object",
      "properties": {
        "apiKey": {
          "$ref": "#/definitions/v1QdrantConfigApiKey"
        },
        "readOnlyApiKey": {
          "$ref": "#/definitions/v1QdrantConfigApiKey"
        },
        "jwtRbac": {
          "type": "boolean"
        },
        "enableTls": {
          "type": "boolean"
        }
      }
    },
    "v1QdrantConfigurationStorage": {
      "type": "object",
      "properties": {
        "performance": {
          "$ref": "#/definitions/v1QdrantConfigurationStoragePerformance"
        }
      }
    },
    "v1QdrantConfigurationStoragePerformance": {
      "type": "object",
      "properties": {
        "optimizerCpuBudget": {
          "type": "integer",
          "format": "int32"
        },
        "asyncScorer": {
          "type": "boolean"
        }
      }
    },
    "v1QdrantConfigurationTls": {
      "type": "object",
      "properties": {
        "cert": {
          "$ref": "#/definitions/v1QdrantConfigSecretKey"
        },
        "key": {
          "$ref": "#/definitions/v1QdrantConfigSecretKey"
        }
      }
    },
    "v1QdrantRelease": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "Version of the Qdrant release"
        },
        "default": {
          "type": "boolean",
          "description": "Flag to indicate if this is the default release\nThere can be at most a single item in the list that have this property set."
        },
        "releaseNotesUrl": {
          "type": "string",
          "title": "URL to the release notes"
        },
        "remarks": {
          "type": "string",
          "title": "Additional message regarding this release that might be useful to the client\""
        }
      },
      "title": "QdrantRelease represent a single Qdrant release"
    },
    "v1QdrantReleaseList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1QdrantRelease"
          },
          "title": "The actual Qdrant releases in this list"
        }
      },
      "title": "List of QdrantReleases"
    },
    "v1SecretKeyRef": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1Toleration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to match against the key of a node label."
        },
        "operator": {
          "type": "string",
          "title": "The operator represents a key's relationship to the value.\nValid operators are \"Exists\" and \"Equal\".\nThe default is Exists"
        },
        "value": {
          "type": "string",
          "description": "The value to match against the value of a node label."
        },
        "effect": {
          "type": "string",
          "title": "The effect indicates the taint effect to match.\nValid effects are \"NoSchedule\", \"PreferNoSchedule\", and \"NoExecute\".\nThe default is NoSchedule"
        },
        "tolerationSeconds": {
          "type": "string",
          "format": "uint64",
          "description": "The toleration seconds indicates the duration to tolerate the taint."
        }
      },
      "description": "The Toleration message represents a toleration object for Kubernetes."
    },
    "v1Version": {
      "type": "object",
      "properties": {
        "major": {
          "type": "integer",
          "format": "int32",
          "title": "Major version (increasing may break APIs)"
        },
        "minor": {
          "type": "integer",
          "format": "int32",
          "title": "Minor version (increased for new features)"
        },
        "patch": {
          "type": "integer",
          "format": "int32",
          "title": "Patch version (increased for fixes)"
        }
      },
      "description": "Semantic version number."
    }
  }
}
