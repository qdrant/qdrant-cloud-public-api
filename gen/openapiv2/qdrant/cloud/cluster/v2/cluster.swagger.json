{
  "swagger": "2.0",
  "info": {
    "title": "qdrant/cloud/cluster/v2/cluster.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ClusterService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/cluster/v2/accounts/{accountId}/clusters": {
      "get": {
        "summary": "Fetch all clusters in the account identified by the given ID.\nRequired permissions:\n- read:clusters",
        "operationId": "ClusterService_ListClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListClustersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hybridCloudId",
            "description": "The optional identifier for hybrid cloud (in Guid format).\nIf ommited all clusters, including the hybrid cloud ones, which belongs to the provided account are returned.\n\nTODO: ListOptions",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/cluster/v2/accounts/{accountId}/clusters/{clusterId}": {
      "get": {
        "summary": "Fetch a cluster in the account identified by the given IDs.\nRequired permissions:\n- read:clusters",
        "operationId": "ClusterService_GetCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier for the cluster (in Guid format).\nThis cluster should be part of the provided account.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      },
      "delete": {
        "summary": "Deletes a cluster in the account identified by the given ID.\nRequired permissions:\n- delete:clusters",
        "operationId": "ClusterService_DeleteCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2DeleteClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier for the cluster (in Guid format).\nThis cluster should be part of the provided account.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleteBackups",
            "description": "If set, the backups of this cluster will be deleted as well.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/cluster/v2/accounts/{accountId}/releases": {
      "get": {
        "summary": "Fetch all qdrant releases in the account identified by the given ID.\nOptional a cluster ID can be provided, the list will return the options to update to only.\nRequired permissions:\n- read:clusters",
        "operationId": "ClusterService_ListQdrantReleases",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ListQdrantReleasesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier for the cluster (in Guid format).\nThis cluster should be part of the provided account.\nThis is an optional field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/cluster/v2/accounts/{cluster.accountId}/clusters": {
      "post": {
        "summary": "Creates a cluster in the account identified by the given ID.\nRequired permissions:\n- write:clusters",
        "operationId": "ClusterService_CreateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2CreateClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster.accountId",
            "description": "Identifier of the account associated with the cluster (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterServiceCreateClusterBody"
            }
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/cluster/v2/accounts/{cluster.accountId}/clusters/{cluster.id}": {
      "patch": {
        "summary": "Update a cluster in the account identified by the given ID.\nRequired permissions:\n- write:clusters",
        "operationId": "ClusterService_UpdateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UpdateClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster.accountId",
            "description": "Identifier of the account associated with the cluster (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster.id",
            "description": "Unique identifier for the cluster (in Guid format).\nThis is a read-only field and will be available after a cluster is created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterServiceUpdateClusterBody"
            }
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/cluster/v2/api-version": {
      "get": {
        "summary": "TODO: Remove in first iteration?\nGet the current API version of this service.\nRequired permissions:\n- None (authenticated only)",
        "operationId": "ClusterService_GetAPIVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cloudclusterv2GetAPIVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ClusterService"
        ]
      }
    }
  },
  "definitions": {
    "ClusterServiceCreateClusterBody": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier for the cluster (in Guid format).\nThis is a read-only field and will be available after a cluster is created."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the cluster was created.\nThis is a read-only field and will be available after a cluster is created."
            },
            "name": {
              "type": "string",
              "title": "Name of the cluster.\nThis is a required field.\nName can only contain letters, numbers, underscores and dashes"
            },
            "cloudProvider": {
              "type": "string",
              "description": "Cloud provider where the cluster is hosted.\nThis is a required field (one of the following: aws, gcp, azure, hybrid).\nAfter creation, this field cannot be changed."
            },
            "cloudRegion": {
              "type": "string",
              "description": "Cloud region where the cluster is located.\nFor hybrid this should be the hybrid cloud ID.\nThis is a required field.\nAfter creation, this field cannot be changed."
            },
            "configuration": {
              "$ref": "#/definitions/v2ClusterConfiguration",
              "description": "Current configuration details of the cluster."
            },
            "state": {
              "$ref": "#/definitions/v2ClusterState",
              "description": "Current state of the cluster.\nAll fields inside `state` are read-only."
            }
          },
          "title": "The actual cluster"
        }
      },
      "title": "CreateClusterRequest is the request for the CreateCluster function"
    },
    "ClusterServiceUpdateClusterBody": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp when the cluster was created.\nThis is a read-only field and will be available after a cluster is created."
            },
            "name": {
              "type": "string",
              "title": "Name of the cluster.\nThis is a required field.\nName can only contain letters, numbers, underscores and dashes"
            },
            "cloudProvider": {
              "type": "string",
              "description": "Cloud provider where the cluster is hosted.\nThis is a required field (one of the following: aws, gcp, azure, hybrid).\nAfter creation, this field cannot be changed."
            },
            "cloudRegion": {
              "type": "string",
              "description": "Cloud region where the cluster is located.\nFor hybrid this should be the hybrid cloud ID.\nThis is a required field.\nAfter creation, this field cannot be changed."
            },
            "configuration": {
              "$ref": "#/definitions/v2ClusterConfiguration",
              "description": "Current configuration details of the cluster."
            },
            "state": {
              "$ref": "#/definitions/v2ClusterState",
              "description": "Current state of the cluster.\nAll fields inside `state` are read-only."
            }
          },
          "title": "The actual cluster"
        }
      },
      "title": "UpdateClusterRequest is the request for the UpdateCluster function"
    },
    "cloudclusterv2GetAPIVersionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/v1Version",
          "title": "The actual version"
        }
      },
      "title": "GetAPIVersionResponse is the response from the GetAPIVersion function"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1KeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "The key part of a key-value pair"
        },
        "value": {
          "type": "string",
          "title": "The value part of a key-value pair"
        }
      },
      "title": "KeyValue is a key-value tuple (used in e.g. node selectors / annotations)\nThe message represents an object for Kubernetes.\nTODO: Move to common.v1"
    },
    "v1SecretKeyRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the secret (in the same namespace as the QdrantCluster CRD instance)\nThis is a required field"
        },
        "key": {
          "type": "string",
          "title": "The key inside the secret\nThis is a required field"
        }
      },
      "title": "SecretKeyRef is a reference to a Kubernetes secret name and the key inside the secret"
    },
    "v1Version": {
      "type": "object",
      "properties": {
        "major": {
          "type": "integer",
          "format": "int32",
          "title": "Major version (increasing may break APIs)"
        },
        "minor": {
          "type": "integer",
          "format": "int32",
          "title": "Minor version (increased for new features)"
        },
        "patch": {
          "type": "integer",
          "format": "int32",
          "title": "Patch version (increased for fixes)"
        }
      },
      "description": "Semantic version number."
    },
    "v2AdditionalResources": {
      "type": "object",
      "properties": {
        "disk": {
          "type": "integer",
          "format": "int64",
          "title": "Additional Disk (expressed in Gib)"
        }
      },
      "description": "Currently not supported, but will be added in the near future:\n Additional CPU (expressed in milli vCPU)\n int cpu = 1;\n Additional Memory (expressed in Gib)\n int ram = 2;",
      "title": "AdditionalResources contans the information about additional resources"
    },
    "v2Cluster": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the cluster (in Guid format).\nThis is a read-only field and will be available after a cluster is created."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the cluster was created.\nThis is a read-only field and will be available after a cluster is created."
        },
        "accountId": {
          "type": "string",
          "description": "Identifier of the account associated with the cluster (in Guid format).\nThis is a required field."
        },
        "name": {
          "type": "string",
          "title": "Name of the cluster.\nThis is a required field.\nName can only contain letters, numbers, underscores and dashes"
        },
        "cloudProvider": {
          "type": "string",
          "description": "Cloud provider where the cluster is hosted.\nThis is a required field (one of the following: aws, gcp, azure, hybrid).\nAfter creation, this field cannot be changed."
        },
        "cloudRegion": {
          "type": "string",
          "description": "Cloud region where the cluster is located.\nFor hybrid this should be the hybrid cloud ID.\nThis is a required field.\nAfter creation, this field cannot be changed."
        },
        "configuration": {
          "$ref": "#/definitions/v2ClusterConfiguration",
          "description": "Current configuration details of the cluster."
        },
        "state": {
          "$ref": "#/definitions/v2ClusterState",
          "description": "Current state of the cluster.\nAll fields inside `state` are read-only."
        }
      },
      "description": "A Cluster represents one cluster of a Qdrant database."
    },
    "v2ClusterConfiguration": {
      "type": "object",
      "properties": {
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the cluster configuration was last updated.\nThis is a read-only field and will be available after a cluster is created."
        },
        "numberOfNodes": {
          "type": "integer",
          "format": "int64",
          "description": "The number of nodes in a cluster.\nThis should be a number 1...20 [both included]."
        },
        "version": {
          "type": "string",
          "description": "Version of the cluster software.\nIf ommited the latest version will be used and filled out during create.\nUse ListReleases() to determine which versions are allowed to be used.\nSee upgrade guidelines for more info."
        },
        "packageId": {
          "type": "string",
          "description": "The package identifier used to configure the resources of the cluster. Use ListPackages() to select one."
        },
        "additionalResources": {
          "$ref": "#/definitions/v2AdditionalResources",
          "description": "The additional resources on top of the selected package.\nThis is an optional field, if not specified all additional resources are 0."
        },
        "databaseConfiguration": {
          "$ref": "#/definitions/v2DatabaseConfiguration",
          "title": "Configuration to setup a qdrant database in a hybrid cloud.\nIt is ignored for Managed Cloud clusters. This is an optional field"
        },
        "nodeSelector": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeyValue"
          },
          "title": "The node selector for this cluster in a hybrid cloud.\nIt is ignored for Managed Cloud clusters. This is an optional field"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Toleration"
          },
          "title": "List of tolerations for this cluster in a hybrid cloud.\nIt is ignored for Managed Cloud clusters. This is an optional field"
        },
        "annotations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeyValue"
          },
          "title": "List of annotations for this cluster in a hybrid cloud.\nIt is ignored for Managed Cloud clusters. This is an optional field"
        },
        "allowedIpSourceRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of allowed IP source ranges for this cluster. Field is used for both\nhybrid cloud and Managed Cloud clusters. This is an optional field\nTODO: Are both IPv4 and IPv6 supported? --\u003e IPv4 only for now?\nTODO: Do we want to create a reg-ex for validation?"
        },
        "reservedCpuPercentage": {
          "type": "integer",
          "format": "int64",
          "title": "TODO: Ask Bastian if 80 is OK (or it should be 99/100)?\nThe percentage of CPU resources reserved for system components\nThis is an optional field, default is 0.\nNumber between 0..80"
        },
        "reservedMemoryPercentage": {
          "type": "integer",
          "format": "int64",
          "title": "The percentage of RAM resources reserved for system components\nThis is an optional field, default is 0.\nNumber between 0..80"
        }
      },
      "description": "A ClusterConfiguration represents the configuration of a cluster."
    },
    "v2ClusterEndpoint": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "URL to access the qdrant cluster (aka database) without port"
        },
        "restPort": {
          "type": "integer",
          "format": "int32",
          "title": "The port to use for HTTP REST calls (6333)"
        },
        "grpcPort": {
          "type": "integer",
          "format": "int32",
          "title": "The port to use for gRPC calls (6334)"
        }
      },
      "description": "Endpoint information to access the qdrant cluster (aka database).\nAll fields in this message are a read-only field."
    },
    "v2ClusterNodeResources": {
      "type": "object",
      "properties": {
        "base": {
          "type": "number",
          "format": "double",
          "description": "Base resources that are part of the standard allocation for the cluster per node.\nThis includes default CPU, memory, storage, etc."
        },
        "complimentary": {
          "type": "number",
          "format": "double",
          "description": "Complimentary resources provided to the cluster at no additional cost.\nThis might include complimentary network bandwidth, credits, etc."
        },
        "additional": {
          "type": "number",
          "format": "double",
          "description": "Additional resources allocated to the cluster.\nThis could include additional storage, compute power, etc."
        },
        "reserved": {
          "type": "number",
          "format": "double",
          "description": "The reserved is the amount used by the system, which cannot be used by the database itself."
        },
        "available": {
          "type": "number",
          "format": "double",
          "title": "The available is the total (base+complimentary+additional) - reserved"
        }
      },
      "description": "ClusterNodeResources represents the allocation of various resources for a cluster per node."
    },
    "v2ClusterNodeResourcesSummary": {
      "type": "object",
      "properties": {
        "disk": {
          "$ref": "#/definitions/v2ClusterNodeResources",
          "title": "Disk resources"
        },
        "ram": {
          "$ref": "#/definitions/v2ClusterNodeResources",
          "title": "Memory resources"
        },
        "cpu": {
          "$ref": "#/definitions/v2ClusterNodeResources",
          "title": "CPU resouces"
        }
      },
      "description": "ClusterResourcesSummary represents the summary of the resources used in this cluster per node."
    },
    "v2ClusterState": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "Version of the cluster software"
        },
        "nodesUp": {
          "type": "integer",
          "format": "int64",
          "title": "Number of cluster nodes that are up and running"
        },
        "restartedAt": {
          "type": "string",
          "format": "date-time",
          "title": "The date and time when the cluster was restarted"
        },
        "phase": {
          "type": "string",
          "description": "Current phase of the cluster\nOne of the following: Creating, ..."
        },
        "reason": {
          "type": "string",
          "description": "Reason for the current phase of the cluster."
        },
        "endpoint": {
          "$ref": "#/definitions/v2ClusterEndpoint",
          "description": "Endpoint information to access the qdrant cluster (aka database)."
        },
        "resources": {
          "$ref": "#/definitions/v2ClusterNodeResourcesSummary",
          "description": "Summary of the resources used by the cluster per node."
        }
      },
      "description": "ClusterState represents the current state of a cluster\nAll fields in this message are read-only."
    },
    "v2CreateClusterResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/v2Cluster",
          "title": "The actual cluster"
        }
      },
      "title": "CreateClusterResponse is the response from the CreateCluster function"
    },
    "v2DatabaseConfiguration": {
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/v2DatabaseConfigurationCollection",
          "title": "The default Qdrant database collection configuration\nThis is an optional field"
        },
        "storage": {
          "$ref": "#/definitions/v2DatabaseConfigurationStorage",
          "title": "The default Qdrant database storage configuration\nThis is an optional field"
        },
        "service": {
          "$ref": "#/definitions/v2DatabaseConfigurationService",
          "title": "The Qdrant database service configuration\nThis is an optional field"
        },
        "logLevel": {
          "type": "string",
          "title": "The log level for the database\nThis is an optional field\nTODO: Validation for the allowed values"
        },
        "tls": {
          "$ref": "#/definitions/v2DatabaseConfigurationTls",
          "title": "The Qdrant database TLS configuration\nThis is an optional field, if not set an unsecure connection is provided"
        }
      },
      "description": "TODO: Messages below needs comments and validation!\nConfiguration to setup a Qdrant database in a hybrid cloud."
    },
    "v2DatabaseConfigurationCollection": {
      "type": "object",
      "properties": {
        "replicationFactor": {
          "type": "integer",
          "format": "int64",
          "title": "Number of replicas of each shard that network tries to maintain\nThis is an optional, the default is 1"
        },
        "writeConsistencyFactor": {
          "type": "integer",
          "format": "int32",
          "title": "How many replicas should apply the operation for us to consider it successful\nThis is an optional, the default is 1"
        },
        "vectors": {
          "$ref": "#/definitions/v2DatabaseConfigurationCollectionVectors",
          "description": "The default parameters for vectors."
        }
      },
      "title": "The default Qdrant database collection configuration"
    },
    "v2DatabaseConfigurationCollectionVectors": {
      "type": "object",
      "properties": {
        "onDisk": {
          "type": "boolean",
          "description": "If set, this will create a collection with all vectors immediately stored in memmap storage.\nThis is the recommended way, in case your Qdrant instance operates with fast disks and you are working with large collections.\nFor more info see: https://qdrant.tech/documentation/concepts/storage/#configuring-memmap-storage\nThis is an optional field, TODO:? default will be true."
        }
      },
      "title": "The default Qdrant database collection vectors configuration"
    },
    "v2DatabaseConfigurationService": {
      "type": "object",
      "properties": {
        "apiKey": {
          "$ref": "#/definitions/v1SecretKeyRef",
          "title": "Set an api-key.\nIf set, all requests must include a header with the api-key.\nexample header: `api-key: \u003cAPI-KEY\u003e`"
        },
        "readOnlyApiKey": {
          "$ref": "#/definitions/v1SecretKeyRef",
          "title": "Set an api-key for read-only operations.\nIf set, all requests must include a header with the api-key.\nexample header: `api-key: \u003cAPI-KEY\u003e`"
        },
        "jwtRbac": {
          "type": "boolean",
          "description": "Enable JWT Role Based Access Control (RBAC).\nIf enabled, you can generate JWT tokens with fine-grained rules for access control.\nUse generated token instead of API key."
        },
        "enableTls": {
          "type": "boolean",
          "title": "Enable HTTPS for the REST and gRPC API"
        }
      },
      "title": "The Qdrant database service configuration"
    },
    "v2DatabaseConfigurationStorage": {
      "type": "object",
      "properties": {
        "performance": {
          "$ref": "#/definitions/v2DatabaseConfigurationStoragePerformance",
          "title": "The performance related Qdrant database storage configuration"
        }
      },
      "title": "The Qdrant storage configuration"
    },
    "v2DatabaseConfigurationStoragePerformance": {
      "type": "object",
      "properties": {
        "optimizerCpuBudget": {
          "type": "integer",
          "format": "int32",
          "description": "CPU budget, how many CPUs (threads) to allocate for an optimization job.\nIf 0 - auto selection, keep 1 or more CPUs unallocated depending on CPU size\nIf negative - subtract this number of CPUs from the available CPUs.\nIf positive - use this exact number of CPUs."
        },
        "asyncScorer": {
          "type": "boolean",
          "title": "Enable async scorer which uses io_uring when rescoring.\nOnly supported on Linux, must be enabled in your kernel.\nSee: https://qdrant.tech/articles/io_uring/#and-what-about-qdrant"
        }
      },
      "title": "The performance related Qdrant database storage configuration"
    },
    "v2DatabaseConfigurationTls": {
      "type": "object",
      "properties": {
        "cert": {
          "$ref": "#/definitions/v1SecretKeyRef",
          "title": "Secret to use for the certificate"
        },
        "key": {
          "$ref": "#/definitions/v1SecretKeyRef",
          "title": "Secret to use for the private key"
        }
      },
      "title": "DatabaseConfigurationTls contains the information to setup a TLS connection to the database endpoint"
    },
    "v2DeleteClusterResponse": {
      "type": "object",
      "description": "Empty",
      "title": "DeleteClusterResponse is the response from the DeleteCluster function"
    },
    "v2GetClusterResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/v2Cluster",
          "title": "The actual cluster"
        }
      },
      "title": "GetClusterResponse is the response from the GetCluster function"
    },
    "v2ListClustersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2Cluster"
          },
          "description": "TODO: Add an operation timestamp the ListClusters is started, to support the `since` in ListOptions",
          "title": "The actual clusters in this list"
        }
      },
      "title": "ListClustersResponse is the response from the ListClusters function"
    },
    "v2ListQdrantReleasesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v2QdrantRelease"
          },
          "title": "The actual Qdrant releases in this list"
        }
      },
      "title": "ListQdrantReleasesResponse is the response from the ListQdrantReleases function"
    },
    "v2QdrantRelease": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "Version of the Qdrant release"
        },
        "default": {
          "type": "boolean",
          "description": "Flag to indicate if this is the default release\nThere can be at most a single item in the list that have this property set."
        },
        "releaseNotesUrl": {
          "type": "string",
          "title": "URL to the release notes"
        },
        "remarks": {
          "type": "string",
          "title": "Additional message regarding this release that might be useful to the client\""
        }
      },
      "title": "QdrantRelease represent a single Qdrant release"
    },
    "v2Toleration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to match against the key of a node label."
        },
        "operator": {
          "type": "string",
          "title": "The operator represents a key's relationship to the value.\nValid operators are \"Exists\" and \"Equal\".\nThe default is Exists"
        },
        "value": {
          "type": "string",
          "description": "The value to match against the value of a node label."
        },
        "effect": {
          "type": "string",
          "title": "The effect indicates the taint effect to match.\nValid effects are \"NoSchedule\", \"PreferNoSchedule\", and \"NoExecute\".\nThe default is NoSchedule"
        },
        "tolerationSeconds": {
          "type": "string",
          "format": "uint64",
          "description": "The toleration seconds indicates the duration to tolerate the taint."
        }
      },
      "description": "The Toleration message represents a toleration object for Kubernetes."
    },
    "v2UpdateClusterResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/v2Cluster",
          "title": "The actual cluster"
        }
      },
      "title": "UpdateClusterResponse is the response from the UpdateCluster function"
    }
  }
}
