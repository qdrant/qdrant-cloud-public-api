{
  "swagger": "2.0",
  "info": {
    "title": "qdrant/cloud/cluster/backup/v1/backup.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "BackupService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/cluster/backup/v1/accounts/{accountId}/backup_restores": {
      "get": {
        "summary": "Lists all backup restores in the account identified by the given ID.\nRequired permissions:\n- read:backups",
        "operationId": "BackupService_ListBackupRestores",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBackupRestoresResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier of the cluster (in GUID format).\nWhen this field is set, only backup restores that belong to the cluster are returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BackupService"
        ]
      }
    },
    "/api/cluster/backup/v1/accounts/{accountId}/backup_schedules": {
      "get": {
        "summary": "Lists all backup schedules in the account identified by the given ID.\nRequired permissions:\n- read:backup_schedules",
        "operationId": "BackupService_ListBackupSchedules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBackupSchedulesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier of the cluster (in GUID format).\nWhen this field is set, only backup schedules that belong to the cluster are returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BackupService"
        ]
      }
    },
    "/api/cluster/backup/v1/accounts/{accountId}/backup_schedules/{backupScheduleId}": {
      "get": {
        "summary": "Gets a backup schedule in the account identified by the given ID.\nRequired permissions:\n- read:backup_schedules",
        "operationId": "BackupService_GetBackupSchedule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBackupScheduleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupScheduleId",
            "description": "The identifier for the backup schedule (in GUID format).\nThis backup schedule should be part of the provided cluster and account.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier for the cluster (in GUID format).\nThis cluster should be part of the provided account.\nThis is a required field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BackupService"
        ]
      },
      "delete": {
        "summary": "Deletes a backup schedule in the account identified by the given ID.\nRequired permissions:\n- delete:backup_schedules",
        "operationId": "BackupService_DeleteBackupSchedule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteBackupScheduleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupScheduleId",
            "description": "The identifier for the backup schedule (in GUID format).\nThis backup schedule should be part of the provided account.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleteBackups",
            "description": "If set, the backups generated by this backup schedule will be deleted as well.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "BackupService"
        ]
      }
    },
    "/api/cluster/backup/v1/accounts/{accountId}/backups": {
      "get": {
        "summary": "Lists all backups in the account identified by the given ID.\nRequired permissions:\n- read:backups",
        "operationId": "BackupService_ListBackups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListBackupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "description": "The identifier of the cluster (in GUID format).\nWhen this field is set, only backups that belong to the cluster are returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "backupScheduleId",
            "description": "The identifier of the schedule (in GUID format).\nWhen this field is set, only backups triggered by the backup schedule are returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "Maximum number of items to return.\nIf not specified, all items are returned.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous call.\nProvide this to retrieve the subsequent page.\nWhen paginating, all other parameters provided to the request must match\nthe call that provided the page token.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BackupService"
        ]
      }
    },
    "/api/cluster/backup/v1/accounts/{accountId}/backups/{backupId}": {
      "get": {
        "summary": "Gets a backup in the account identified by the given ID.\nRequired permissions:\n- read:backups",
        "operationId": "BackupService_GetBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBackupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "description": "The identifier of the backup (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BackupService"
        ]
      },
      "delete": {
        "summary": "Deletes a backup in the account identified by the given ID.\nRequired permissions:\n- delete:backups",
        "operationId": "BackupService_DeleteBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteBackupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "description": "The identifier of the backup (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BackupService"
        ]
      }
    },
    "/api/cluster/backup/v1/accounts/{accountId}/backups/{backupId}/restore": {
      "post": {
        "summary": "Restores a backup in the account identified by the given ID.\nRequired permissions:\n- admin:backups",
        "operationId": "BackupService_RestoreBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RestoreBackupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "description": "The identifier of the backup (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BackupService"
        ]
      }
    },
    "/api/cluster/backup/v1/accounts/{backup.accountId}/backups": {
      "post": {
        "summary": "Creates a backup for the cluster identified by the given ID.\nRequired permissions:\n- write:backups",
        "operationId": "BackupService_CreateBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateBackupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "backup.accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupServiceCreateBackupBody"
            }
          }
        ],
        "tags": [
          "BackupService"
        ]
      }
    },
    "/api/cluster/backup/v1/accounts/{backupSchedule.accountId}/backup_schedules": {
      "post": {
        "summary": "Creates a backup schedule in the account identified by the given ID.\nRequired permissions:\n- write:backup_schedules",
        "operationId": "BackupService_CreateBackupSchedule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateBackupScheduleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "backupSchedule.accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupServiceCreateBackupScheduleBody"
            }
          }
        ],
        "tags": [
          "BackupService"
        ]
      }
    },
    "/api/cluster/backup/v1/accounts/{backupSchedule.accountId}/backup_schedules/{backupSchedule.id}": {
      "put": {
        "summary": "Updates a backup schedule in the account identified by the given ID.\nRequired permissions:\n- write:backup_schedules",
        "operationId": "BackupService_UpdateBackupSchedule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateBackupScheduleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "backupSchedule.accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupSchedule.id",
            "description": "Unique identifier for the backup schedule (in GUID format).\nThis is a read-only field and will be available after a backup schedule is created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupServiceUpdateBackupScheduleBody"
            }
          }
        ],
        "tags": [
          "BackupService"
        ]
      }
    }
  },
  "definitions": {
    "BackupServiceCreateBackupBody": {
      "type": "object",
      "properties": {
        "backup": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier for the backup (in GUID format).\nThis is a read-only field and will be available after a backup is created."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp when the backup was created.\nThis is a read-only field and will be available after a backup is created."
            },
            "clusterId": {
              "type": "string",
              "description": "The identifier of the cluster (in GUID format).\nThis is a required field."
            },
            "name": {
              "type": "string",
              "description": "The name of the backup.\nThis is a read-only field and will be available after a backup is created."
            },
            "status": {
              "$ref": "#/definitions/v1BackupStatus",
              "description": "The current status of the backup.\nThis is a read-only field and will be set after CreateBackup is called."
            },
            "deletedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp when the backup was deleted (or when deletion started).\nThis is a read-only field and will be set after DeleteBackup is called."
            },
            "backupDuration": {
              "type": "string",
              "description": "The total time taken to generate the backup. This is a read-only field and\nwill be available after the backup process is completed, regardless of\nwhether it succeeded or failed."
            },
            "backupScheduleId": {
              "type": "string",
              "description": "The identifier of the backup schedule (in GUID format).\nThis is a read-only field and will be present if the backup was created by a backup schedule."
            },
            "clusterInfo": {
              "$ref": "#/definitions/v1ClusterInfo",
              "description": "Cluster details associated with the backup.\nIdentity fields reflect the latest cluster state; configuration reflects the state at backup time.\nThis is a read-only field and will be available after the backup is created."
            }
          },
          "description": "The actual backup.",
          "title": "The actual backup."
        }
      },
      "description": "CreateBackupRequest is the request for the CreateBackup function."
    },
    "BackupServiceCreateBackupScheduleBody": {
      "type": "object",
      "properties": {
        "backupSchedule": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier for the backup schedule (in GUID format).\nThis is a read-only field and will be available after a backup schedule is created."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp when the backup schedule was created.\nThis is a read-only field and will be available after a backup schedule is created."
            },
            "clusterId": {
              "type": "string",
              "description": "The identifier of the cluster (in GUID format).\nThis is a required field."
            },
            "schedule": {
              "type": "string",
              "description": "The schedule that determines when the backup will be created.\nThis field follows the standard crontab format: https://en.wikipedia.org/wiki/Cron#Overview\nThis is a required field."
            },
            "retentionPeriod": {
              "type": "string",
              "description": "The retention period in seconds for the backup. After that period, the backup is deleted from the system.\nThe value should be between 1 day (\u003e= 86400 seconds) and 365 days (\u003c= 31536000 seconds).\nIf the value is unset, backups will be retained indefinitely."
            },
            "deletedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp when the backup schedule was deleted (or when deletion started).\nThis is a read-only field and will be set after DeleteBackupSchedule is called."
            },
            "status": {
              "$ref": "#/definitions/v1BackupScheduleStatus",
              "description": "The current status of the backup schedule."
            }
          },
          "description": "The actual backup schedule.",
          "title": "The actual backup schedule."
        }
      },
      "description": "CreateBackupScheduleRequest is the request for the CreateBackupSchedule function."
    },
    "BackupServiceUpdateBackupScheduleBody": {
      "type": "object",
      "properties": {
        "backupSchedule": {
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp when the backup schedule was created.\nThis is a read-only field and will be available after a backup schedule is created."
            },
            "clusterId": {
              "type": "string",
              "description": "The identifier of the cluster (in GUID format).\nThis is a required field."
            },
            "schedule": {
              "type": "string",
              "description": "The schedule that determines when the backup will be created.\nThis field follows the standard crontab format: https://en.wikipedia.org/wiki/Cron#Overview\nThis is a required field."
            },
            "retentionPeriod": {
              "type": "string",
              "description": "The retention period in seconds for the backup. After that period, the backup is deleted from the system.\nThe value should be between 1 day (\u003e= 86400 seconds) and 365 days (\u003c= 31536000 seconds).\nIf the value is unset, backups will be retained indefinitely."
            },
            "deletedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp when the backup schedule was deleted (or when deletion started).\nThis is a read-only field and will be set after DeleteBackupSchedule is called."
            },
            "status": {
              "$ref": "#/definitions/v1BackupScheduleStatus",
              "description": "The current status of the backup schedule."
            }
          },
          "description": "The actual backup schedule.",
          "title": "The actual backup schedule."
        }
      },
      "description": "UpdateBackupScheduleRequest is the request for the UpdateBackupSchedule function."
    },
    "cloudclusterv1Toleration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key to match against the key of a node label."
        },
        "operator": {
          "$ref": "#/definitions/v1TolerationOperator",
          "description": "The operator represents a key's relationship to the value.\nThe default is TOLERATION_OPERATOR_EXISTS."
        },
        "value": {
          "type": "string",
          "description": "The value to match against the value of a node label."
        },
        "effect": {
          "$ref": "#/definitions/v1TolerationEffect",
          "description": "The effect indicates the taint effect to match.\nThe default is TOLERATION_EFFECT_NO_SCHEDULE."
        },
        "tolerationSeconds": {
          "type": "string",
          "format": "uint64",
          "description": "The toleration seconds indicates the duration to tolerate the taint."
        }
      },
      "description": "The Toleration message represents a toleration object for Kubernetes."
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "v1AdditionalResources": {
      "type": "object",
      "properties": {
        "disk": {
          "type": "integer",
          "format": "int64",
          "title": "Additional Disk (expressed in Gib)"
        }
      },
      "title": "AdditionalResources contains the information about additional resources"
    },
    "v1Backup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the backup (in GUID format).\nThis is a read-only field and will be available after a backup is created."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the backup was created.\nThis is a read-only field and will be available after a backup is created."
        },
        "accountId": {
          "type": "string",
          "description": "The identifier of the account (in GUID format).\nThis is a required field."
        },
        "clusterId": {
          "type": "string",
          "description": "The identifier of the cluster (in GUID format).\nThis is a required field."
        },
        "name": {
          "type": "string",
          "description": "The name of the backup.\nThis is a read-only field and will be available after a backup is created."
        },
        "status": {
          "$ref": "#/definitions/v1BackupStatus",
          "description": "The current status of the backup.\nThis is a read-only field and will be set after CreateBackup is called."
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the backup was deleted (or when deletion started).\nThis is a read-only field and will be set after DeleteBackup is called."
        },
        "backupDuration": {
          "type": "string",
          "description": "The total time taken to generate the backup. This is a read-only field and\nwill be available after the backup process is completed, regardless of\nwhether it succeeded or failed."
        },
        "backupScheduleId": {
          "type": "string",
          "description": "The identifier of the backup schedule (in GUID format).\nThis is a read-only field and will be present if the backup was created by a backup schedule."
        },
        "clusterInfo": {
          "$ref": "#/definitions/v1ClusterInfo",
          "description": "Cluster details associated with the backup.\nIdentity fields reflect the latest cluster state; configuration reflects the state at backup time.\nThis is a read-only field and will be available after the backup is created."
        }
      },
      "description": "A Backup represents a backup of a Qdrant database."
    },
    "v1BackupRestore": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the backup restore (in GUID format)."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the backup restore was created."
        },
        "accountId": {
          "type": "string",
          "description": "The identifier of the account (in GUID format)."
        },
        "clusterId": {
          "type": "string",
          "description": "The identifier of the cluster (in GUID format)."
        },
        "backupId": {
          "type": "string",
          "description": "The Identifier of the backup (in GUID format)."
        },
        "status": {
          "$ref": "#/definitions/v1BackupRestoreStatus",
          "description": "The current status of the backup restore."
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the backup restore was deleted (or when deletion started)."
        }
      },
      "description": "A BackupRestore represents the status of a backup restore.\nAll fields in this message are read-only."
    },
    "v1BackupRestoreStatus": {
      "type": "string",
      "enum": [
        "BACKUP_RESTORE_STATUS_UNSPECIFIED",
        "BACKUP_RESTORE_STATUS_RUNNING",
        "BACKUP_RESTORE_STATUS_FAILED",
        "BACKUP_RESTORE_STATUS_SUCCEEDED",
        "BACKUP_RESTORE_STATUS_FAILED_TO_SYNC",
        "BACKUP_RESTORE_STATUS_NOT_FOUND",
        "BACKUP_RESTORE_STATUS_SKIPPED"
      ],
      "default": "BACKUP_RESTORE_STATUS_UNSPECIFIED",
      "description": "BackupRestoreStatus represents the current status of a backup restore.\n\n - BACKUP_RESTORE_STATUS_UNSPECIFIED: The status is unknown or not specified. This is the default value.\n - BACKUP_RESTORE_STATUS_RUNNING: The backup restore is running.\n - BACKUP_RESTORE_STATUS_FAILED: The backup restore failed to complete successfully.\n - BACKUP_RESTORE_STATUS_SUCCEEDED: The backup restore completed successfully.\n - BACKUP_RESTORE_STATUS_FAILED_TO_SYNC: There was an error syncing the backup restore in the cluster's region.\n - BACKUP_RESTORE_STATUS_NOT_FOUND: The backup restore is missing in the cluster's region.\n - BACKUP_RESTORE_STATUS_SKIPPED: The backup restore is skipped."
    },
    "v1BackupSchedule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the backup schedule (in GUID format).\nThis is a read-only field and will be available after a backup schedule is created."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the backup schedule was created.\nThis is a read-only field and will be available after a backup schedule is created."
        },
        "accountId": {
          "type": "string",
          "description": "The identifier of the account (in GUID format).\nThis is a required field."
        },
        "clusterId": {
          "type": "string",
          "description": "The identifier of the cluster (in GUID format).\nThis is a required field."
        },
        "schedule": {
          "type": "string",
          "description": "The schedule that determines when the backup will be created.\nThis field follows the standard crontab format: https://en.wikipedia.org/wiki/Cron#Overview\nThis is a required field."
        },
        "retentionPeriod": {
          "type": "string",
          "description": "The retention period in seconds for the backup. After that period, the backup is deleted from the system.\nThe value should be between 1 day (\u003e= 86400 seconds) and 365 days (\u003c= 31536000 seconds).\nIf the value is unset, backups will be retained indefinitely."
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the backup schedule was deleted (or when deletion started).\nThis is a read-only field and will be set after DeleteBackupSchedule is called."
        },
        "status": {
          "$ref": "#/definitions/v1BackupScheduleStatus",
          "description": "The current status of the backup schedule."
        }
      },
      "description": "A BackupSchedule represents a recurring schedule for creating backups."
    },
    "v1BackupScheduleStatus": {
      "type": "string",
      "enum": [
        "BACKUP_SCHEDULE_STATUS_UNSPECIFIED",
        "BACKUP_SCHEDULE_STATUS_ACTIVE",
        "BACKUP_SCHEDULE_STATUS_FAILED_TO_SYNC",
        "BACKUP_SCHEDULE_STATUS_NOT_FOUND",
        "BACKUP_SCHEDULE_STATUS_DISABLED"
      ],
      "default": "BACKUP_SCHEDULE_STATUS_UNSPECIFIED",
      "description": "BackupScheduleStatus represents the current status of a backup schedule.\n\n - BACKUP_SCHEDULE_STATUS_UNSPECIFIED: The status is unknown or not specified. This is the default value.\n - BACKUP_SCHEDULE_STATUS_ACTIVE: The backup schedule is active and functioning correctly.\n - BACKUP_SCHEDULE_STATUS_FAILED_TO_SYNC: There was an error syncing the backup schedule in the cluster's region.\n - BACKUP_SCHEDULE_STATUS_NOT_FOUND: The backup schedule is missing in the cluster's region.\n - BACKUP_SCHEDULE_STATUS_DISABLED: The backup schedule is disabled."
    },
    "v1BackupStatus": {
      "type": "string",
      "enum": [
        "BACKUP_STATUS_UNSPECIFIED",
        "BACKUP_STATUS_RUNNING",
        "BACKUP_STATUS_SKIPPED",
        "BACKUP_STATUS_FAILED",
        "BACKUP_STATUS_SUCCEEDED",
        "BACKUP_STATUS_FAILED_TO_SYNC",
        "BACKUP_STATUS_NOT_FOUND"
      ],
      "default": "BACKUP_STATUS_UNSPECIFIED",
      "description": "BackupStatus represents the current status of a backup operation.\n\n - BACKUP_STATUS_UNSPECIFIED: The status is unknown or not specified. This is the default value.\n - BACKUP_STATUS_RUNNING: The backup is currently in progress.\n - BACKUP_STATUS_SKIPPED: The backup was skipped or was not started because it has no suitable target.\n - BACKUP_STATUS_FAILED: The backup failed to complete successfully.\n - BACKUP_STATUS_SUCCEEDED: The backup completed successfully.\n - BACKUP_STATUS_FAILED_TO_SYNC: There was an error syncing the backup in the cluster's region.\n - BACKUP_STATUS_NOT_FOUND: The backup was expected but not found in the cluster's region."
    },
    "v1ClusterConfiguration": {
      "type": "object",
      "properties": {
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the cluster configuration was last updated.\nThis is a read-only field and will be available after a cluster is created."
        },
        "numberOfNodes": {
          "type": "integer",
          "format": "int64",
          "description": "The number of nodes in a cluster.\nThis should be a number 1...20 [both included].\nThis is a required field."
        },
        "version": {
          "type": "string",
          "description": "Version of the cluster software.\nIf omitted the latest version will be used and filled out during create.\nUse ListReleases() to determine which versions are allowed to be used.\nSee upgrade guidelines for more info."
        },
        "packageId": {
          "type": "string",
          "description": "The package identifier used to configure the resources of the cluster. Use `qdrant.cloud.booking.v1.BookingService.ListPackages` to select one.\nThis is a required field."
        },
        "additionalResources": {
          "$ref": "#/definitions/v1AdditionalResources",
          "description": "The additional resources on top of the selected package.\nThis is an optional field, if not specified all additional resources are 0."
        },
        "databaseConfiguration": {
          "$ref": "#/definitions/v1DatabaseConfiguration",
          "description": "Configuration to setup a qdrant database.\nThis is an optional field."
        },
        "nodeSelector": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeyValue"
          },
          "title": "The node selector for this cluster in a hybrid cloud.\nIt is ignored for managed cloud clusters. This is an optional field"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cloudclusterv1Toleration"
          },
          "title": "List of tolerations for this cluster in a hybrid cloud.\nIt is ignored for managed cloud clusters. This is an optional field"
        },
        "annotations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1KeyValue"
          },
          "title": "List of annotations for this cluster in a hybrid cloud.\nIt is ignored for managed cloud clusters. This is an optional field"
        },
        "allowedIpSourceRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of allowed IP source ranges for this cluster.\nField is used for both managed cloud and hybrid cloud and clusters. This is an optional field\nThe CIDRs supports IPv4 only."
        },
        "reservedCpuPercentage": {
          "type": "integer",
          "format": "int64",
          "title": "The percentage of CPU resources reserved for system components\nThis is an optional field, default is 0.\nNumber between 0..80"
        },
        "reservedMemoryPercentage": {
          "type": "integer",
          "format": "int64",
          "title": "The percentage of RAM resources reserved for system components\nThis is an optional field, default is 0.\nNumber between 0..80"
        },
        "gpuType": {
          "$ref": "#/definitions/v1ClusterConfigurationGpuType",
          "title": "The gpu type that should be used for the database\nThis is an optional field, default is No configured GPU"
        },
        "restartPolicy": {
          "$ref": "#/definitions/v1ClusterConfigurationRestartPolicy",
          "title": "The restart policy for the database\nThis is an optional field, default is Automatic"
        },
        "rebalanceStrategy": {
          "$ref": "#/definitions/v1ClusterConfigurationRebalanceStrategy",
          "title": "The automatic shard rebalancing strategy for the database\nThis is an optional field, default is none"
        }
      },
      "description": "A ClusterConfiguration represents the configuration of a cluster."
    },
    "v1ClusterConfigurationGpuType": {
      "type": "string",
      "enum": [
        "CLUSTER_CONFIGURATION_GPU_TYPE_UNSPECIFIED",
        "CLUSTER_CONFIGURATION_GPU_TYPE_NVIDIA",
        "CLUSTER_CONFIGURATION_GPU_TYPE_AMD"
      ],
      "default": "CLUSTER_CONFIGURATION_GPU_TYPE_UNSPECIFIED",
      "description": "ClusterConfigurationGpuType defines GPU types available for clusters.\n\n - CLUSTER_CONFIGURATION_GPU_TYPE_UNSPECIFIED: No GPU is configured.\n - CLUSTER_CONFIGURATION_GPU_TYPE_NVIDIA: Use an NVIDIA GPU.\n - CLUSTER_CONFIGURATION_GPU_TYPE_AMD: Use an AMD GPU."
    },
    "v1ClusterConfigurationRebalanceStrategy": {
      "type": "string",
      "enum": [
        "CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_UNSPECIFIED",
        "CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_BY_COUNT",
        "CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_BY_SIZE",
        "CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_BY_COUNT_AND_SIZE"
      ],
      "default": "CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_UNSPECIFIED",
      "description": "ClusterConfigurationRebalanceStrategy defines shard rebalancing strategies.\n\n - CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_UNSPECIFIED: No rebalancing strategy is configured.\n - CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_BY_COUNT: Rebalance shards by count.\n - CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_BY_SIZE: Rebalance shards by size.\n - CLUSTER_CONFIGURATION_REBALANCE_STRATEGY_BY_COUNT_AND_SIZE: Rebalance shards by both count and size."
    },
    "v1ClusterConfigurationRestartPolicy": {
      "type": "string",
      "enum": [
        "CLUSTER_CONFIGURATION_RESTART_POLICY_UNSPECIFIED",
        "CLUSTER_CONFIGURATION_RESTART_POLICY_ROLLING",
        "CLUSTER_CONFIGURATION_RESTART_POLICY_PARALLEL",
        "CLUSTER_CONFIGURATION_RESTART_POLICY_AUTOMATIC"
      ],
      "default": "CLUSTER_CONFIGURATION_RESTART_POLICY_UNSPECIFIED",
      "description": "ClusterConfigurationRestartPolicy defines restart strategies for the cluster's database.\n\n - CLUSTER_CONFIGURATION_RESTART_POLICY_UNSPECIFIED: Restart policy is unspecified.\n - CLUSTER_CONFIGURATION_RESTART_POLICY_ROLLING: Rolling restart policy (one by one).\n - CLUSTER_CONFIGURATION_RESTART_POLICY_PARALLEL: Parallel restart policy (restart all at once).\n - CLUSTER_CONFIGURATION_RESTART_POLICY_AUTOMATIC: Automatic restart policy."
    },
    "v1ClusterInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The latest name of the cluster that this backup was token from."
        },
        "cloudProviderId": {
          "type": "string",
          "description": "Cloud provider where the cluster is hosted.\nMust match one of the provider IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListCloudProviders` method."
        },
        "cloudProviderRegionId": {
          "type": "string",
          "description": "Cloud provider region where the cluster is hosted.\nMust match one of the region IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListCloudProviderRegions` method.\nFor hybrid this should be the hybrid cloud environment ID."
        },
        "configuration": {
          "$ref": "#/definitions/v1ClusterConfiguration",
          "description": "The cluster configuration at the time of backup."
        }
      },
      "description": "Represents the cluster details associated with a backup.\nThe identity fields (name, cloud_provider_id, cloud_provider_region_id) reflect the latest cluster state.\nThe configuration field is immutable and represents the values at backup time."
    },
    "v1CreateBackupResponse": {
      "type": "object",
      "properties": {
        "backup": {
          "$ref": "#/definitions/v1Backup",
          "description": "The actual backup."
        }
      },
      "description": "CreateBackupResponse is the response from the CreateBackup function."
    },
    "v1CreateBackupScheduleResponse": {
      "type": "object",
      "properties": {
        "backupSchedule": {
          "$ref": "#/definitions/v1BackupSchedule",
          "description": "The actual backup schedule."
        }
      },
      "description": "CreateBackupScheduleResponse is the response from the CreateBackupSchedule function."
    },
    "v1DatabaseConfiguration": {
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/v1DatabaseConfigurationCollection",
          "description": "The default Qdrant database collection configuration.\nThis setting is for both managed and hybrid cloud clusters, see sub-messages for more details.\nThis is an optional field."
        },
        "storage": {
          "$ref": "#/definitions/v1DatabaseConfigurationStorage",
          "description": "The default Qdrant database storage configuration.\nThis setting is for both managed and hybrid cloud clusters.\nThis is an optional field."
        },
        "service": {
          "$ref": "#/definitions/v1DatabaseConfigurationService",
          "title": "The Qdrant database service configuration\nThis setting is for both managed and hybrid cloud clusters, see sub-messages for more details.\nThis is an optional field"
        },
        "logLevel": {
          "$ref": "#/definitions/v1DatabaseConfigurationLogLevel",
          "description": "The log level for the database.\nQdrant is written in Rust and is using: https://docs.rs/log/latest/log/enum.LevelFilter.html\nThis setting is for hybrid cloud clusters only, it is ignored for managed cloud clusters.\nThis is an optional field, default is Info."
        },
        "tls": {
          "$ref": "#/definitions/v1DatabaseConfigurationTls",
          "description": "The Qdrant database TLS configuration.\nThis setting is for hybrid cloud clusters only, it is ignored for managed cloud clusters.\nThis is an optional field, if not set an unsecure connection is provided."
        },
        "inference": {
          "$ref": "#/definitions/v1DatabaseConfigurationInference",
          "title": "The Qdrant database inference configuration.\nThis setting is for managed cloud clusters only, it is ignored for hybrid cloud clusters.\nThis is an optional field, if unset, the database is not configured for cloud inferencing"
        }
      },
      "description": "Configuration to setup a Qdrant database.\nThe settings apply to managed and/or hybrid cloud, see documentation on each message for more details."
    },
    "v1DatabaseConfigurationCollection": {
      "type": "object",
      "properties": {
        "replicationFactor": {
          "type": "integer",
          "format": "int64",
          "title": "Number of replicas of each shard that network tries to maintain\nThis is an optional, the default is 1"
        },
        "writeConsistencyFactor": {
          "type": "integer",
          "format": "int32",
          "title": "How many replicas should apply the operation for us to consider it successful\nThis is an optional, the default is 1"
        },
        "vectors": {
          "$ref": "#/definitions/v1DatabaseConfigurationCollectionVectors",
          "description": "The default parameters for vectors."
        }
      },
      "title": "The default Qdrant database collection configuration"
    },
    "v1DatabaseConfigurationCollectionVectors": {
      "type": "object",
      "properties": {
        "onDisk": {
          "type": "boolean",
          "description": "If set, this will create a collection with all vectors immediately stored in memmap storage.\nThis is the recommended way, in case your Qdrant instance operates with fast disks and you are working with large collections.\nFor more info see: https://qdrant.tech/documentation/concepts/storage/#configuring-memmap-storage\nThis is an optional field, the default value will be true."
        }
      },
      "title": "The default Qdrant database collection vectors configuration"
    },
    "v1DatabaseConfigurationInference": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "If true, the database is configured to use cloud inferencing"
        }
      },
      "title": "DatabaseConfigurationInference contains cloud inferencing configuration"
    },
    "v1DatabaseConfigurationLogLevel": {
      "type": "string",
      "enum": [
        "DATABASE_CONFIGURATION_LOG_LEVEL_UNSPECIFIED",
        "DATABASE_CONFIGURATION_LOG_LEVEL_TRACE",
        "DATABASE_CONFIGURATION_LOG_LEVEL_DEBUG",
        "DATABASE_CONFIGURATION_LOG_LEVEL_INFO",
        "DATABASE_CONFIGURATION_LOG_LEVEL_WARN",
        "DATABASE_CONFIGURATION_LOG_LEVEL_ERROR",
        "DATABASE_CONFIGURATION_LOG_LEVEL_OFF"
      ],
      "default": "DATABASE_CONFIGURATION_LOG_LEVEL_UNSPECIFIED",
      "description": "- DATABASE_CONFIGURATION_LOG_LEVEL_UNSPECIFIED: Unspecified log level.\n - DATABASE_CONFIGURATION_LOG_LEVEL_TRACE: Trace log level.\n - DATABASE_CONFIGURATION_LOG_LEVEL_DEBUG: Debug log level.\n - DATABASE_CONFIGURATION_LOG_LEVEL_INFO: Info log level.\n - DATABASE_CONFIGURATION_LOG_LEVEL_WARN: Warn log level.\n - DATABASE_CONFIGURATION_LOG_LEVEL_ERROR: Error log level.\n - DATABASE_CONFIGURATION_LOG_LEVEL_OFF: Off log level.",
      "title": "DatabaseConfigurationLogLevel defines the supported logging levels for the\nQdrant database. See: https://docs.rs/log/latest/log/enum.LevelFilter.html"
    },
    "v1DatabaseConfigurationService": {
      "type": "object",
      "properties": {
        "apiKey": {
          "$ref": "#/definitions/v1SecretKeyRef",
          "title": "Set an api-key.\nThis setting is for hybrid cloud clusters only, for managed cloud please use qdrant.cloud.cluster.auth.[v1|v2].DatabaseApiKeyService to configure keys.\nIf set, all requests must include a header with the api-key.\nexample header: `api-key: \u003cAPI-KEY\u003e`"
        },
        "readOnlyApiKey": {
          "$ref": "#/definitions/v1SecretKeyRef",
          "title": "Set an api-key for read-only operations.\nThis setting is for hybrid cloud clusters only, for managed cloud please use qdrant.cloud.cluster.auth.[v1|v2].DatabaseApiKeyService to configure keys.\nIf set, all requests must include a header with the api-key.\nexample header: `api-key: \u003cAPI-KEY\u003e`"
        },
        "jwtRbac": {
          "type": "boolean",
          "description": "Enable JWT Role Based Access Control (RBAC).\nThis setting is for both managed and hybrid cloud clusters.\nIf enabled, you can generate JWT tokens with fine-grained rules for access control.\nUse generated token instead of API key."
        },
        "enableTls": {
          "type": "boolean",
          "description": "Enable HTTPS for the REST and gRPC API\nThis setting is for hybrid cloud clusters only, for managed cloud clusters the platform controls it (and clients need to use a secure connection)."
        }
      },
      "title": "The Qdrant database service configuration"
    },
    "v1DatabaseConfigurationStorage": {
      "type": "object",
      "properties": {
        "performance": {
          "$ref": "#/definitions/v1DatabaseConfigurationStoragePerformance",
          "title": "The performance related Qdrant database storage configuration"
        }
      },
      "title": "The Qdrant storage configuration"
    },
    "v1DatabaseConfigurationStoragePerformance": {
      "type": "object",
      "properties": {
        "optimizerCpuBudget": {
          "type": "integer",
          "format": "int32",
          "description": "CPU budget, how many CPUs (threads) to allocate for an optimization job.\nIf 0 - auto selection, keep 1 or more CPUs unallocated depending on CPU size\nIf negative - subtract this number of CPUs from the available CPUs.\nIf positive - use this exact number of CPUs."
        },
        "asyncScorer": {
          "type": "boolean",
          "title": "Enable async scorer which uses io_uring when rescoring.\nOnly supported on Linux, must be enabled in your kernel.\nSee: https://qdrant.tech/articles/io_uring/#and-what-about-qdrant"
        }
      },
      "title": "The performance related Qdrant database storage configuration"
    },
    "v1DatabaseConfigurationTls": {
      "type": "object",
      "properties": {
        "cert": {
          "$ref": "#/definitions/v1SecretKeyRef",
          "title": "Secret to use for the certificate"
        },
        "key": {
          "$ref": "#/definitions/v1SecretKeyRef",
          "title": "Secret to use for the private key"
        }
      },
      "title": "DatabaseConfigurationTls contains the information to setup a TLS connection to the database endpoint"
    },
    "v1DeleteBackupResponse": {
      "type": "object",
      "description": "DeleteBackupResponse is the response from the DeleteBackup function.\n\nEmpty"
    },
    "v1DeleteBackupScheduleResponse": {
      "type": "object",
      "description": "DeleteBackupScheduleResponse is the response from the DeleteBackupSchedule function.\n\nEmpty"
    },
    "v1GetBackupResponse": {
      "type": "object",
      "properties": {
        "backup": {
          "$ref": "#/definitions/v1Backup",
          "description": "The actual backup."
        }
      },
      "description": "GetBackupResponse is the response from the GetBackup function."
    },
    "v1GetBackupScheduleResponse": {
      "type": "object",
      "properties": {
        "backupSchedule": {
          "$ref": "#/definitions/v1BackupSchedule",
          "title": "The actual cluster"
        }
      },
      "description": "GetBackupScheduleResponse is the response from the GetBackupSchedule function."
    },
    "v1KeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "The key part of a key-value pair"
        },
        "value": {
          "type": "string",
          "title": "The value part of a key-value pair"
        }
      },
      "description": "KeyValue is a key-value tuple (used in e.g. node selectors / annotations)\nThe message represents an object for Kubernetes."
    },
    "v1ListBackupRestoresResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BackupRestore"
          },
          "description": "The actual backup restores in this list."
        }
      },
      "description": "ListBackupRestoresResponse is the response from the ListBackupRestores function."
    },
    "v1ListBackupSchedulesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BackupSchedule"
          },
          "description": "The actual backup schedules in this list."
        }
      },
      "description": "ListBackupsResponse is the response from the ListBackups function."
    },
    "v1ListBackupsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Backup"
          },
          "description": "The actual backups in this list.\nWhen pagination is used it contains a single page only, not all items."
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of items available (useful in relation with pagination).\nThis field is fill out when pagination is used (aka in the request `page_size` was provided)."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages."
        }
      },
      "title": "ListBackupsResponse is the response from the ListBackups function"
    },
    "v1RestoreBackupResponse": {
      "type": "object",
      "description": "RestoreBackupResponse is the response from the RestoreBackup function.\n\nEmpty"
    },
    "v1SecretKeyRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the secret (in the same namespace as the QdrantCluster CRD instance)\nThis is a required field"
        },
        "key": {
          "type": "string",
          "title": "The key inside the secret\nThis is a required field"
        }
      },
      "title": "SecretKeyRef is a reference to a Kubernetes secret name and the key inside the secret"
    },
    "v1TolerationEffect": {
      "type": "string",
      "enum": [
        "TOLERATION_EFFECT_UNSPECIFIED",
        "TOLERATION_EFFECT_NO_SCHEDULE",
        "TOLERATION_EFFECT_PREFER_NO_SCHEDULE",
        "TOLERATION_EFFECT_NO_EXECUTE"
      ],
      "default": "TOLERATION_EFFECT_UNSPECIFIED",
      "description": "- TOLERATION_EFFECT_UNSPECIFIED: Unspecified effect.\n - TOLERATION_EFFECT_NO_SCHEDULE: NoSchedule taint effect.\n - TOLERATION_EFFECT_PREFER_NO_SCHEDULE: PreferNoSchedule taint effect.\n - TOLERATION_EFFECT_NO_EXECUTE: NoExecute taint effect.",
      "title": "TolerationEffect represents the effects a taint has on pod scheduling and eviction.\nSee: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/"
    },
    "v1TolerationOperator": {
      "type": "string",
      "enum": [
        "TOLERATION_OPERATOR_UNSPECIFIED",
        "TOLERATION_OPERATOR_EXISTS",
        "TOLERATION_OPERATOR_EQUAL"
      ],
      "default": "TOLERATION_OPERATOR_UNSPECIFIED",
      "description": "- TOLERATION_OPERATOR_UNSPECIFIED: Unspecified operator.\n - TOLERATION_OPERATOR_EXISTS: The operator means the key exists.\n - TOLERATION_OPERATOR_EQUAL: The operator means the key equals the given value.",
      "title": "TolerationOperator defines the valid operators for tolerations.\nSee: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/"
    },
    "v1UpdateBackupScheduleResponse": {
      "type": "object",
      "properties": {
        "backupSchedule": {
          "$ref": "#/definitions/v1BackupSchedule",
          "description": "The actual backup schedule."
        }
      },
      "description": "UpdateBackupScheduleResponse is the response from the UpdateBackupSchedule function."
    }
  }
}
