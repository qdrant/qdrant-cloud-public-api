{
  "swagger": "2.0",
  "info": {
    "title": "qdrant/cloud/booking/v1/booking.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "BookingService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/booking/v1/accounts/{accountId}/packages": {
      "get": {
        "summary": "Fetch all packages known by the system, optional filtered.\nRequired permissions:\n- None (authenticated only)",
        "operationId": "BookingService_ListPackages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPackagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloudProviderId",
            "description": "Optional filter specifying the cloud provider where the cluster will be hosted.\nMust match one of the provider IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListCloudProviders` method.\nIf omitted, all packages for the specified account are returned.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProviderRegionId",
            "description": "Optional filter specifying the cloud region where the cluster will be hosted.\nMust match one of the region IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListCloudProviderRegions` method.\nIf omitted, all packages for the specified account are returned.\nThis field is ignored when the `cloud_provider_id` is set to 'hybrid'.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "statuses",
            "description": "The status of the packages to filter.\nThis is an optional field. If value is not set, all packages are returned.\n\n - PACKAGE_STATUS_UNSPECIFIED: Unspecified package status.\n - PACKAGE_STATUS_ACTIVE: The package is active and available for use.\n - PACKAGE_STATUS_DEACTIVATED: The package is deactivated.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "PACKAGE_STATUS_UNSPECIFIED",
                "PACKAGE_STATUS_ACTIVE",
                "PACKAGE_STATUS_DEACTIVATED"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "BookingService"
        ]
      }
    },
    "/api/booking/v1/accounts/{accountId}/packages/{id}": {
      "get": {
        "summary": "Get the package identified by the request identifier\nRequired permissions:\n- None (authenticated only)",
        "operationId": "BookingService_GetPackage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPackageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "The unique identifier of the package.\nA unique string ID assigned to each package.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BookingService"
        ]
      }
    },
    "/api/booking/v1/packages": {
      "get": {
        "summary": "Fetch all public packages\nRequired permissions:\n- None (public endpoint)\nbuf:lint:ignore QDRANT_CLOUD_METHOD_OPTIONS",
        "operationId": "BookingService_ListGlobalPackages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListGlobalPackagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cloudProviderId",
            "description": "Mandatory filter specifying the cloud provider where the cluster will be hosted.\nMust match one of the provider IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListGlobalCloudProviders` method.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProviderRegionId",
            "description": "Filter specifying the cloud region where the cluster will be hosted.\nMust match one of the region IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListGlobalCloudProviderRegions` method.\nField can be omitted, if cloud_provider_id is `hybrid`",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BookingService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AvailableAdditionalResources": {
      "type": "object",
      "properties": {
        "diskPricePerHour": {
          "type": "integer",
          "format": "int64",
          "description": "The unit price per hour in millicents, in integer format.\nRepresents the cost per hour for a single unit(GiB) of the resource.\nYou will be billed hourly for the resources you use. Partial hours are rounded up and billed as full hours."
        }
      },
      "description": "AvailableAdditionalResources represents additional resources that can be added to the cluster."
    },
    "v1GetPackageResponse": {
      "type": "object",
      "properties": {
        "package": {
          "$ref": "#/definitions/v1Package",
          "title": "The actual package"
        }
      },
      "title": "GetPackageResponse is the response from the GetPackage function"
    },
    "v1ListGlobalPackagesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Package"
          },
          "title": "The actual packages in this list"
        }
      },
      "title": "ListPackagesResponse is the response from the ListPackages function"
    },
    "v1ListPackagesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Package"
          },
          "title": "The actual packages in this list"
        }
      },
      "title": "ListPackagesResponse is the response from the ListPackages function"
    },
    "v1Package": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the package.\nA unique string ID assigned to each package."
        },
        "name": {
          "type": "string",
          "description": "The name of the package.\nA human-readable identifier for the package."
        },
        "type": {
          "type": "string",
          "description": "Specifies if this is a free or paid package."
        },
        "resourceConfiguration": {
          "$ref": "#/definitions/v1ResourceConfiguration",
          "title": "The resource configuration associated with the package"
        },
        "currency": {
          "type": "string",
          "description": "The currency of the prices.\nSpecifies the currency in which the prices are denominated."
        },
        "unitIntPricePerHour": {
          "type": "integer",
          "format": "int32",
          "description": "The unit price per hour in millicents, in integer format.\nRepresents the cost per hour for a single unit of the resource.\nYou will be billed hourly for the resources you use. Partial hours are rounded up and billed as full hours."
        },
        "status": {
          "$ref": "#/definitions/v1PackageStatus",
          "description": "The status of the package.\nIndicates the current status of the package."
        },
        "availableAdditionalResources": {
          "$ref": "#/definitions/v1AvailableAdditionalResources",
          "description": "Optional additional resources that can be added to the cluster.\nif not set, additional resources are not available for this package.\nCurrently, only `DISK` is supported."
        }
      },
      "description": "Package represents a single package.\nA package is a configuration (CPU/Memory/Disk size) for a cluster with a price."
    },
    "v1PackageStatus": {
      "type": "string",
      "enum": [
        "PACKAGE_STATUS_UNSPECIFIED",
        "PACKAGE_STATUS_ACTIVE",
        "PACKAGE_STATUS_DEACTIVATED"
      ],
      "default": "PACKAGE_STATUS_UNSPECIFIED",
      "description": "PackageStatus defines the valid states a package can be in.\n\n - PACKAGE_STATUS_UNSPECIFIED: Unspecified package status.\n - PACKAGE_STATUS_ACTIVE: The package is active and available for use.\n - PACKAGE_STATUS_DEACTIVATED: The package is deactivated."
    },
    "v1ResourceConfiguration": {
      "type": "object",
      "properties": {
        "ram": {
          "type": "string",
          "title": "The amount of RAM (e.g., \"1GiB\")"
        },
        "cpu": {
          "type": "string",
          "title": "The amount of CPU (e.g., \"1000m\" (1 vCPU))"
        },
        "disk": {
          "type": "string",
          "title": "The amount of disk (e.g., \"100GiB\")"
        }
      },
      "description": "ResourceConfiguration defines the resource configuration for a package."
    }
  }
}
