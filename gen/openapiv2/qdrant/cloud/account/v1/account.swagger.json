{
  "swagger": "2.0",
  "info": {
    "title": "qdrant/cloud/account/v1/account.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AccountService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/account/v1/accounts": {
      "get": {
        "summary": "Fetch all accounts associated for the provided user, where the user has the provided permission.\nRequired permissions:\n- read:accounts",
        "operationId": "AccountService_ListAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccountService"
        ]
      },
      "post": {
        "summary": "Creates an account for the authenticated user.\nRequired permissions:\n- None (authenticated only)",
        "operationId": "AccountService_CreateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "CreateAccountRequest is the request for the CreateAccount function.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAccountRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/account/v1/accounts/{account.id}": {
      "put": {
        "summary": "Update an account identified by the given ID.\nRequired permissions:\n- write:account",
        "operationId": "AccountService_UpdateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account.id",
            "description": "Unique identifier for the account (in GUID format).\nThis is a read-only field and will be available after an account is created.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountServiceUpdateAccountBody"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/account/v1/accounts/{accountId}": {
      "get": {
        "summary": "Get an account identified by the given ID.\nRequired permissions:\n- read:account",
        "operationId": "AccountService_GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      },
      "delete": {
        "summary": "Deletes an account identified by the given ID.\nRequired permissions:\n- delete:account",
        "operationId": "AccountService_DeleteAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/account/v1/accounts/{accountId}/invites": {
      "get": {
        "summary": "Fetch all account invites in the account identified by the given account ID.\nThe authenticated user must be a member of the account identifier by the given account ID.\nRequired permissions:\n- read:invites",
        "operationId": "AccountService_ListAccountInvites",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAccountInvitesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format) to list invites for.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/account/v1/accounts/{accountId}/invites/{inviteId}": {
      "get": {
        "summary": "Fetch an account invite by its id.\nThe authenticated user must be a member of the account that the invite is for.\nRequired permissions:\n- read:invites",
        "operationId": "AccountService_GetAccountInvite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAccountInviteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format) the invite belongs to.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "inviteId",
            "description": "The identifier of the invite (in GUID format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      },
      "delete": {
        "summary": "Delete an account invite\nThe authenticated user must be a member of the account that the invite is for.\nRequired permissions:\n- delete:invites",
        "operationId": "AccountService_DeleteAccountInvite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAccountInviteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format) the invite belongs to.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "inviteId",
            "description": "The identifier of the invite (in GUID format) to delete.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/account/v1/accounts/{accountId}/invites/{inviteId}/accept": {
      "post": {
        "summary": "Accept an account invite\nThe authenticated user's email address must match the email address specified in\nthe invite.\nRequired permissions:\n- None (authenticated only)",
        "operationId": "AccountService_AcceptAccountInvite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AcceptAccountInviteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format) the invite is for.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "inviteId",
            "description": "The identifier of the invite (in GUID format) to accept.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/account/v1/accounts/{accountId}/invites/{inviteId}/reject": {
      "post": {
        "summary": "Reject an account invite\nThe authenticated user's email address must match the email address specified in\nthe invite.\nRequired permissions:\n- None (authenticated only)",
        "operationId": "AccountService_RejectAccountInvite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RejectAccountInviteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in GUID format) the invite is for.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "inviteId",
            "description": "The identifier of the invite (in GUID format) to reject.\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/account/v1/accounts/{invite.accountId}/invites": {
      "post": {
        "summary": "Create a new account invite.\nThe authenticated user must be a member of the account that the invite is for.\nRequired permissions:\n- write:invites",
        "operationId": "AccountService_CreateAccountInvite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccountInviteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "invite.accountId",
            "description": "The identifier of the account this invite is for (in GUID format).\nThis field is required when creating an invite.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountServiceCreateAccountInviteBody"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/account/v1/self/invites": {
      "get": {
        "summary": "Fetch all account invites for the authenticated user.\nRequired permissions:\n- None (authenticated only)",
        "operationId": "AccountService_ListMyAccountInvites",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMyAccountInvitesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "statusFilter",
            "description": "Optional: Filter invites by status (e.g. pending only).\n\n - ACCOUNT_INVITE_STATUS_UNSPECIFIED: Default, unspecified status.\n - ACCOUNT_INVITE_STATUS_PENDING: The invite is pending and waiting for the user to accept or reject.\n - ACCOUNT_INVITE_STATUS_ACCEPTED: The invite has been accepted by the user.\n - ACCOUNT_INVITE_STATUS_REJECTED: The invite has been rejected by the user.\n - ACCOUNT_INVITE_STATUS_EXPIRED: The invite has expired.\n\nTODO: Do we want to add this?\n - ACCOUNT_INVITE_STATUS_CANCELED: The invite has been canceled (e.g., by an account admin).",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ACCOUNT_INVITE_STATUS_UNSPECIFIED",
              "ACCOUNT_INVITE_STATUS_PENDING",
              "ACCOUNT_INVITE_STATUS_ACCEPTED",
              "ACCOUNT_INVITE_STATUS_REJECTED",
              "ACCOUNT_INVITE_STATUS_EXPIRED",
              "ACCOUNT_INVITE_STATUS_CANCELED"
            ],
            "default": "ACCOUNT_INVITE_STATUS_UNSPECIFIED"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    }
  },
  "definitions": {
    "AccountServiceCreateAccountInviteBody": {
      "type": "object",
      "properties": {
        "invite": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier for the invite (in GUID format).\nThis is a read-only field, generated by the server."
            },
            "accountName": {
              "type": "string",
              "description": "Human readable name of the account that the human is invited to join.\nThis is a read-only value."
            },
            "email": {
              "type": "string",
              "description": "The email address of the user being invited.\nThis field is required when creating an invite."
            },
            "roleIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The identifiers of the roles to be assigned to the user upon accepting the invite.\nThis field is required when creating an invite, and the list must not be empty.\nEach string in the list must be a valid UUID, to be resolved in the provided account."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp when the invite was created.\nThis is a read-only field."
            },
            "createdByUserId": {
              "type": "string",
              "description": "The identifier of the user who created the invite (in GUID format).\nThis is a read-only field, populated by the server based on the authenticated user.\n\nTODO: Optional (for system generated invites)?"
            },
            "createdByName": {
              "type": "string",
              "description": "Name of the user that created this invite.\nThis is a read-only value, populated by the server based on the created_by_user_id field."
            },
            "expiresAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp when the invite expires. If not set, the invite may use a default expiration period or not expire.\nThis is a read-only field, potentially set at creation or managed by the server.\n\nTODO: Do we want to add this?"
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp when the invite was last updated (e.g., status change).\nThis is a read-only field."
            },
            "userId": {
              "type": "string",
              "description": "Identifier of the user that accepted or rejected this invite.\nThis is a read-only value."
            },
            "status": {
              "$ref": "#/definitions/v1AccountInviteStatus",
              "description": "The status of the invite.\nThis is a read-only field."
            }
          },
          "description": "The details of the invite to create.\nThis is a required field.",
          "title": "The details of the invite to create.\nThis is a required field."
        }
      },
      "description": "CreateAccountInviteRequest is the request for the CreateAccountInvite function."
    },
    "AccountServiceUpdateAccountBody": {
      "type": "object",
      "properties": {
        "account": {
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp when the account was created.\nThis is a read-only field and will be available after an account is created."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp when the account was last updated.\nThis is a read-only field and will be available after an account is created."
            },
            "name": {
              "type": "string",
              "title": "The name of the account.\nName can only contain letters, numbers, underscores and dashes"
            },
            "ownerId": {
              "type": "string",
              "description": "The Identifier of the owner of the account (in GUID format).\nThis is a read-only field."
            },
            "ownerEmail": {
              "type": "string",
              "description": "The email address of the owner of the account.\nThis is a read-only field and will be derived from the owner_id field."
            },
            "privileges": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The privileges of the account, if any.\nThis is a read-only field."
            }
          },
          "description": "The actual account.",
          "title": "The actual account."
        }
      },
      "description": "UpdateAccountRequest is the request for the UpdateAccount function."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AcceptAccountInviteResponse": {
      "type": "object",
      "properties": {
        "invite": {
          "$ref": "#/definitions/v1AccountInvite",
          "description": "The invite that was accepted, with its status updated."
        }
      },
      "description": "AcceptAccountInviteResponse is the response from the AcceptAccountInvite function."
    },
    "v1Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the account (in GUID format).\nThis is a read-only field and will be available after an account is created."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the account was created.\nThis is a read-only field and will be available after an account is created."
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the account was last updated.\nThis is a read-only field and will be available after an account is created."
        },
        "name": {
          "type": "string",
          "title": "The name of the account.\nName can only contain letters, numbers, underscores and dashes"
        },
        "ownerId": {
          "type": "string",
          "description": "The Identifier of the owner of the account (in GUID format).\nThis is a read-only field."
        },
        "ownerEmail": {
          "type": "string",
          "description": "The email address of the owner of the account.\nThis is a read-only field and will be derived from the owner_id field."
        },
        "privileges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The privileges of the account, if any.\nThis is a read-only field."
        }
      },
      "description": "An Account represents an account in the Qdrant cloud."
    },
    "v1AccountInvite": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the invite (in GUID format).\nThis is a read-only field, generated by the server."
        },
        "accountId": {
          "type": "string",
          "description": "The identifier of the account this invite is for (in GUID format).\nThis field is required when creating an invite."
        },
        "accountName": {
          "type": "string",
          "description": "Human readable name of the account that the human is invited to join.\nThis is a read-only value."
        },
        "email": {
          "type": "string",
          "description": "The email address of the user being invited.\nThis field is required when creating an invite."
        },
        "roleIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The identifiers of the roles to be assigned to the user upon accepting the invite.\nThis field is required when creating an invite, and the list must not be empty.\nEach string in the list must be a valid UUID, to be resolved in the provided account."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the invite was created.\nThis is a read-only field."
        },
        "createdByUserId": {
          "type": "string",
          "description": "The identifier of the user who created the invite (in GUID format).\nThis is a read-only field, populated by the server based on the authenticated user.\n\nTODO: Optional (for system generated invites)?"
        },
        "createdByName": {
          "type": "string",
          "description": "Name of the user that created this invite.\nThis is a read-only value, populated by the server based on the created_by_user_id field."
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the invite expires. If not set, the invite may use a default expiration period or not expire.\nThis is a read-only field, potentially set at creation or managed by the server.\n\nTODO: Do we want to add this?"
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the invite was last updated (e.g., status change).\nThis is a read-only field."
        },
        "userId": {
          "type": "string",
          "description": "Identifier of the user that accepted or rejected this invite.\nThis is a read-only value."
        },
        "status": {
          "$ref": "#/definitions/v1AccountInviteStatus",
          "description": "The status of the invite.\nThis is a read-only field."
        }
      },
      "description": "An AccountInvite represents an invitation for a user to join an account."
    },
    "v1AccountInviteStatus": {
      "type": "string",
      "enum": [
        "ACCOUNT_INVITE_STATUS_UNSPECIFIED",
        "ACCOUNT_INVITE_STATUS_PENDING",
        "ACCOUNT_INVITE_STATUS_ACCEPTED",
        "ACCOUNT_INVITE_STATUS_REJECTED",
        "ACCOUNT_INVITE_STATUS_EXPIRED",
        "ACCOUNT_INVITE_STATUS_CANCELED"
      ],
      "default": "ACCOUNT_INVITE_STATUS_UNSPECIFIED",
      "description": "AccountInviteStatus defines the possible statuses of an account invitation.\n\n - ACCOUNT_INVITE_STATUS_UNSPECIFIED: Default, unspecified status.\n - ACCOUNT_INVITE_STATUS_PENDING: The invite is pending and waiting for the user to accept or reject.\n - ACCOUNT_INVITE_STATUS_ACCEPTED: The invite has been accepted by the user.\n - ACCOUNT_INVITE_STATUS_REJECTED: The invite has been rejected by the user.\n - ACCOUNT_INVITE_STATUS_EXPIRED: The invite has expired.\n\nTODO: Do we want to add this?\n - ACCOUNT_INVITE_STATUS_CANCELED: The invite has been canceled (e.g., by an account admin)."
    },
    "v1CreateAccountInviteResponse": {
      "type": "object",
      "properties": {
        "invite": {
          "$ref": "#/definitions/v1AccountInvite",
          "description": "The created account invite."
        }
      },
      "description": "CreateAccountInviteResponse is the response from the CreateAccountInvite function."
    },
    "v1CreateAccountRequest": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/v1Account",
          "description": "The actual account."
        }
      },
      "description": "CreateAccountRequest is the request for the CreateAccount function."
    },
    "v1CreateAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/v1Account",
          "description": "The actual account."
        }
      },
      "description": "CreateAccountResponse is the response from the CreateAccount function."
    },
    "v1DeleteAccountInviteResponse": {
      "type": "object",
      "description": "DeleteAccountInviteResponse is the response from the DeleteAccountInvite function.\n\nEmpty"
    },
    "v1DeleteAccountResponse": {
      "type": "object",
      "description": "DeleteAccountResponse is the response from the DeleteAccount function.\n\nEmpty"
    },
    "v1GetAccountInviteResponse": {
      "type": "object",
      "properties": {
        "invite": {
          "$ref": "#/definitions/v1AccountInvite",
          "description": "The retrieved account invite."
        }
      },
      "description": "GetAccountInviteResponse is the response from the GetAccountInvite function."
    },
    "v1GetAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/v1Account",
          "description": "The actual account."
        }
      },
      "title": "GetAccountResponse is the response from the GetAccount function"
    },
    "v1ListAccountInvitesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountInvite"
          },
          "description": "The list of account invites."
        }
      },
      "description": "ListAccountInvitesResponse is the response from the ListAccountInvites function."
    },
    "v1ListAccountsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Account"
          },
          "description": "The actual accounts in this list."
        }
      },
      "title": "ListAccountsResponse is the response from the ListAccounts function"
    },
    "v1ListMyAccountInvitesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountInvite"
          },
          "description": "The list of account invites for the authenticated user."
        }
      },
      "description": "ListMyAccountInvitesResponse is the response from the ListMyAccountInvites function."
    },
    "v1RejectAccountInviteResponse": {
      "type": "object",
      "properties": {
        "invite": {
          "$ref": "#/definitions/v1AccountInvite",
          "description": "The invite that was rejected, with its status updated."
        }
      },
      "description": "RejectAccountInviteResponse is the response from the RejectAccountInvite function."
    },
    "v1UpdateAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/v1Account",
          "description": "The actual account."
        }
      },
      "description": "UpdateAccountResponse is the response from the UpdateAccount function."
    }
  }
}
