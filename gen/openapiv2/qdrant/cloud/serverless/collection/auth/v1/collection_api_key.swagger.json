{
  "swagger": "2.0",
  "info": {
    "title": "qdrant/cloud/serverless/collection/auth/v1/collection_api_key.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CollectionApiKeyService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/serverless/auth/v1/accounts/{accountId}/collections/{collectionId}/api-keys": {
      "get": {
        "summary": "ListCollectionApiKeys returns all API keys for a collection\nRequired Permissions:\n- read:serverless_api_keys",
        "operationId": "CollectionApiKeyService_ListCollectionApiKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCollectionApiKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "description": "Collection the API keys belong to (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CollectionApiKeyService"
        ]
      },
      "post": {
        "summary": "CreateCollectionApiKey creates a new API key for a collection\nRequired Permissions:\n- write:serverless_api_keys",
        "operationId": "CollectionApiKeyService_CreateCollectionApiKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCollectionApiKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "description": "Collection the key will access (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CollectionApiKeyServiceCreateCollectionApiKeyBody"
            }
          }
        ],
        "tags": [
          "CollectionApiKeyService"
        ]
      }
    },
    "/api/serverless/auth/v1/accounts/{accountId}/collections/{collectionId}/api-keys/{collectionApiKeyId}": {
      "delete": {
        "summary": "DeleteCollectionApiKey removes an API key from a collection\nRequired Permissions:\n- write:serverless_api_keys",
        "operationId": "CollectionApiKeyService_DeleteCollectionApiKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteCollectionApiKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "description": "The identifier of the account (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "description": "Collection the key belongs to (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionApiKeyId",
            "description": "ID of the key to delete (in Guid format).\nThis is a required field.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CollectionApiKeyService"
        ]
      }
    }
  },
  "definitions": {
    "CollectionApiKeyServiceCreateCollectionApiKeyBody": {
      "type": "object",
      "properties": {
        "collectionApiKey": {
          "$ref": "#/definitions/v1CollectionApiKey",
          "description": "The API key to create.\nThis is a required field."
        }
      },
      "title": "CreateCollectionApiKeyRequest defines parameters for creating a new collection API key"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CollectionApiKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the collection api key (in Guid format).\nThis is a read-only field and will be available after a collection api key is created."
        },
        "accountId": {
          "type": "string",
          "description": "The identifier of the account (in Guid format).\nThis is a required field."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the collection api key was created.\nThis is a read-only field and will be available after a collection api key is created."
        },
        "collectionId": {
          "type": "string",
          "description": "The identifier of the collection (in Guid format).\nThis is a required field."
        },
        "name": {
          "type": "string",
          "description": "Name of the collection api key.\nThis is a required field.\nName can only contain letters, numbers, spaces, underscores and dashes."
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration time of the collection api key. The key will be invalid after this time.\nThis field is optional, and if not provided, the key does not expire."
        },
        "accessType": {
          "type": "string",
          "description": "The type of access granted for the collection.\n- \"read-only\": Grants access to perform collection-related actions that only read data.\n- \"read-write\": Grants access to perform collection-related actions that read or write data (like `upsert points`).\nFor a detailed list of actions allowed for each access type, see:\nhttps://qdrant.tech/documentation/guides/security/#table-of-access\nThis is a required field."
        },
        "createdByEmail": {
          "type": "string",
          "description": "The email of the user who created the collection api key.\nThis is a read-only field and will be available after a collection api key is created."
        },
        "postfix": {
          "type": "string",
          "description": "Postfix for the collection api key, this represents the last bytes of the key.\nThis is a read-only field and will be available after a collection api key is created."
        },
        "key": {
          "type": "string",
          "description": "The key for the collection api key.\nThis is a read-only field and will be available only once in the response of CreateCollectionApiKey.\nYou should securely store this key and it should be handled as a secret."
        }
      },
      "description": "A CollectionApiKey represents one collection api key of a Qdrant cloud account.\nThis collection key can grant access to a Qdrant cloud serverless collection."
    },
    "v1CreateCollectionApiKeyResponse": {
      "type": "object",
      "properties": {
        "collectionApiKey": {
          "$ref": "#/definitions/v1CollectionApiKey",
          "title": "The newly created API key value"
        }
      },
      "title": "CollectionApiKeyResponse provides the API key after creation"
    },
    "v1DeleteCollectionApiKeyResponse": {
      "type": "object",
      "description": "Empty",
      "title": "DeleteCollectionApiKeyResponse is an empty response for deletion confirmation"
    },
    "v1ListCollectionApiKeysResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CollectionApiKey"
          },
          "title": "List of API keys for the collection"
        }
      },
      "title": "Response containing all API keys associated with a collection"
    }
  }
}
