//
//Copyright The Kubernetes Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

// @generated by protoc-gen-es v2.9.0 with parameter "target=js+dts,import_extension=js,valid_types=protovalidate_required"
// @generated from file k8s.io/api/core/v1/generated.proto (package k8s.io.api.core.v1, syntax proto2)
/* eslint-disable */

import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_k8s_io_apimachinery_pkg_api_resource_generated } from "../../../apimachinery/pkg/api/resource/generated_pb.js";
import { file_k8s_io_apimachinery_pkg_apis_meta_v1_generated } from "../../../apimachinery/pkg/apis/meta/v1/generated_pb.js";
import { file_k8s_io_apimachinery_pkg_runtime_generated } from "../../../apimachinery/pkg/runtime/generated_pb.js";
import { file_k8s_io_apimachinery_pkg_util_intstr_generated } from "../../../apimachinery/pkg/util/intstr/generated_pb.js";

/**
 * Describes the file k8s.io/api/core/v1/generated.proto.
 */
export const file_k8s_io_api_core_v1_generated = /*@__PURE__*/
  fileDesc("CiJrOHMuaW8vYXBpL2NvcmUvdjEvZ2VuZXJhdGVkLnByb3RvEhJrOHMuaW8uYXBpLmNvcmUudjEiaQogQVdTRWxhc3RpY0Jsb2NrU3RvcmVWb2x1bWVTb3VyY2USEAoIdm9sdW1lSUQYASABKAkSDgoGZnNUeXBlGAIgASgJEhEKCXBhcnRpdGlvbhgDIAEoBRIQCghyZWFkT25seRgEIAEoCCK2AQoIQWZmaW5pdHkSNgoMbm9kZUFmZmluaXR5GAEgASgLMiAuazhzLmlvLmFwaS5jb3JlLnYxLk5vZGVBZmZpbml0eRI0Cgtwb2RBZmZpbml0eRgCIAEoCzIfLms4cy5pby5hcGkuY29yZS52MS5Qb2RBZmZpbml0eRI8Cg9wb2RBbnRpQWZmaW5pdHkYAyABKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuUG9kQW50aUFmZmluaXR5IjIKDkF0dGFjaGVkVm9sdW1lEgwKBG5hbWUYASABKAkSEgoKZGV2aWNlUGF0aBgCIAEoCSJOCglBdm9pZFBvZHMSQQoPcHJlZmVyQXZvaWRQb2RzGAEgAygLMiguazhzLmlvLmFwaS5jb3JlLnYxLlByZWZlckF2b2lkUG9kc0VudHJ5In8KFUF6dXJlRGlza1ZvbHVtZVNvdXJjZRIQCghkaXNrTmFtZRgBIAEoCRIPCgdkaXNrVVJJGAIgASgJEhMKC2NhY2hpbmdNb2RlGAMgASgJEg4KBmZzVHlwZRgEIAEoCRIQCghyZWFkT25seRgFIAEoCBIMCgRraW5kGAYgASgJInMKH0F6dXJlRmlsZVBlcnNpc3RlbnRWb2x1bWVTb3VyY2USEgoKc2VjcmV0TmFtZRgBIAEoCRIRCglzaGFyZU5hbWUYAiABKAkSEAoIcmVhZE9ubHkYAyABKAgSFwoPc2VjcmV0TmFtZXNwYWNlGAQgASgJIlAKFUF6dXJlRmlsZVZvbHVtZVNvdXJjZRISCgpzZWNyZXROYW1lGAEgASgJEhEKCXNoYXJlTmFtZRgCIAEoCRIQCghyZWFkT25seRgDIAEoCCKCAQoHQmluZGluZxJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEjMKBnRhcmdldBgCIAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5PYmplY3RSZWZlcmVuY2UikAQKGUNTSVBlcnNpc3RlbnRWb2x1bWVTb3VyY2USDgoGZHJpdmVyGAEgASgJEhQKDHZvbHVtZUhhbmRsZRgCIAEoCRIQCghyZWFkT25seRgDIAEoCBIOCgZmc1R5cGUYBCABKAkSXQoQdm9sdW1lQXR0cmlidXRlcxgFIAMoCzJDLms4cy5pby5hcGkuY29yZS52MS5DU0lQZXJzaXN0ZW50Vm9sdW1lU291cmNlLlZvbHVtZUF0dHJpYnV0ZXNFbnRyeRJHChpjb250cm9sbGVyUHVibGlzaFNlY3JldFJlZhgGIAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5TZWNyZXRSZWZlcmVuY2USPwoSbm9kZVN0YWdlU2VjcmV0UmVmGAcgASgLMiMuazhzLmlvLmFwaS5jb3JlLnYxLlNlY3JldFJlZmVyZW5jZRJBChRub2RlUHVibGlzaFNlY3JldFJlZhgIIAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5TZWNyZXRSZWZlcmVuY2USRgoZY29udHJvbGxlckV4cGFuZFNlY3JldFJlZhgJIAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5TZWNyZXRSZWZlcmVuY2UaNwoVVm9sdW1lQXR0cmlidXRlc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEimQIKD0NTSVZvbHVtZVNvdXJjZRIOCgZkcml2ZXIYASABKAkSEAoIcmVhZE9ubHkYAiABKAgSDgoGZnNUeXBlGAMgASgJElMKEHZvbHVtZUF0dHJpYnV0ZXMYBCADKAsyOS5rOHMuaW8uYXBpLmNvcmUudjEuQ1NJVm9sdW1lU291cmNlLlZvbHVtZUF0dHJpYnV0ZXNFbnRyeRJGChRub2RlUHVibGlzaFNlY3JldFJlZhgFIAEoCzIoLms4cy5pby5hcGkuY29yZS52MS5Mb2NhbE9iamVjdFJlZmVyZW5jZRo3ChVWb2x1bWVBdHRyaWJ1dGVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASIpCgxDYXBhYmlsaXRpZXMSCwoDYWRkGAEgAygJEgwKBGRyb3AYAiADKAkiqgEKHENlcGhGU1BlcnNpc3RlbnRWb2x1bWVTb3VyY2USEAoIbW9uaXRvcnMYASADKAkSDAoEcGF0aBgCIAEoCRIMCgR1c2VyGAMgASgJEhIKCnNlY3JldEZpbGUYBCABKAkSNgoJc2VjcmV0UmVmGAUgASgLMiMuazhzLmlvLmFwaS5jb3JlLnYxLlNlY3JldFJlZmVyZW5jZRIQCghyZWFkT25seRgGIAEoCCKlAQoSQ2VwaEZTVm9sdW1lU291cmNlEhAKCG1vbml0b3JzGAEgAygJEgwKBHBhdGgYAiABKAkSDAoEdXNlchgDIAEoCRISCgpzZWNyZXRGaWxlGAQgASgJEjsKCXNlY3JldFJlZhgFIAEoCzIoLms4cy5pby5hcGkuY29yZS52MS5Mb2NhbE9iamVjdFJlZmVyZW5jZRIQCghyZWFkT25seRgGIAEoCCKKAQocQ2luZGVyUGVyc2lzdGVudFZvbHVtZVNvdXJjZRIQCgh2b2x1bWVJRBgBIAEoCRIOCgZmc1R5cGUYAiABKAkSEAoIcmVhZE9ubHkYAyABKAgSNgoJc2VjcmV0UmVmGAQgASgLMiMuazhzLmlvLmFwaS5jb3JlLnYxLlNlY3JldFJlZmVyZW5jZSKFAQoSQ2luZGVyVm9sdW1lU291cmNlEhAKCHZvbHVtZUlEGAEgASgJEg4KBmZzVHlwZRgCIAEoCRIQCghyZWFkT25seRgDIAEoCBI7CglzZWNyZXRSZWYYBCABKAsyKC5rOHMuaW8uYXBpLmNvcmUudjEuTG9jYWxPYmplY3RSZWZlcmVuY2UiKAoOQ2xpZW50SVBDb25maWcSFgoOdGltZW91dFNlY29uZHMYASABKAUiUgoSQ29tcG9uZW50Q29uZGl0aW9uEgwKBHR5cGUYASABKAkSDgoGc3RhdHVzGAIgASgJEg8KB21lc3NhZ2UYAyABKAkSDQoFZXJyb3IYBCABKAkikQEKD0NvbXBvbmVudFN0YXR1cxJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEjoKCmNvbmRpdGlvbnMYAiADKAsyJi5rOHMuaW8uYXBpLmNvcmUudjEuQ29tcG9uZW50Q29uZGl0aW9uIosBChNDb21wb25lbnRTdGF0dXNMaXN0EkAKCG1ldGFkYXRhGAEgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkxpc3RNZXRhEjIKBWl0ZW1zGAIgAygLMiMuazhzLmlvLmFwaS5jb3JlLnYxLkNvbXBvbmVudFN0YXR1cyK8AgoJQ29uZmlnTWFwEkIKCG1ldGFkYXRhGAEgASgLMjAuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLk9iamVjdE1ldGESEQoJaW1tdXRhYmxlGAQgASgIEjUKBGRhdGEYAiADKAsyJy5rOHMuaW8uYXBpLmNvcmUudjEuQ29uZmlnTWFwLkRhdGFFbnRyeRJBCgpiaW5hcnlEYXRhGAMgAygLMi0uazhzLmlvLmFwaS5jb3JlLnYxLkNvbmZpZ01hcC5CaW5hcnlEYXRhRW50cnkaKwoJRGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaMQoPQmluYXJ5RGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoDDoCOAEibgoSQ29uZmlnTWFwRW52U291cmNlEkYKFGxvY2FsT2JqZWN0UmVmZXJlbmNlGAEgASgLMiguazhzLmlvLmFwaS5jb3JlLnYxLkxvY2FsT2JqZWN0UmVmZXJlbmNlEhAKCG9wdGlvbmFsGAIgASgIIn0KFENvbmZpZ01hcEtleVNlbGVjdG9yEkYKFGxvY2FsT2JqZWN0UmVmZXJlbmNlGAEgASgLMiguazhzLmlvLmFwaS5jb3JlLnYxLkxvY2FsT2JqZWN0UmVmZXJlbmNlEgsKA2tleRgCIAEoCRIQCghvcHRpb25hbBgDIAEoCCJ/Cg1Db25maWdNYXBMaXN0EkAKCG1ldGFkYXRhGAEgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkxpc3RNZXRhEiwKBWl0ZW1zGAIgAygLMh0uazhzLmlvLmFwaS5jb3JlLnYxLkNvbmZpZ01hcCJ8ChlDb25maWdNYXBOb2RlQ29uZmlnU291cmNlEhEKCW5hbWVzcGFjZRgBIAEoCRIMCgRuYW1lGAIgASgJEgsKA3VpZBgDIAEoCRIXCg9yZXNvdXJjZVZlcnNpb24YBCABKAkSGAoQa3ViZWxldENvbmZpZ0tleRgFIAEoCSKdAQoTQ29uZmlnTWFwUHJvamVjdGlvbhJGChRsb2NhbE9iamVjdFJlZmVyZW5jZRgBIAEoCzIoLms4cy5pby5hcGkuY29yZS52MS5Mb2NhbE9iamVjdFJlZmVyZW5jZRIsCgVpdGVtcxgCIAMoCzIdLms4cy5pby5hcGkuY29yZS52MS5LZXlUb1BhdGgSEAoIb3B0aW9uYWwYBCABKAgitAEKFUNvbmZpZ01hcFZvbHVtZVNvdXJjZRJGChRsb2NhbE9iamVjdFJlZmVyZW5jZRgBIAEoCzIoLms4cy5pby5hcGkuY29yZS52MS5Mb2NhbE9iamVjdFJlZmVyZW5jZRIsCgVpdGVtcxgCIAMoCzIdLms4cy5pby5hcGkuY29yZS52MS5LZXlUb1BhdGgSEwoLZGVmYXVsdE1vZGUYAyABKAUSEAoIb3B0aW9uYWwYBCABKAgipwYKCUNvbnRhaW5lchIMCgRuYW1lGAEgASgJEg0KBWltYWdlGAIgASgJEg8KB2NvbW1hbmQYAyADKAkSDAoEYXJncxgEIAMoCRISCgp3b3JraW5nRGlyGAUgASgJEjAKBXBvcnRzGAYgAygLMiEuazhzLmlvLmFwaS5jb3JlLnYxLkNvbnRhaW5lclBvcnQSMgoHZW52RnJvbRgTIAMoCzIhLms4cy5pby5hcGkuY29yZS52MS5FbnZGcm9tU291cmNlEicKA2VudhgHIAMoCzIaLms4cy5pby5hcGkuY29yZS52MS5FbnZWYXISOwoJcmVzb3VyY2VzGAggASgLMiguazhzLmlvLmFwaS5jb3JlLnYxLlJlc291cmNlUmVxdWlyZW1lbnRzEjUKDHZvbHVtZU1vdW50cxgJIAMoCzIfLms4cy5pby5hcGkuY29yZS52MS5Wb2x1bWVNb3VudBI3Cg12b2x1bWVEZXZpY2VzGBUgAygLMiAuazhzLmlvLmFwaS5jb3JlLnYxLlZvbHVtZURldmljZRIwCg1saXZlbmVzc1Byb2JlGAogASgLMhkuazhzLmlvLmFwaS5jb3JlLnYxLlByb2JlEjEKDnJlYWRpbmVzc1Byb2JlGAsgASgLMhkuazhzLmlvLmFwaS5jb3JlLnYxLlByb2JlEi8KDHN0YXJ0dXBQcm9iZRgWIAEoCzIZLms4cy5pby5hcGkuY29yZS52MS5Qcm9iZRIwCglsaWZlY3ljbGUYDCABKAsyHS5rOHMuaW8uYXBpLmNvcmUudjEuTGlmZWN5Y2xlEh4KFnRlcm1pbmF0aW9uTWVzc2FnZVBhdGgYDSABKAkSIAoYdGVybWluYXRpb25NZXNzYWdlUG9saWN5GBQgASgJEhcKD2ltYWdlUHVsbFBvbGljeRgOIAEoCRI8Cg9zZWN1cml0eUNvbnRleHQYDyABKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuU2VjdXJpdHlDb250ZXh0Eg0KBXN0ZGluGBAgASgIEhEKCXN0ZGluT25jZRgRIAEoCBILCgN0dHkYEiABKAgiMgoOQ29udGFpbmVySW1hZ2USDQoFbmFtZXMYASADKAkSEQoJc2l6ZUJ5dGVzGAIgASgDImgKDUNvbnRhaW5lclBvcnQSDAoEbmFtZRgBIAEoCRIQCghob3N0UG9ydBgCIAEoBRIVCg1jb250YWluZXJQb3J0GAMgASgFEhAKCHByb3RvY29sGAQgASgJEg4KBmhvc3RJUBgFIAEoCSLKAQoOQ29udGFpbmVyU3RhdGUSOgoHd2FpdGluZxgBIAEoCzIpLms4cy5pby5hcGkuY29yZS52MS5Db250YWluZXJTdGF0ZVdhaXRpbmcSOgoHcnVubmluZxgCIAEoCzIpLms4cy5pby5hcGkuY29yZS52MS5Db250YWluZXJTdGF0ZVJ1bm5pbmcSQAoKdGVybWluYXRlZBgDIAEoCzIsLms4cy5pby5hcGkuY29yZS52MS5Db250YWluZXJTdGF0ZVRlcm1pbmF0ZWQiVgoVQ29udGFpbmVyU3RhdGVSdW5uaW5nEj0KCXN0YXJ0ZWRBdBgBIAEoCzIqLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5UaW1lIvEBChhDb250YWluZXJTdGF0ZVRlcm1pbmF0ZWQSEAoIZXhpdENvZGUYASABKAUSDgoGc2lnbmFsGAIgASgFEg4KBnJlYXNvbhgDIAEoCRIPCgdtZXNzYWdlGAQgASgJEj0KCXN0YXJ0ZWRBdBgFIAEoCzIqLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5UaW1lEj4KCmZpbmlzaGVkQXQYBiABKAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGltZRITCgtjb250YWluZXJJRBgHIAEoCSI4ChVDb250YWluZXJTdGF0ZVdhaXRpbmcSDgoGcmVhc29uGAEgASgJEg8KB21lc3NhZ2UYAiABKAki9AEKD0NvbnRhaW5lclN0YXR1cxIMCgRuYW1lGAEgASgJEjEKBXN0YXRlGAIgASgLMiIuazhzLmlvLmFwaS5jb3JlLnYxLkNvbnRhaW5lclN0YXRlEjUKCWxhc3RTdGF0ZRgDIAEoCzIiLms4cy5pby5hcGkuY29yZS52MS5Db250YWluZXJTdGF0ZRINCgVyZWFkeRgEIAEoCBIUCgxyZXN0YXJ0Q291bnQYBSABKAUSDQoFaW1hZ2UYBiABKAkSDwoHaW1hZ2VJRBgHIAEoCRITCgtjb250YWluZXJJRBgIIAEoCRIPCgdzdGFydGVkGAkgASgIIh4KDkRhZW1vbkVuZHBvaW50EgwKBFBvcnQYASABKAUiUQoVRG93bndhcmRBUElQcm9qZWN0aW9uEjgKBWl0ZW1zGAEgAygLMikuazhzLmlvLmFwaS5jb3JlLnYxLkRvd253YXJkQVBJVm9sdW1lRmlsZSKzAQoVRG93bndhcmRBUElWb2x1bWVGaWxlEgwKBHBhdGgYASABKAkSOQoIZmllbGRSZWYYAiABKAsyJy5rOHMuaW8uYXBpLmNvcmUudjEuT2JqZWN0RmllbGRTZWxlY3RvchJDChByZXNvdXJjZUZpZWxkUmVmGAMgASgLMikuazhzLmlvLmFwaS5jb3JlLnYxLlJlc291cmNlRmllbGRTZWxlY3RvchIMCgRtb2RlGAQgASgFImgKF0Rvd253YXJkQVBJVm9sdW1lU291cmNlEjgKBWl0ZW1zGAEgAygLMikuazhzLmlvLmFwaS5jb3JlLnYxLkRvd253YXJkQVBJVm9sdW1lRmlsZRITCgtkZWZhdWx0TW9kZRgCIAEoBSJpChRFbXB0eURpclZvbHVtZVNvdXJjZRIOCgZtZWRpdW0YASABKAkSQQoJc2l6ZUxpbWl0GAIgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpLnJlc291cmNlLlF1YW50aXR5InkKD0VuZHBvaW50QWRkcmVzcxIKCgJpcBgBIAEoCRIQCghob3N0bmFtZRgDIAEoCRIQCghub2RlTmFtZRgEIAEoCRI2Cgl0YXJnZXRSZWYYAiABKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuT2JqZWN0UmVmZXJlbmNlIlEKDEVuZHBvaW50UG9ydBIMCgRuYW1lGAEgASgJEgwKBHBvcnQYAiABKAUSEAoIcHJvdG9jb2wYAyABKAkSEwoLYXBwUHJvdG9jb2wYBCABKAkiuQEKDkVuZHBvaW50U3Vic2V0EjYKCWFkZHJlc3NlcxgBIAMoCzIjLms4cy5pby5hcGkuY29yZS52MS5FbmRwb2ludEFkZHJlc3MSPgoRbm90UmVhZHlBZGRyZXNzZXMYAiADKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuRW5kcG9pbnRBZGRyZXNzEi8KBXBvcnRzGAMgAygLMiAuazhzLmlvLmFwaS5jb3JlLnYxLkVuZHBvaW50UG9ydCKEAQoJRW5kcG9pbnRzEkIKCG1ldGFkYXRhGAEgASgLMjAuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLk9iamVjdE1ldGESMwoHc3Vic2V0cxgCIAMoCzIiLms4cy5pby5hcGkuY29yZS52MS5FbmRwb2ludFN1YnNldCJ/Cg1FbmRwb2ludHNMaXN0EkAKCG1ldGFkYXRhGAEgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkxpc3RNZXRhEiwKBWl0ZW1zGAIgAygLMh0uazhzLmlvLmFwaS5jb3JlLnYxLkVuZHBvaW50cyKVAQoNRW52RnJvbVNvdXJjZRIOCgZwcmVmaXgYASABKAkSPAoMY29uZmlnTWFwUmVmGAIgASgLMiYuazhzLmlvLmFwaS5jb3JlLnYxLkNvbmZpZ01hcEVudlNvdXJjZRI2CglzZWNyZXRSZWYYAyABKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuU2VjcmV0RW52U291cmNlIloKBkVudlZhchIMCgRuYW1lGAEgASgJEg0KBXZhbHVlGAIgASgJEjMKCXZhbHVlRnJvbRgDIAEoCzIgLms4cy5pby5hcGkuY29yZS52MS5FbnZWYXJTb3VyY2UijgIKDEVudlZhclNvdXJjZRI5CghmaWVsZFJlZhgBIAEoCzInLms4cy5pby5hcGkuY29yZS52MS5PYmplY3RGaWVsZFNlbGVjdG9yEkMKEHJlc291cmNlRmllbGRSZWYYAiABKAsyKS5rOHMuaW8uYXBpLmNvcmUudjEuUmVzb3VyY2VGaWVsZFNlbGVjdG9yEkEKD2NvbmZpZ01hcEtleVJlZhgDIAEoCzIoLms4cy5pby5hcGkuY29yZS52MS5Db25maWdNYXBLZXlTZWxlY3RvchI7CgxzZWNyZXRLZXlSZWYYBCABKAsyJS5rOHMuaW8uYXBpLmNvcmUudjEuU2VjcmV0S2V5U2VsZWN0b3IigQEKEkVwaGVtZXJhbENvbnRhaW5lchJOChhlcGhlbWVyYWxDb250YWluZXJDb21tb24YASABKAsyLC5rOHMuaW8uYXBpLmNvcmUudjEuRXBoZW1lcmFsQ29udGFpbmVyQ29tbW9uEhsKE3RhcmdldENvbnRhaW5lck5hbWUYAiABKAkitgYKGEVwaGVtZXJhbENvbnRhaW5lckNvbW1vbhIMCgRuYW1lGAEgASgJEg0KBWltYWdlGAIgASgJEg8KB2NvbW1hbmQYAyADKAkSDAoEYXJncxgEIAMoCRISCgp3b3JraW5nRGlyGAUgASgJEjAKBXBvcnRzGAYgAygLMiEuazhzLmlvLmFwaS5jb3JlLnYxLkNvbnRhaW5lclBvcnQSMgoHZW52RnJvbRgTIAMoCzIhLms4cy5pby5hcGkuY29yZS52MS5FbnZGcm9tU291cmNlEicKA2VudhgHIAMoCzIaLms4cy5pby5hcGkuY29yZS52MS5FbnZWYXISOwoJcmVzb3VyY2VzGAggASgLMiguazhzLmlvLmFwaS5jb3JlLnYxLlJlc291cmNlUmVxdWlyZW1lbnRzEjUKDHZvbHVtZU1vdW50cxgJIAMoCzIfLms4cy5pby5hcGkuY29yZS52MS5Wb2x1bWVNb3VudBI3Cg12b2x1bWVEZXZpY2VzGBUgAygLMiAuazhzLmlvLmFwaS5jb3JlLnYxLlZvbHVtZURldmljZRIwCg1saXZlbmVzc1Byb2JlGAogASgLMhkuazhzLmlvLmFwaS5jb3JlLnYxLlByb2JlEjEKDnJlYWRpbmVzc1Byb2JlGAsgASgLMhkuazhzLmlvLmFwaS5jb3JlLnYxLlByb2JlEi8KDHN0YXJ0dXBQcm9iZRgWIAEoCzIZLms4cy5pby5hcGkuY29yZS52MS5Qcm9iZRIwCglsaWZlY3ljbGUYDCABKAsyHS5rOHMuaW8uYXBpLmNvcmUudjEuTGlmZWN5Y2xlEh4KFnRlcm1pbmF0aW9uTWVzc2FnZVBhdGgYDSABKAkSIAoYdGVybWluYXRpb25NZXNzYWdlUG9saWN5GBQgASgJEhcKD2ltYWdlUHVsbFBvbGljeRgOIAEoCRI8Cg9zZWN1cml0eUNvbnRleHQYDyABKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuU2VjdXJpdHlDb250ZXh0Eg0KBXN0ZGluGBAgASgIEhEKCXN0ZGluT25jZRgRIAEoCBILCgN0dHkYEiABKAgiZwoVRXBoZW1lcmFsVm9sdW1lU291cmNlEk4KE3ZvbHVtZUNsYWltVGVtcGxhdGUYASABKAsyMS5rOHMuaW8uYXBpLmNvcmUudjEuUGVyc2lzdGVudFZvbHVtZUNsYWltVGVtcGxhdGUi8AQKBUV2ZW50EkIKCG1ldGFkYXRhGAEgASgLMjAuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLk9iamVjdE1ldGESOwoOaW52b2x2ZWRPYmplY3QYAiABKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuT2JqZWN0UmVmZXJlbmNlEg4KBnJlYXNvbhgDIAEoCRIPCgdtZXNzYWdlGAQgASgJEi8KBnNvdXJjZRgFIAEoCzIfLms4cy5pby5hcGkuY29yZS52MS5FdmVudFNvdXJjZRJCCg5maXJzdFRpbWVzdGFtcBgGIAEoCzIqLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5UaW1lEkEKDWxhc3RUaW1lc3RhbXAYByABKAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGltZRINCgVjb3VudBgIIAEoBRIMCgR0eXBlGAkgASgJEkIKCWV2ZW50VGltZRgKIAEoCzIvLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5NaWNyb1RpbWUSLwoGc2VyaWVzGAsgASgLMh8uazhzLmlvLmFwaS5jb3JlLnYxLkV2ZW50U2VyaWVzEg4KBmFjdGlvbhgMIAEoCRI0CgdyZWxhdGVkGA0gASgLMiMuazhzLmlvLmFwaS5jb3JlLnYxLk9iamVjdFJlZmVyZW5jZRIaChJyZXBvcnRpbmdDb21wb25lbnQYDiABKAkSGQoRcmVwb3J0aW5nSW5zdGFuY2UYDyABKAkidwoJRXZlbnRMaXN0EkAKCG1ldGFkYXRhGAEgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkxpc3RNZXRhEigKBWl0ZW1zGAIgAygLMhkuazhzLmlvLmFwaS5jb3JlLnYxLkV2ZW50ImcKC0V2ZW50U2VyaWVzEg0KBWNvdW50GAEgASgFEkkKEGxhc3RPYnNlcnZlZFRpbWUYAiABKAsyLy5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTWljcm9UaW1lIi4KC0V2ZW50U291cmNlEhEKCWNvbXBvbmVudBgBIAEoCRIMCgRob3N0GAIgASgJIh0KCkV4ZWNBY3Rpb24SDwoHY29tbWFuZBgBIAMoCSJiCg5GQ1ZvbHVtZVNvdXJjZRISCgp0YXJnZXRXV05zGAEgAygJEgsKA2x1bhgCIAEoBRIOCgZmc1R5cGUYAyABKAkSEAoIcmVhZE9ubHkYBCABKAgSDQoFd3dpZHMYBSADKAkihAIKGkZsZXhQZXJzaXN0ZW50Vm9sdW1lU291cmNlEg4KBmRyaXZlchgBIAEoCRIOCgZmc1R5cGUYAiABKAkSNgoJc2VjcmV0UmVmGAMgASgLMiMuazhzLmlvLmFwaS5jb3JlLnYxLlNlY3JldFJlZmVyZW5jZRIQCghyZWFkT25seRgEIAEoCBJMCgdvcHRpb25zGAUgAygLMjsuazhzLmlvLmFwaS5jb3JlLnYxLkZsZXhQZXJzaXN0ZW50Vm9sdW1lU291cmNlLk9wdGlvbnNFbnRyeRouCgxPcHRpb25zRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASL1AQoQRmxleFZvbHVtZVNvdXJjZRIOCgZkcml2ZXIYASABKAkSDgoGZnNUeXBlGAIgASgJEjsKCXNlY3JldFJlZhgDIAEoCzIoLms4cy5pby5hcGkuY29yZS52MS5Mb2NhbE9iamVjdFJlZmVyZW5jZRIQCghyZWFkT25seRgEIAEoCBJCCgdvcHRpb25zGAUgAygLMjEuazhzLmlvLmFwaS5jb3JlLnYxLkZsZXhWb2x1bWVTb3VyY2UuT3B0aW9uc0VudHJ5Gi4KDE9wdGlvbnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIj8KE0Zsb2NrZXJWb2x1bWVTb3VyY2USEwoLZGF0YXNldE5hbWUYASABKAkSEwoLZGF0YXNldFVVSUQYAiABKAkiZAodR0NFUGVyc2lzdGVudERpc2tWb2x1bWVTb3VyY2USDgoGcGROYW1lGAEgASgJEg4KBmZzVHlwZRgCIAEoCRIRCglwYXJ0aXRpb24YAyABKAUSEAoIcmVhZE9ubHkYBCABKAgiKwoKR1JQQ0FjdGlvbhIMCgRwb3J0GAEgASgFEg8KB3NlcnZpY2UYAiABKAkiTgoTR2l0UmVwb1ZvbHVtZVNvdXJjZRISCgpyZXBvc2l0b3J5GAEgASgJEhAKCHJldmlzaW9uGAIgASgJEhEKCWRpcmVjdG9yeRgDIAEoCSJwCh9HbHVzdGVyZnNQZXJzaXN0ZW50Vm9sdW1lU291cmNlEhEKCWVuZHBvaW50cxgBIAEoCRIMCgRwYXRoGAIgASgJEhAKCHJlYWRPbmx5GAMgASgIEhoKEmVuZHBvaW50c05hbWVzcGFjZRgEIAEoCSJKChVHbHVzdGVyZnNWb2x1bWVTb3VyY2USEQoJZW5kcG9pbnRzGAEgASgJEgwKBHBhdGgYAiABKAkSEAoIcmVhZE9ubHkYAyABKAgisAEKDUhUVFBHZXRBY3Rpb24SDAoEcGF0aBgBIAEoCRI+CgRwb3J0GAIgASgLMjAuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cudXRpbC5pbnRzdHIuSW50T3JTdHJpbmcSDAoEaG9zdBgDIAEoCRIOCgZzY2hlbWUYBCABKAkSMwoLaHR0cEhlYWRlcnMYBSADKAsyHi5rOHMuaW8uYXBpLmNvcmUudjEuSFRUUEhlYWRlciIpCgpIVFRQSGVhZGVyEgwKBG5hbWUYASABKAkSDQoFdmFsdWUYAiABKAkiKgoJSG9zdEFsaWFzEgoKAmlwGAEgASgJEhEKCWhvc3RuYW1lcxgCIAMoCSIyChRIb3N0UGF0aFZvbHVtZVNvdXJjZRIMCgRwYXRoGAEgASgJEgwKBHR5cGUYAiABKAkimwIKG0lTQ1NJUGVyc2lzdGVudFZvbHVtZVNvdXJjZRIUCgx0YXJnZXRQb3J0YWwYASABKAkSCwoDaXFuGAIgASgJEgsKA2x1bhgDIAEoBRIWCg5pc2NzaUludGVyZmFjZRgEIAEoCRIOCgZmc1R5cGUYBSABKAkSEAoIcmVhZE9ubHkYBiABKAgSDwoHcG9ydGFscxgHIAMoCRIZChFjaGFwQXV0aERpc2NvdmVyeRgIIAEoCBIXCg9jaGFwQXV0aFNlc3Npb24YCyABKAgSNgoJc2VjcmV0UmVmGAogASgLMiMuazhzLmlvLmFwaS5jb3JlLnYxLlNlY3JldFJlZmVyZW5jZRIVCg1pbml0aWF0b3JOYW1lGAwgASgJIpYCChFJU0NTSVZvbHVtZVNvdXJjZRIUCgx0YXJnZXRQb3J0YWwYASABKAkSCwoDaXFuGAIgASgJEgsKA2x1bhgDIAEoBRIWCg5pc2NzaUludGVyZmFjZRgEIAEoCRIOCgZmc1R5cGUYBSABKAkSEAoIcmVhZE9ubHkYBiABKAgSDwoHcG9ydGFscxgHIAMoCRIZChFjaGFwQXV0aERpc2NvdmVyeRgIIAEoCBIXCg9jaGFwQXV0aFNlc3Npb24YCyABKAgSOwoJc2VjcmV0UmVmGAogASgLMiguazhzLmlvLmFwaS5jb3JlLnYxLkxvY2FsT2JqZWN0UmVmZXJlbmNlEhUKDWluaXRpYXRvck5hbWUYDCABKAkiNAoJS2V5VG9QYXRoEgsKA2tleRgBIAEoCRIMCgRwYXRoGAIgASgJEgwKBG1vZGUYAyABKAUiewoJTGlmZWN5Y2xlEjcKCXBvc3RTdGFydBgBIAEoCzIkLms4cy5pby5hcGkuY29yZS52MS5MaWZlY3ljbGVIYW5kbGVyEjUKB3ByZVN0b3AYAiABKAsyJC5rOHMuaW8uYXBpLmNvcmUudjEuTGlmZWN5Y2xlSGFuZGxlciKsAQoQTGlmZWN5Y2xlSGFuZGxlchIsCgRleGVjGAEgASgLMh4uazhzLmlvLmFwaS5jb3JlLnYxLkV4ZWNBY3Rpb24SMgoHaHR0cEdldBgCIAEoCzIhLms4cy5pby5hcGkuY29yZS52MS5IVFRQR2V0QWN0aW9uEjYKCXRjcFNvY2tldBgDIAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5UQ1BTb2NrZXRBY3Rpb24iggEKCkxpbWl0UmFuZ2USQgoIbWV0YWRhdGEYASABKAsyMC5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuT2JqZWN0TWV0YRIwCgRzcGVjGAIgASgLMiIuazhzLmlvLmFwaS5jb3JlLnYxLkxpbWl0UmFuZ2VTcGVjIuwGCg5MaW1pdFJhbmdlSXRlbRIMCgR0eXBlGAEgASgJEjgKA21heBgCIAMoCzIrLms4cy5pby5hcGkuY29yZS52MS5MaW1pdFJhbmdlSXRlbS5NYXhFbnRyeRI4CgNtaW4YAyADKAsyKy5rOHMuaW8uYXBpLmNvcmUudjEuTGltaXRSYW5nZUl0ZW0uTWluRW50cnkSQAoHZGVmYXVsdBgEIAMoCzIvLms4cy5pby5hcGkuY29yZS52MS5MaW1pdFJhbmdlSXRlbS5EZWZhdWx0RW50cnkSTgoOZGVmYXVsdFJlcXVlc3QYBSADKAsyNi5rOHMuaW8uYXBpLmNvcmUudjEuTGltaXRSYW5nZUl0ZW0uRGVmYXVsdFJlcXVlc3RFbnRyeRJaChRtYXhMaW1pdFJlcXVlc3RSYXRpbxgGIAMoCzI8Lms4cy5pby5hcGkuY29yZS52MS5MaW1pdFJhbmdlSXRlbS5NYXhMaW1pdFJlcXVlc3RSYXRpb0VudHJ5GloKCE1heEVudHJ5EgsKA2tleRgBIAEoCRI9CgV2YWx1ZRgCIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaS5yZXNvdXJjZS5RdWFudGl0eToCOAEaWgoITWluRW50cnkSCwoDa2V5GAEgASgJEj0KBXZhbHVlGAIgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpLnJlc291cmNlLlF1YW50aXR5OgI4ARpeCgxEZWZhdWx0RW50cnkSCwoDa2V5GAEgASgJEj0KBXZhbHVlGAIgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpLnJlc291cmNlLlF1YW50aXR5OgI4ARplChNEZWZhdWx0UmVxdWVzdEVudHJ5EgsKA2tleRgBIAEoCRI9CgV2YWx1ZRgCIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaS5yZXNvdXJjZS5RdWFudGl0eToCOAEaawoZTWF4TGltaXRSZXF1ZXN0UmF0aW9FbnRyeRILCgNrZXkYASABKAkSPQoFdmFsdWUYAiABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGkucmVzb3VyY2UuUXVhbnRpdHk6AjgBIoEBCg5MaW1pdFJhbmdlTGlzdBJACghtZXRhZGF0YRgBIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5MaXN0TWV0YRItCgVpdGVtcxgCIAMoCzIeLms4cy5pby5hcGkuY29yZS52MS5MaW1pdFJhbmdlIkQKDkxpbWl0UmFuZ2VTcGVjEjIKBmxpbWl0cxgBIAMoCzIiLms4cy5pby5hcGkuY29yZS52MS5MaW1pdFJhbmdlSXRlbSKGAQoETGlzdBJACghtZXRhZGF0YRgBIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5MaXN0TWV0YRI8CgVpdGVtcxgCIAMoCzItLms4cy5pby5hcGltYWNoaW5lcnkucGtnLnJ1bnRpbWUuUmF3RXh0ZW5zaW9uImIKE0xvYWRCYWxhbmNlckluZ3Jlc3MSCgoCaXAYASABKAkSEAoIaG9zdG5hbWUYAiABKAkSLQoFcG9ydHMYBCADKAsyHi5rOHMuaW8uYXBpLmNvcmUudjEuUG9ydFN0YXR1cyJOChJMb2FkQmFsYW5jZXJTdGF0dXMSOAoHaW5ncmVzcxgBIAMoCzInLms4cy5pby5hcGkuY29yZS52MS5Mb2FkQmFsYW5jZXJJbmdyZXNzIiQKFExvY2FsT2JqZWN0UmVmZXJlbmNlEgwKBG5hbWUYASABKAkiMQoRTG9jYWxWb2x1bWVTb3VyY2USDAoEcGF0aBgBIAEoCRIOCgZmc1R5cGUYAiABKAkiQQoPTkZTVm9sdW1lU291cmNlEg4KBnNlcnZlchgBIAEoCRIMCgRwYXRoGAIgASgJEhAKCHJlYWRPbmx5GAMgASgIIrUBCglOYW1lc3BhY2USQgoIbWV0YWRhdGEYASABKAsyMC5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuT2JqZWN0TWV0YRIvCgRzcGVjGAIgASgLMiEuazhzLmlvLmFwaS5jb3JlLnYxLk5hbWVzcGFjZVNwZWMSMwoGc3RhdHVzGAMgASgLMiMuazhzLmlvLmFwaS5jb3JlLnYxLk5hbWVzcGFjZVN0YXR1cyKbAQoSTmFtZXNwYWNlQ29uZGl0aW9uEgwKBHR5cGUYASABKAkSDgoGc3RhdHVzGAIgASgJEkYKEmxhc3RUcmFuc2l0aW9uVGltZRgEIAEoCzIqLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5UaW1lEg4KBnJlYXNvbhgFIAEoCRIPCgdtZXNzYWdlGAYgASgJIn8KDU5hbWVzcGFjZUxpc3QSQAoIbWV0YWRhdGEYASABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGlzdE1ldGESLAoFaXRlbXMYAiADKAsyHS5rOHMuaW8uYXBpLmNvcmUudjEuTmFtZXNwYWNlIiMKDU5hbWVzcGFjZVNwZWMSEgoKZmluYWxpemVycxgBIAMoCSJcCg9OYW1lc3BhY2VTdGF0dXMSDQoFcGhhc2UYASABKAkSOgoKY29uZGl0aW9ucxgCIAMoCzImLms4cy5pby5hcGkuY29yZS52MS5OYW1lc3BhY2VDb25kaXRpb24ipgEKBE5vZGUSQgoIbWV0YWRhdGEYASABKAsyMC5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuT2JqZWN0TWV0YRIqCgRzcGVjGAIgASgLMhwuazhzLmlvLmFwaS5jb3JlLnYxLk5vZGVTcGVjEi4KBnN0YXR1cxgDIAEoCzIeLms4cy5pby5hcGkuY29yZS52MS5Ob2RlU3RhdHVzIiwKC05vZGVBZGRyZXNzEgwKBHR5cGUYASABKAkSDwoHYWRkcmVzcxgCIAEoCSLOAQoMTm9kZUFmZmluaXR5ElgKLnJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24YASABKAsyIC5rOHMuaW8uYXBpLmNvcmUudjEuTm9kZVNlbGVjdG9yEmQKL3ByZWZlcnJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uGAIgAygLMisuazhzLmlvLmFwaS5jb3JlLnYxLlByZWZlcnJlZFNjaGVkdWxpbmdUZXJtIt0BCg1Ob2RlQ29uZGl0aW9uEgwKBHR5cGUYASABKAkSDgoGc3RhdHVzGAIgASgJEkUKEWxhc3RIZWFydGJlYXRUaW1lGAMgASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLlRpbWUSRgoSbGFzdFRyYW5zaXRpb25UaW1lGAQgASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLlRpbWUSDgoGcmVhc29uGAUgASgJEg8KB21lc3NhZ2UYBiABKAkiVAoQTm9kZUNvbmZpZ1NvdXJjZRJACgljb25maWdNYXAYAiABKAsyLS5rOHMuaW8uYXBpLmNvcmUudjEuQ29uZmlnTWFwTm9kZUNvbmZpZ1NvdXJjZSLMAQoQTm9kZUNvbmZpZ1N0YXR1cxI2Cghhc3NpZ25lZBgBIAEoCzIkLms4cy5pby5hcGkuY29yZS52MS5Ob2RlQ29uZmlnU291cmNlEjQKBmFjdGl2ZRgCIAEoCzIkLms4cy5pby5hcGkuY29yZS52MS5Ob2RlQ29uZmlnU291cmNlEjsKDWxhc3RLbm93bkdvb2QYAyABKAsyJC5rOHMuaW8uYXBpLmNvcmUudjEuTm9kZUNvbmZpZ1NvdXJjZRINCgVlcnJvchgEIAEoCSJSChNOb2RlRGFlbW9uRW5kcG9pbnRzEjsKD2t1YmVsZXRFbmRwb2ludBgBIAEoCzIiLms4cy5pby5hcGkuY29yZS52MS5EYWVtb25FbmRwb2ludCJ1CghOb2RlTGlzdBJACghtZXRhZGF0YRgBIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5MaXN0TWV0YRInCgVpdGVtcxgCIAMoCzIYLms4cy5pby5hcGkuY29yZS52MS5Ob2RlIiAKEE5vZGVQcm94eU9wdGlvbnMSDAoEcGF0aBgBIAEoCSKzAQoNTm9kZVJlc291cmNlcxJBCghjYXBhY2l0eRgBIAMoCzIvLms4cy5pby5hcGkuY29yZS52MS5Ob2RlUmVzb3VyY2VzLkNhcGFjaXR5RW50cnkaXwoNQ2FwYWNpdHlFbnRyeRILCgNrZXkYASABKAkSPQoFdmFsdWUYAiABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGkucmVzb3VyY2UuUXVhbnRpdHk6AjgBIk8KDE5vZGVTZWxlY3RvchI/ChFub2RlU2VsZWN0b3JUZXJtcxgBIAMoCzIkLms4cy5pby5hcGkuY29yZS52MS5Ob2RlU2VsZWN0b3JUZXJtIkgKF05vZGVTZWxlY3RvclJlcXVpcmVtZW50EgsKA2tleRgBIAEoCRIQCghvcGVyYXRvchgCIAEoCRIOCgZ2YWx1ZXMYAyADKAkimwEKEE5vZGVTZWxlY3RvclRlcm0SRQoQbWF0Y2hFeHByZXNzaW9ucxgBIAMoCzIrLms4cy5pby5hcGkuY29yZS52MS5Ob2RlU2VsZWN0b3JSZXF1aXJlbWVudBJACgttYXRjaEZpZWxkcxgCIAMoCzIrLms4cy5pby5hcGkuY29yZS52MS5Ob2RlU2VsZWN0b3JSZXF1aXJlbWVudCLTAQoITm9kZVNwZWMSDwoHcG9kQ0lEUhgBIAEoCRIQCghwb2RDSURScxgHIAMoCRISCgpwcm92aWRlcklEGAMgASgJEhUKDXVuc2NoZWR1bGFibGUYBCABKAgSKQoGdGFpbnRzGAUgAygLMhkuazhzLmlvLmFwaS5jb3JlLnYxLlRhaW50EjoKDGNvbmZpZ1NvdXJjZRgGIAEoCzIkLms4cy5pby5hcGkuY29yZS52MS5Ob2RlQ29uZmlnU291cmNlEhIKCmV4dGVybmFsSUQYAiABKAkihgYKCk5vZGVTdGF0dXMSPgoIY2FwYWNpdHkYASADKAsyLC5rOHMuaW8uYXBpLmNvcmUudjEuTm9kZVN0YXR1cy5DYXBhY2l0eUVudHJ5EkQKC2FsbG9jYXRhYmxlGAIgAygLMi8uazhzLmlvLmFwaS5jb3JlLnYxLk5vZGVTdGF0dXMuQWxsb2NhdGFibGVFbnRyeRINCgVwaGFzZRgDIAEoCRI1Cgpjb25kaXRpb25zGAQgAygLMiEuazhzLmlvLmFwaS5jb3JlLnYxLk5vZGVDb25kaXRpb24SMgoJYWRkcmVzc2VzGAUgAygLMh8uazhzLmlvLmFwaS5jb3JlLnYxLk5vZGVBZGRyZXNzEkAKD2RhZW1vbkVuZHBvaW50cxgGIAEoCzInLms4cy5pby5hcGkuY29yZS52MS5Ob2RlRGFlbW9uRW5kcG9pbnRzEjQKCG5vZGVJbmZvGAcgASgLMiIuazhzLmlvLmFwaS5jb3JlLnYxLk5vZGVTeXN0ZW1JbmZvEjIKBmltYWdlcxgIIAMoCzIiLms4cy5pby5hcGkuY29yZS52MS5Db250YWluZXJJbWFnZRIUCgx2b2x1bWVzSW5Vc2UYCSADKAkSOwoPdm9sdW1lc0F0dGFjaGVkGAogAygLMiIuazhzLmlvLmFwaS5jb3JlLnYxLkF0dGFjaGVkVm9sdW1lEjQKBmNvbmZpZxgLIAEoCzIkLms4cy5pby5hcGkuY29yZS52MS5Ob2RlQ29uZmlnU3RhdHVzGl8KDUNhcGFjaXR5RW50cnkSCwoDa2V5GAEgASgJEj0KBXZhbHVlGAIgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpLnJlc291cmNlLlF1YW50aXR5OgI4ARpiChBBbGxvY2F0YWJsZUVudHJ5EgsKA2tleRgBIAEoCRI9CgV2YWx1ZRgCIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaS5yZXNvdXJjZS5RdWFudGl0eToCOAEi8QEKDk5vZGVTeXN0ZW1JbmZvEhEKCW1hY2hpbmVJRBgBIAEoCRISCgpzeXN0ZW1VVUlEGAIgASgJEg4KBmJvb3RJRBgDIAEoCRIVCg1rZXJuZWxWZXJzaW9uGAQgASgJEg8KB29zSW1hZ2UYBSABKAkSHwoXY29udGFpbmVyUnVudGltZVZlcnNpb24YBiABKAkSFgoOa3ViZWxldFZlcnNpb24YByABKAkSGAoQa3ViZVByb3h5VmVyc2lvbhgIIAEoCRIXCg9vcGVyYXRpbmdTeXN0ZW0YCSABKAkSFAoMYXJjaGl0ZWN0dXJlGAogASgJIjwKE09iamVjdEZpZWxkU2VsZWN0b3ISEgoKYXBpVmVyc2lvbhgBIAEoCRIRCglmaWVsZFBhdGgYAiABKAkijQEKD09iamVjdFJlZmVyZW5jZRIMCgRraW5kGAEgASgJEhEKCW5hbWVzcGFjZRgCIAEoCRIMCgRuYW1lGAMgASgJEgsKA3VpZBgEIAEoCRISCgphcGlWZXJzaW9uGAUgASgJEhcKD3Jlc291cmNlVmVyc2lvbhgGIAEoCRIRCglmaWVsZFBhdGgYByABKAkiygEKEFBlcnNpc3RlbnRWb2x1bWUSQgoIbWV0YWRhdGEYASABKAsyMC5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuT2JqZWN0TWV0YRI2CgRzcGVjGAIgASgLMiguazhzLmlvLmFwaS5jb3JlLnYxLlBlcnNpc3RlbnRWb2x1bWVTcGVjEjoKBnN0YXR1cxgDIAEoCzIqLms4cy5pby5hcGkuY29yZS52MS5QZXJzaXN0ZW50Vm9sdW1lU3RhdHVzItkBChVQZXJzaXN0ZW50Vm9sdW1lQ2xhaW0SQgoIbWV0YWRhdGEYASABKAsyMC5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuT2JqZWN0TWV0YRI7CgRzcGVjGAIgASgLMi0uazhzLmlvLmFwaS5jb3JlLnYxLlBlcnNpc3RlbnRWb2x1bWVDbGFpbVNwZWMSPwoGc3RhdHVzGAMgASgLMi8uazhzLmlvLmFwaS5jb3JlLnYxLlBlcnNpc3RlbnRWb2x1bWVDbGFpbVN0YXR1cyLqAQoeUGVyc2lzdGVudFZvbHVtZUNsYWltQ29uZGl0aW9uEgwKBHR5cGUYASABKAkSDgoGc3RhdHVzGAIgASgJEkEKDWxhc3RQcm9iZVRpbWUYAyABKAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGltZRJGChJsYXN0VHJhbnNpdGlvblRpbWUYBCABKAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGltZRIOCgZyZWFzb24YBSABKAkSDwoHbWVzc2FnZRgGIAEoCSKXAQoZUGVyc2lzdGVudFZvbHVtZUNsYWltTGlzdBJACghtZXRhZGF0YRgBIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5MaXN0TWV0YRI4CgVpdGVtcxgCIAMoCzIpLms4cy5pby5hcGkuY29yZS52MS5QZXJzaXN0ZW50Vm9sdW1lQ2xhaW0i/wIKGVBlcnNpc3RlbnRWb2x1bWVDbGFpbVNwZWMSEwoLYWNjZXNzTW9kZXMYASADKAkSRQoIc2VsZWN0b3IYBCABKAsyMy5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGFiZWxTZWxlY3RvchI7CglyZXNvdXJjZXMYAiABKAsyKC5rOHMuaW8uYXBpLmNvcmUudjEuUmVzb3VyY2VSZXF1aXJlbWVudHMSEgoKdm9sdW1lTmFtZRgDIAEoCRIYChBzdG9yYWdlQ2xhc3NOYW1lGAUgASgJEhIKCnZvbHVtZU1vZGUYBiABKAkSQQoKZGF0YVNvdXJjZRgHIAEoCzItLms4cy5pby5hcGkuY29yZS52MS5UeXBlZExvY2FsT2JqZWN0UmVmZXJlbmNlEkQKDWRhdGFTb3VyY2VSZWYYCCABKAsyLS5rOHMuaW8uYXBpLmNvcmUudjEuVHlwZWRMb2NhbE9iamVjdFJlZmVyZW5jZSKhBAobUGVyc2lzdGVudFZvbHVtZUNsYWltU3RhdHVzEg0KBXBoYXNlGAEgASgJEhMKC2FjY2Vzc01vZGVzGAIgAygJEk8KCGNhcGFjaXR5GAMgAygLMj0uazhzLmlvLmFwaS5jb3JlLnYxLlBlcnNpc3RlbnRWb2x1bWVDbGFpbVN0YXR1cy5DYXBhY2l0eUVudHJ5EkYKCmNvbmRpdGlvbnMYBCADKAsyMi5rOHMuaW8uYXBpLmNvcmUudjEuUGVyc2lzdGVudFZvbHVtZUNsYWltQ29uZGl0aW9uEmMKEmFsbG9jYXRlZFJlc291cmNlcxgFIAMoCzJHLms4cy5pby5hcGkuY29yZS52MS5QZXJzaXN0ZW50Vm9sdW1lQ2xhaW1TdGF0dXMuQWxsb2NhdGVkUmVzb3VyY2VzRW50cnkSFAoMcmVzaXplU3RhdHVzGAYgASgJGl8KDUNhcGFjaXR5RW50cnkSCwoDa2V5GAEgASgJEj0KBXZhbHVlGAIgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpLnJlc291cmNlLlF1YW50aXR5OgI4ARppChdBbGxvY2F0ZWRSZXNvdXJjZXNFbnRyeRILCgNrZXkYASABKAkSPQoFdmFsdWUYAiABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGkucmVzb3VyY2UuUXVhbnRpdHk6AjgBIqABCh1QZXJzaXN0ZW50Vm9sdW1lQ2xhaW1UZW1wbGF0ZRJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEjsKBHNwZWMYAiABKAsyLS5rOHMuaW8uYXBpLmNvcmUudjEuUGVyc2lzdGVudFZvbHVtZUNsYWltU3BlYyJICiFQZXJzaXN0ZW50Vm9sdW1lQ2xhaW1Wb2x1bWVTb3VyY2USEQoJY2xhaW1OYW1lGAEgASgJEhAKCHJlYWRPbmx5GAIgASgIIo0BChRQZXJzaXN0ZW50Vm9sdW1lTGlzdBJACghtZXRhZGF0YRgBIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5MaXN0TWV0YRIzCgVpdGVtcxgCIAMoCzIkLms4cy5pby5hcGkuY29yZS52MS5QZXJzaXN0ZW50Vm9sdW1lIr0LChZQZXJzaXN0ZW50Vm9sdW1lU291cmNlEkwKEWdjZVBlcnNpc3RlbnREaXNrGAEgASgLMjEuazhzLmlvLmFwaS5jb3JlLnYxLkdDRVBlcnNpc3RlbnREaXNrVm9sdW1lU291cmNlElIKFGF3c0VsYXN0aWNCbG9ja1N0b3JlGAIgASgLMjQuazhzLmlvLmFwaS5jb3JlLnYxLkFXU0VsYXN0aWNCbG9ja1N0b3JlVm9sdW1lU291cmNlEjoKCGhvc3RQYXRoGAMgASgLMiguazhzLmlvLmFwaS5jb3JlLnYxLkhvc3RQYXRoVm9sdW1lU291cmNlEkYKCWdsdXN0ZXJmcxgEIAEoCzIzLms4cy5pby5hcGkuY29yZS52MS5HbHVzdGVyZnNQZXJzaXN0ZW50Vm9sdW1lU291cmNlEjAKA25mcxgFIAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5ORlNWb2x1bWVTb3VyY2USOgoDcmJkGAYgASgLMi0uazhzLmlvLmFwaS5jb3JlLnYxLlJCRFBlcnNpc3RlbnRWb2x1bWVTb3VyY2USPgoFaXNjc2kYByABKAsyLy5rOHMuaW8uYXBpLmNvcmUudjEuSVNDU0lQZXJzaXN0ZW50Vm9sdW1lU291cmNlEkAKBmNpbmRlchgIIAEoCzIwLms4cy5pby5hcGkuY29yZS52MS5DaW5kZXJQZXJzaXN0ZW50Vm9sdW1lU291cmNlEkAKBmNlcGhmcxgJIAEoCzIwLms4cy5pby5hcGkuY29yZS52MS5DZXBoRlNQZXJzaXN0ZW50Vm9sdW1lU291cmNlEi4KAmZjGAogASgLMiIuazhzLmlvLmFwaS5jb3JlLnYxLkZDVm9sdW1lU291cmNlEjgKB2Zsb2NrZXIYCyABKAsyJy5rOHMuaW8uYXBpLmNvcmUudjEuRmxvY2tlclZvbHVtZVNvdXJjZRJCCgpmbGV4Vm9sdW1lGAwgASgLMi4uazhzLmlvLmFwaS5jb3JlLnYxLkZsZXhQZXJzaXN0ZW50Vm9sdW1lU291cmNlEkYKCWF6dXJlRmlsZRgNIAEoCzIzLms4cy5pby5hcGkuY29yZS52MS5BenVyZUZpbGVQZXJzaXN0ZW50Vm9sdW1lU291cmNlEkkKDXZzcGhlcmVWb2x1bWUYDiABKAsyMi5rOHMuaW8uYXBpLmNvcmUudjEuVnNwaGVyZVZpcnR1YWxEaXNrVm9sdW1lU291cmNlEjgKB3F1b2J5dGUYDyABKAsyJy5rOHMuaW8uYXBpLmNvcmUudjEuUXVvYnl0ZVZvbHVtZVNvdXJjZRI8CglhenVyZURpc2sYECABKAsyKS5rOHMuaW8uYXBpLmNvcmUudjEuQXp1cmVEaXNrVm9sdW1lU291cmNlElIKFHBob3RvblBlcnNpc3RlbnREaXNrGBEgASgLMjQuazhzLmlvLmFwaS5jb3JlLnYxLlBob3RvblBlcnNpc3RlbnREaXNrVm9sdW1lU291cmNlEkAKDnBvcnR3b3J4Vm9sdW1lGBIgASgLMiguazhzLmlvLmFwaS5jb3JlLnYxLlBvcnR3b3J4Vm9sdW1lU291cmNlEkIKB3NjYWxlSU8YEyABKAsyMS5rOHMuaW8uYXBpLmNvcmUudjEuU2NhbGVJT1BlcnNpc3RlbnRWb2x1bWVTb3VyY2USNAoFbG9jYWwYFCABKAsyJS5rOHMuaW8uYXBpLmNvcmUudjEuTG9jYWxWb2x1bWVTb3VyY2USRgoJc3RvcmFnZW9zGBUgASgLMjMuazhzLmlvLmFwaS5jb3JlLnYxLlN0b3JhZ2VPU1BlcnNpc3RlbnRWb2x1bWVTb3VyY2USOgoDY3NpGBYgASgLMi0uazhzLmlvLmFwaS5jb3JlLnYxLkNTSVBlcnNpc3RlbnRWb2x1bWVTb3VyY2UiggQKFFBlcnNpc3RlbnRWb2x1bWVTcGVjEkgKCGNhcGFjaXR5GAEgAygLMjYuazhzLmlvLmFwaS5jb3JlLnYxLlBlcnNpc3RlbnRWb2x1bWVTcGVjLkNhcGFjaXR5RW50cnkSSgoWcGVyc2lzdGVudFZvbHVtZVNvdXJjZRgCIAEoCzIqLms4cy5pby5hcGkuY29yZS52MS5QZXJzaXN0ZW50Vm9sdW1lU291cmNlEhMKC2FjY2Vzc01vZGVzGAMgAygJEjUKCGNsYWltUmVmGAQgASgLMiMuazhzLmlvLmFwaS5jb3JlLnYxLk9iamVjdFJlZmVyZW5jZRIlCh1wZXJzaXN0ZW50Vm9sdW1lUmVjbGFpbVBvbGljeRgFIAEoCRIYChBzdG9yYWdlQ2xhc3NOYW1lGAYgASgJEhQKDG1vdW50T3B0aW9ucxgHIAMoCRISCgp2b2x1bWVNb2RlGAggASgJEjwKDG5vZGVBZmZpbml0eRgJIAEoCzImLms4cy5pby5hcGkuY29yZS52MS5Wb2x1bWVOb2RlQWZmaW5pdHkaXwoNQ2FwYWNpdHlFbnRyeRILCgNrZXkYASABKAkSPQoFdmFsdWUYAiABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGkucmVzb3VyY2UuUXVhbnRpdHk6AjgBIkgKFlBlcnNpc3RlbnRWb2x1bWVTdGF0dXMSDQoFcGhhc2UYASABKAkSDwoHbWVzc2FnZRgCIAEoCRIOCgZyZWFzb24YAyABKAkiQAogUGhvdG9uUGVyc2lzdGVudERpc2tWb2x1bWVTb3VyY2USDAoEcGRJRBgBIAEoCRIOCgZmc1R5cGUYAiABKAkiowEKA1BvZBJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEikKBHNwZWMYAiABKAsyGy5rOHMuaW8uYXBpLmNvcmUudjEuUG9kU3BlYxItCgZzdGF0dXMYAyABKAsyHS5rOHMuaW8uYXBpLmNvcmUudjEuUG9kU3RhdHVzItABCgtQb2RBZmZpbml0eRJbCi5yZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uGAEgAygLMiMuazhzLmlvLmFwaS5jb3JlLnYxLlBvZEFmZmluaXR5VGVybRJkCi9wcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbhgCIAMoCzIrLms4cy5pby5hcGkuY29yZS52MS5XZWlnaHRlZFBvZEFmZmluaXR5VGVybSLWAQoPUG9kQWZmaW5pdHlUZXJtEkoKDWxhYmVsU2VsZWN0b3IYASABKAsyMy5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGFiZWxTZWxlY3RvchISCgpuYW1lc3BhY2VzGAIgAygJEhMKC3RvcG9sb2d5S2V5GAMgASgJEk4KEW5hbWVzcGFjZVNlbGVjdG9yGAQgASgLMjMuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkxhYmVsU2VsZWN0b3Ii1AEKD1BvZEFudGlBZmZpbml0eRJbCi5yZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uGAEgAygLMiMuazhzLmlvLmFwaS5jb3JlLnYxLlBvZEFmZmluaXR5VGVybRJkCi9wcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbhgCIAMoCzIrLms4cy5pby5hcGkuY29yZS52MS5XZWlnaHRlZFBvZEFmZmluaXR5VGVybSJhChBQb2RBdHRhY2hPcHRpb25zEg0KBXN0ZGluGAEgASgIEg4KBnN0ZG91dBgCIAEoCBIOCgZzdGRlcnIYAyABKAgSCwoDdHR5GAQgASgIEhEKCWNvbnRhaW5lchgFIAEoCSLYAQoMUG9kQ29uZGl0aW9uEgwKBHR5cGUYASABKAkSDgoGc3RhdHVzGAIgASgJEkEKDWxhc3RQcm9iZVRpbWUYAyABKAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGltZRJGChJsYXN0VHJhbnNpdGlvblRpbWUYBCABKAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGltZRIOCgZyZWFzb24YBSABKAkSDwoHbWVzc2FnZRgGIAEoCSJuCgxQb2RETlNDb25maWcSEwoLbmFtZXNlcnZlcnMYASADKAkSEAoIc2VhcmNoZXMYAiADKAkSNwoHb3B0aW9ucxgDIAMoCzImLms4cy5pby5hcGkuY29yZS52MS5Qb2RETlNDb25maWdPcHRpb24iMQoSUG9kRE5TQ29uZmlnT3B0aW9uEgwKBG5hbWUYASABKAkSDQoFdmFsdWUYAiABKAkicAoOUG9kRXhlY09wdGlvbnMSDQoFc3RkaW4YASABKAgSDgoGc3Rkb3V0GAIgASgIEg4KBnN0ZGVychgDIAEoCBILCgN0dHkYBCABKAgSEQoJY29udGFpbmVyGAUgASgJEg8KB2NvbW1hbmQYBiADKAkiEwoFUG9kSVASCgoCaXAYASABKAkicwoHUG9kTGlzdBJACghtZXRhZGF0YRgBIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5MaXN0TWV0YRImCgVpdGVtcxgCIAMoCzIXLms4cy5pby5hcGkuY29yZS52MS5Qb2Qi+gEKDVBvZExvZ09wdGlvbnMSEQoJY29udGFpbmVyGAEgASgJEg4KBmZvbGxvdxgCIAEoCBIQCghwcmV2aW91cxgDIAEoCBIUCgxzaW5jZVNlY29uZHMYBCABKAMSPQoJc2luY2VUaW1lGAUgASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLlRpbWUSEgoKdGltZXN0YW1wcxgGIAEoCBIRCgl0YWlsTGluZXMYByABKAMSEgoKbGltaXRCeXRlcxgIIAEoAxIkChxpbnNlY3VyZVNraXBUTFNWZXJpZnlCYWNrZW5kGAkgASgIIhUKBVBvZE9TEgwKBG5hbWUYASABKAkiJgoVUG9kUG9ydEZvcndhcmRPcHRpb25zEg0KBXBvcnRzGAEgAygFIh8KD1BvZFByb3h5T3B0aW9ucxIMCgRwYXRoGAEgASgJIikKEFBvZFJlYWRpbmVzc0dhdGUSFQoNY29uZGl0aW9uVHlwZRgBIAEoCSKLAwoSUG9kU2VjdXJpdHlDb250ZXh0EjoKDnNlTGludXhPcHRpb25zGAEgASgLMiIuazhzLmlvLmFwaS5jb3JlLnYxLlNFTGludXhPcHRpb25zEkkKDndpbmRvd3NPcHRpb25zGAggASgLMjEuazhzLmlvLmFwaS5jb3JlLnYxLldpbmRvd3NTZWN1cml0eUNvbnRleHRPcHRpb25zEhEKCXJ1bkFzVXNlchgCIAEoAxISCgpydW5Bc0dyb3VwGAYgASgDEhQKDHJ1bkFzTm9uUm9vdBgDIAEoCBIaChJzdXBwbGVtZW50YWxHcm91cHMYBCADKAMSDwoHZnNHcm91cBgFIAEoAxIrCgdzeXNjdGxzGAcgAygLMhouazhzLmlvLmFwaS5jb3JlLnYxLlN5c2N0bBIbChNmc0dyb3VwQ2hhbmdlUG9saWN5GAkgASgJEjoKDnNlY2NvbXBQcm9maWxlGAogASgLMiIuazhzLmlvLmFwaS5jb3JlLnYxLlNlY2NvbXBQcm9maWxlIlsKDFBvZFNpZ25hdHVyZRJLCg1wb2RDb250cm9sbGVyGAEgASgLMjQuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLk93bmVyUmVmZXJlbmNlIowMCgdQb2RTcGVjEisKB3ZvbHVtZXMYASADKAsyGi5rOHMuaW8uYXBpLmNvcmUudjEuVm9sdW1lEjUKDmluaXRDb250YWluZXJzGBQgAygLMh0uazhzLmlvLmFwaS5jb3JlLnYxLkNvbnRhaW5lchIxCgpjb250YWluZXJzGAIgAygLMh0uazhzLmlvLmFwaS5jb3JlLnYxLkNvbnRhaW5lchJDChNlcGhlbWVyYWxDb250YWluZXJzGCIgAygLMiYuazhzLmlvLmFwaS5jb3JlLnYxLkVwaGVtZXJhbENvbnRhaW5lchIVCg1yZXN0YXJ0UG9saWN5GAMgASgJEiUKHXRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzGAQgASgDEh0KFWFjdGl2ZURlYWRsaW5lU2Vjb25kcxgFIAEoAxIRCglkbnNQb2xpY3kYBiABKAkSQwoMbm9kZVNlbGVjdG9yGAcgAygLMi0uazhzLmlvLmFwaS5jb3JlLnYxLlBvZFNwZWMuTm9kZVNlbGVjdG9yRW50cnkSGgoSc2VydmljZUFjY291bnROYW1lGAggASgJEhYKDnNlcnZpY2VBY2NvdW50GAkgASgJEiQKHGF1dG9tb3VudFNlcnZpY2VBY2NvdW50VG9rZW4YFSABKAgSEAoIbm9kZU5hbWUYCiABKAkSEwoLaG9zdE5ldHdvcmsYCyABKAgSDwoHaG9zdFBJRBgMIAEoCBIPCgdob3N0SVBDGA0gASgIEh0KFXNoYXJlUHJvY2Vzc05hbWVzcGFjZRgbIAEoCBI/Cg9zZWN1cml0eUNvbnRleHQYDiABKAsyJi5rOHMuaW8uYXBpLmNvcmUudjEuUG9kU2VjdXJpdHlDb250ZXh0EkIKEGltYWdlUHVsbFNlY3JldHMYDyADKAsyKC5rOHMuaW8uYXBpLmNvcmUudjEuTG9jYWxPYmplY3RSZWZlcmVuY2USEAoIaG9zdG5hbWUYECABKAkSEQoJc3ViZG9tYWluGBEgASgJEi4KCGFmZmluaXR5GBIgASgLMhwuazhzLmlvLmFwaS5jb3JlLnYxLkFmZmluaXR5EhUKDXNjaGVkdWxlck5hbWUYEyABKAkSMwoLdG9sZXJhdGlvbnMYFiADKAsyHi5rOHMuaW8uYXBpLmNvcmUudjEuVG9sZXJhdGlvbhIyCgtob3N0QWxpYXNlcxgXIAMoCzIdLms4cy5pby5hcGkuY29yZS52MS5Ib3N0QWxpYXMSGQoRcHJpb3JpdHlDbGFzc05hbWUYGCABKAkSEAoIcHJpb3JpdHkYGSABKAUSMwoJZG5zQ29uZmlnGBogASgLMiAuazhzLmlvLmFwaS5jb3JlLnYxLlBvZEROU0NvbmZpZxI8Cg5yZWFkaW5lc3NHYXRlcxgcIAMoCzIkLms4cy5pby5hcGkuY29yZS52MS5Qb2RSZWFkaW5lc3NHYXRlEhgKEHJ1bnRpbWVDbGFzc05hbWUYHSABKAkSGgoSZW5hYmxlU2VydmljZUxpbmtzGB4gASgIEhgKEHByZWVtcHRpb25Qb2xpY3kYHyABKAkSOwoIb3ZlcmhlYWQYICADKAsyKS5rOHMuaW8uYXBpLmNvcmUudjEuUG9kU3BlYy5PdmVyaGVhZEVudHJ5Ek8KGXRvcG9sb2d5U3ByZWFkQ29uc3RyYWludHMYISADKAsyLC5rOHMuaW8uYXBpLmNvcmUudjEuVG9wb2xvZ3lTcHJlYWRDb25zdHJhaW50EhkKEXNldEhvc3RuYW1lQXNGUUROGCMgASgIEiUKAm9zGCQgASgLMhkuazhzLmlvLmFwaS5jb3JlLnYxLlBvZE9TGjMKEU5vZGVTZWxlY3RvckVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaXwoNT3ZlcmhlYWRFbnRyeRILCgNrZXkYASABKAkSPQoFdmFsdWUYAiABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGkucmVzb3VyY2UuUXVhbnRpdHk6AjgBIvQDCglQb2RTdGF0dXMSDQoFcGhhc2UYASABKAkSNAoKY29uZGl0aW9ucxgCIAMoCzIgLms4cy5pby5hcGkuY29yZS52MS5Qb2RDb25kaXRpb24SDwoHbWVzc2FnZRgDIAEoCRIOCgZyZWFzb24YBCABKAkSGQoRbm9taW5hdGVkTm9kZU5hbWUYCyABKAkSDgoGaG9zdElQGAUgASgJEg0KBXBvZElQGAYgASgJEikKBnBvZElQcxgMIAMoCzIZLms4cy5pby5hcGkuY29yZS52MS5Qb2RJUBI9CglzdGFydFRpbWUYByABKAsyKi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuVGltZRJCChVpbml0Q29udGFpbmVyU3RhdHVzZXMYCiADKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuQ29udGFpbmVyU3RhdHVzEj4KEWNvbnRhaW5lclN0YXR1c2VzGAggAygLMiMuazhzLmlvLmFwaS5jb3JlLnYxLkNvbnRhaW5lclN0YXR1cxIQCghxb3NDbGFzcxgJIAEoCRJHChplcGhlbWVyYWxDb250YWluZXJTdGF0dXNlcxgNIAMoCzIjLms4cy5pby5hcGkuY29yZS52MS5Db250YWluZXJTdGF0dXMihAEKD1BvZFN0YXR1c1Jlc3VsdBJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEi0KBnN0YXR1cxgCIAEoCzIdLms4cy5pby5hcGkuY29yZS52MS5Qb2RTdGF0dXMiiAEKC1BvZFRlbXBsYXRlEkIKCG1ldGFkYXRhGAEgASgLMjAuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLk9iamVjdE1ldGESNQoIdGVtcGxhdGUYAiABKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuUG9kVGVtcGxhdGVTcGVjIoMBCg9Qb2RUZW1wbGF0ZUxpc3QSQAoIbWV0YWRhdGEYASABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGlzdE1ldGESLgoFaXRlbXMYAiADKAsyHy5rOHMuaW8uYXBpLmNvcmUudjEuUG9kVGVtcGxhdGUigAEKD1BvZFRlbXBsYXRlU3BlYxJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEikKBHNwZWMYAiABKAsyGy5rOHMuaW8uYXBpLmNvcmUudjEuUG9kU3BlYyI7CgpQb3J0U3RhdHVzEgwKBHBvcnQYASABKAUSEAoIcHJvdG9jb2wYAiABKAkSDQoFZXJyb3IYAyABKAkiSgoUUG9ydHdvcnhWb2x1bWVTb3VyY2USEAoIdm9sdW1lSUQYASABKAkSDgoGZnNUeXBlGAIgASgJEhAKCHJlYWRPbmx5GAMgASgIIhwKDVByZWNvbmRpdGlvbnMSCwoDdWlkGAEgASgJIrEBChRQcmVmZXJBdm9pZFBvZHNFbnRyeRI2Cgxwb2RTaWduYXR1cmUYASABKAsyIC5rOHMuaW8uYXBpLmNvcmUudjEuUG9kU2lnbmF0dXJlEkAKDGV2aWN0aW9uVGltZRgCIAEoCzIqLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5UaW1lEg4KBnJlYXNvbhgDIAEoCRIPCgdtZXNzYWdlGAQgASgJImMKF1ByZWZlcnJlZFNjaGVkdWxpbmdUZXJtEg4KBndlaWdodBgBIAEoBRI4CgpwcmVmZXJlbmNlGAIgASgLMiQuazhzLmlvLmFwaS5jb3JlLnYxLk5vZGVTZWxlY3RvclRlcm0i4QEKBVByb2JlEjEKB2hhbmRsZXIYASABKAsyIC5rOHMuaW8uYXBpLmNvcmUudjEuUHJvYmVIYW5kbGVyEhsKE2luaXRpYWxEZWxheVNlY29uZHMYAiABKAUSFgoOdGltZW91dFNlY29uZHMYAyABKAUSFQoNcGVyaW9kU2Vjb25kcxgEIAEoBRIYChBzdWNjZXNzVGhyZXNob2xkGAUgASgFEhgKEGZhaWx1cmVUaHJlc2hvbGQYBiABKAUSJQoddGVybWluYXRpb25HcmFjZVBlcmlvZFNlY29uZHMYByABKAMi1gEKDFByb2JlSGFuZGxlchIsCgRleGVjGAEgASgLMh4uazhzLmlvLmFwaS5jb3JlLnYxLkV4ZWNBY3Rpb24SMgoHaHR0cEdldBgCIAEoCzIhLms4cy5pby5hcGkuY29yZS52MS5IVFRQR2V0QWN0aW9uEjYKCXRjcFNvY2tldBgDIAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5UQ1BTb2NrZXRBY3Rpb24SLAoEZ3JwYxgEIAEoCzIeLms4cy5pby5hcGkuY29yZS52MS5HUlBDQWN0aW9uImMKFVByb2plY3RlZFZvbHVtZVNvdXJjZRI1Cgdzb3VyY2VzGAEgAygLMiQuazhzLmlvLmFwaS5jb3JlLnYxLlZvbHVtZVByb2plY3Rpb24SEwoLZGVmYXVsdE1vZGUYAiABKAUidgoTUXVvYnl0ZVZvbHVtZVNvdXJjZRIQCghyZWdpc3RyeRgBIAEoCRIOCgZ2b2x1bWUYAiABKAkSEAoIcmVhZE9ubHkYAyABKAgSDAoEdXNlchgEIAEoCRINCgVncm91cBgFIAEoCRIOCgZ0ZW5hbnQYBiABKAkiwwEKGVJCRFBlcnNpc3RlbnRWb2x1bWVTb3VyY2USEAoIbW9uaXRvcnMYASADKAkSDQoFaW1hZ2UYAiABKAkSDgoGZnNUeXBlGAMgASgJEgwKBHBvb2wYBCABKAkSDAoEdXNlchgFIAEoCRIPCgdrZXlyaW5nGAYgASgJEjYKCXNlY3JldFJlZhgHIAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5TZWNyZXRSZWZlcmVuY2USEAoIcmVhZE9ubHkYCCABKAgivgEKD1JCRFZvbHVtZVNvdXJjZRIQCghtb25pdG9ycxgBIAMoCRINCgVpbWFnZRgCIAEoCRIOCgZmc1R5cGUYAyABKAkSDAoEcG9vbBgEIAEoCRIMCgR1c2VyGAUgASgJEg8KB2tleXJpbmcYBiABKAkSOwoJc2VjcmV0UmVmGAcgASgLMiguazhzLmlvLmFwaS5jb3JlLnYxLkxvY2FsT2JqZWN0UmVmZXJlbmNlEhAKCHJlYWRPbmx5GAggASgIInIKD1JhbmdlQWxsb2NhdGlvbhJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEg0KBXJhbmdlGAIgASgJEgwKBGRhdGEYAyABKAwi2QEKFVJlcGxpY2F0aW9uQ29udHJvbGxlchJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEjsKBHNwZWMYAiABKAsyLS5rOHMuaW8uYXBpLmNvcmUudjEuUmVwbGljYXRpb25Db250cm9sbGVyU3BlYxI/CgZzdGF0dXMYAyABKAsyLy5rOHMuaW8uYXBpLmNvcmUudjEuUmVwbGljYXRpb25Db250cm9sbGVyU3RhdHVzIqcBCh5SZXBsaWNhdGlvbkNvbnRyb2xsZXJDb25kaXRpb24SDAoEdHlwZRgBIAEoCRIOCgZzdGF0dXMYAiABKAkSRgoSbGFzdFRyYW5zaXRpb25UaW1lGAMgASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLlRpbWUSDgoGcmVhc29uGAQgASgJEg8KB21lc3NhZ2UYBSABKAkilwEKGVJlcGxpY2F0aW9uQ29udHJvbGxlckxpc3QSQAoIbWV0YWRhdGEYASABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGlzdE1ldGESOAoFaXRlbXMYAiADKAsyKS5rOHMuaW8uYXBpLmNvcmUudjEuUmVwbGljYXRpb25Db250cm9sbGVyIv0BChlSZXBsaWNhdGlvbkNvbnRyb2xsZXJTcGVjEhAKCHJlcGxpY2FzGAEgASgFEhcKD21pblJlYWR5U2Vjb25kcxgEIAEoBRJNCghzZWxlY3RvchgCIAMoCzI7Lms4cy5pby5hcGkuY29yZS52MS5SZXBsaWNhdGlvbkNvbnRyb2xsZXJTcGVjLlNlbGVjdG9yRW50cnkSNQoIdGVtcGxhdGUYAyABKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuUG9kVGVtcGxhdGVTcGVjGi8KDVNlbGVjdG9yRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLjAQobUmVwbGljYXRpb25Db250cm9sbGVyU3RhdHVzEhAKCHJlcGxpY2FzGAEgASgFEhwKFGZ1bGx5TGFiZWxlZFJlcGxpY2FzGAIgASgFEhUKDXJlYWR5UmVwbGljYXMYBCABKAUSGQoRYXZhaWxhYmxlUmVwbGljYXMYBSABKAUSGgoSb2JzZXJ2ZWRHZW5lcmF0aW9uGAMgASgDEkYKCmNvbmRpdGlvbnMYBiADKAsyMi5rOHMuaW8uYXBpLmNvcmUudjEuUmVwbGljYXRpb25Db250cm9sbGVyQ29uZGl0aW9uIoEBChVSZXNvdXJjZUZpZWxkU2VsZWN0b3ISFQoNY29udGFpbmVyTmFtZRgBIAEoCRIQCghyZXNvdXJjZRgCIAEoCRI/CgdkaXZpc29yGAMgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpLnJlc291cmNlLlF1YW50aXR5IsEBCg1SZXNvdXJjZVF1b3RhEkIKCG1ldGFkYXRhGAEgASgLMjAuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLk9iamVjdE1ldGESMwoEc3BlYxgCIAEoCzIlLms4cy5pby5hcGkuY29yZS52MS5SZXNvdXJjZVF1b3RhU3BlYxI3CgZzdGF0dXMYAyABKAsyJy5rOHMuaW8uYXBpLmNvcmUudjEuUmVzb3VyY2VRdW90YVN0YXR1cyKHAQoRUmVzb3VyY2VRdW90YUxpc3QSQAoIbWV0YWRhdGEYASABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGlzdE1ldGESMAoFaXRlbXMYAiADKAsyIS5rOHMuaW8uYXBpLmNvcmUudjEuUmVzb3VyY2VRdW90YSL5AQoRUmVzb3VyY2VRdW90YVNwZWMSPQoEaGFyZBgBIAMoCzIvLms4cy5pby5hcGkuY29yZS52MS5SZXNvdXJjZVF1b3RhU3BlYy5IYXJkRW50cnkSDgoGc2NvcGVzGAIgAygJEjgKDXNjb3BlU2VsZWN0b3IYAyABKAsyIS5rOHMuaW8uYXBpLmNvcmUudjEuU2NvcGVTZWxlY3RvchpbCglIYXJkRW50cnkSCwoDa2V5GAEgASgJEj0KBXZhbHVlGAIgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpLnJlc291cmNlLlF1YW50aXR5OgI4ASLRAgoTUmVzb3VyY2VRdW90YVN0YXR1cxI/CgRoYXJkGAEgAygLMjEuazhzLmlvLmFwaS5jb3JlLnYxLlJlc291cmNlUXVvdGFTdGF0dXMuSGFyZEVudHJ5Ej8KBHVzZWQYAiADKAsyMS5rOHMuaW8uYXBpLmNvcmUudjEuUmVzb3VyY2VRdW90YVN0YXR1cy5Vc2VkRW50cnkaWwoJSGFyZEVudHJ5EgsKA2tleRgBIAEoCRI9CgV2YWx1ZRgCIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaS5yZXNvdXJjZS5RdWFudGl0eToCOAEaWwoJVXNlZEVudHJ5EgsKA2tleRgBIAEoCRI9CgV2YWx1ZRgCIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaS5yZXNvdXJjZS5RdWFudGl0eToCOAEi5gIKFFJlc291cmNlUmVxdWlyZW1lbnRzEkQKBmxpbWl0cxgBIAMoCzI0Lms4cy5pby5hcGkuY29yZS52MS5SZXNvdXJjZVJlcXVpcmVtZW50cy5MaW1pdHNFbnRyeRJICghyZXF1ZXN0cxgCIAMoCzI2Lms4cy5pby5hcGkuY29yZS52MS5SZXNvdXJjZVJlcXVpcmVtZW50cy5SZXF1ZXN0c0VudHJ5Gl0KC0xpbWl0c0VudHJ5EgsKA2tleRgBIAEoCRI9CgV2YWx1ZRgCIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaS5yZXNvdXJjZS5RdWFudGl0eToCOAEaXwoNUmVxdWVzdHNFbnRyeRILCgNrZXkYASABKAkSPQoFdmFsdWUYAiABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGkucmVzb3VyY2UuUXVhbnRpdHk6AjgBIkkKDlNFTGludXhPcHRpb25zEgwKBHVzZXIYASABKAkSDAoEcm9sZRgCIAEoCRIMCgR0eXBlGAMgASgJEg0KBWxldmVsGAQgASgJIoYCCh1TY2FsZUlPUGVyc2lzdGVudFZvbHVtZVNvdXJjZRIPCgdnYXRld2F5GAEgASgJEg4KBnN5c3RlbRgCIAEoCRI2CglzZWNyZXRSZWYYAyABKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuU2VjcmV0UmVmZXJlbmNlEhIKCnNzbEVuYWJsZWQYBCABKAgSGAoQcHJvdGVjdGlvbkRvbWFpbhgFIAEoCRITCgtzdG9yYWdlUG9vbBgGIAEoCRITCgtzdG9yYWdlTW9kZRgHIAEoCRISCgp2b2x1bWVOYW1lGAggASgJEg4KBmZzVHlwZRgJIAEoCRIQCghyZWFkT25seRgKIAEoCCKBAgoTU2NhbGVJT1ZvbHVtZVNvdXJjZRIPCgdnYXRld2F5GAEgASgJEg4KBnN5c3RlbRgCIAEoCRI7CglzZWNyZXRSZWYYAyABKAsyKC5rOHMuaW8uYXBpLmNvcmUudjEuTG9jYWxPYmplY3RSZWZlcmVuY2USEgoKc3NsRW5hYmxlZBgEIAEoCBIYChBwcm90ZWN0aW9uRG9tYWluGAUgASgJEhMKC3N0b3JhZ2VQb29sGAYgASgJEhMKC3N0b3JhZ2VNb2RlGAcgASgJEhIKCnZvbHVtZU5hbWUYCCABKAkSDgoGZnNUeXBlGAkgASgJEhAKCHJlYWRPbmx5GAogASgIImAKDVNjb3BlU2VsZWN0b3ISTwoQbWF0Y2hFeHByZXNzaW9ucxgBIAMoCzI1Lms4cy5pby5hcGkuY29yZS52MS5TY29wZWRSZXNvdXJjZVNlbGVjdG9yUmVxdWlyZW1lbnQiWAohU2NvcGVkUmVzb3VyY2VTZWxlY3RvclJlcXVpcmVtZW50EhEKCXNjb3BlTmFtZRgBIAEoCRIQCghvcGVyYXRvchgCIAEoCRIOCgZ2YWx1ZXMYAyADKAkiOAoOU2VjY29tcFByb2ZpbGUSDAoEdHlwZRgBIAEoCRIYChBsb2NhbGhvc3RQcm9maWxlGAIgASgJIsECCgZTZWNyZXQSQgoIbWV0YWRhdGEYASABKAsyMC5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuT2JqZWN0TWV0YRIRCglpbW11dGFibGUYBSABKAgSMgoEZGF0YRgCIAMoCzIkLms4cy5pby5hcGkuY29yZS52MS5TZWNyZXQuRGF0YUVudHJ5Ej4KCnN0cmluZ0RhdGEYBCADKAsyKi5rOHMuaW8uYXBpLmNvcmUudjEuU2VjcmV0LlN0cmluZ0RhdGFFbnRyeRIMCgR0eXBlGAMgASgJGisKCURhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAw6AjgBGjEKD1N0cmluZ0RhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBImsKD1NlY3JldEVudlNvdXJjZRJGChRsb2NhbE9iamVjdFJlZmVyZW5jZRgBIAEoCzIoLms4cy5pby5hcGkuY29yZS52MS5Mb2NhbE9iamVjdFJlZmVyZW5jZRIQCghvcHRpb25hbBgCIAEoCCJ6ChFTZWNyZXRLZXlTZWxlY3RvchJGChRsb2NhbE9iamVjdFJlZmVyZW5jZRgBIAEoCzIoLms4cy5pby5hcGkuY29yZS52MS5Mb2NhbE9iamVjdFJlZmVyZW5jZRILCgNrZXkYAiABKAkSEAoIb3B0aW9uYWwYAyABKAgieQoKU2VjcmV0TGlzdBJACghtZXRhZGF0YRgBIAEoCzIuLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5MaXN0TWV0YRIpCgVpdGVtcxgCIAMoCzIaLms4cy5pby5hcGkuY29yZS52MS5TZWNyZXQimgEKEFNlY3JldFByb2plY3Rpb24SRgoUbG9jYWxPYmplY3RSZWZlcmVuY2UYASABKAsyKC5rOHMuaW8uYXBpLmNvcmUudjEuTG9jYWxPYmplY3RSZWZlcmVuY2USLAoFaXRlbXMYAiADKAsyHS5rOHMuaW8uYXBpLmNvcmUudjEuS2V5VG9QYXRoEhAKCG9wdGlvbmFsGAQgASgIIjIKD1NlY3JldFJlZmVyZW5jZRIMCgRuYW1lGAEgASgJEhEKCW5hbWVzcGFjZRgCIAEoCSJ9ChJTZWNyZXRWb2x1bWVTb3VyY2USEgoKc2VjcmV0TmFtZRgBIAEoCRIsCgVpdGVtcxgCIAMoCzIdLms4cy5pby5hcGkuY29yZS52MS5LZXlUb1BhdGgSEwoLZGVmYXVsdE1vZGUYAyABKAUSEAoIb3B0aW9uYWwYBCABKAgisgMKD1NlY3VyaXR5Q29udGV4dBI2CgxjYXBhYmlsaXRpZXMYASABKAsyIC5rOHMuaW8uYXBpLmNvcmUudjEuQ2FwYWJpbGl0aWVzEhIKCnByaXZpbGVnZWQYAiABKAgSOgoOc2VMaW51eE9wdGlvbnMYAyABKAsyIi5rOHMuaW8uYXBpLmNvcmUudjEuU0VMaW51eE9wdGlvbnMSSQoOd2luZG93c09wdGlvbnMYCiABKAsyMS5rOHMuaW8uYXBpLmNvcmUudjEuV2luZG93c1NlY3VyaXR5Q29udGV4dE9wdGlvbnMSEQoJcnVuQXNVc2VyGAQgASgDEhIKCnJ1bkFzR3JvdXAYCCABKAMSFAoMcnVuQXNOb25Sb290GAUgASgIEh4KFnJlYWRPbmx5Um9vdEZpbGVzeXN0ZW0YBiABKAgSIAoYYWxsb3dQcml2aWxlZ2VFc2NhbGF0aW9uGAcgASgIEhEKCXByb2NNb3VudBgJIAEoCRI6Cg5zZWNjb21wUHJvZmlsZRgLIAEoCzIiLms4cy5pby5hcGkuY29yZS52MS5TZWNjb21wUHJvZmlsZSJNChNTZXJpYWxpemVkUmVmZXJlbmNlEjYKCXJlZmVyZW5jZRgBIAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5PYmplY3RSZWZlcmVuY2UirwEKB1NlcnZpY2USQgoIbWV0YWRhdGEYASABKAsyMC5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuT2JqZWN0TWV0YRItCgRzcGVjGAIgASgLMh8uazhzLmlvLmFwaS5jb3JlLnYxLlNlcnZpY2VTcGVjEjEKBnN0YXR1cxgDIAEoCzIhLms4cy5pby5hcGkuY29yZS52MS5TZXJ2aWNlU3RhdHVzIvQBCg5TZXJ2aWNlQWNjb3VudBJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEjQKB3NlY3JldHMYAiADKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuT2JqZWN0UmVmZXJlbmNlEkIKEGltYWdlUHVsbFNlY3JldHMYAyADKAsyKC5rOHMuaW8uYXBpLmNvcmUudjEuTG9jYWxPYmplY3RSZWZlcmVuY2USJAocYXV0b21vdW50U2VydmljZUFjY291bnRUb2tlbhgEIAEoCCKJAQoSU2VydmljZUFjY291bnRMaXN0EkAKCG1ldGFkYXRhGAEgASgLMi4uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkxpc3RNZXRhEjEKBWl0ZW1zGAIgAygLMiIuazhzLmlvLmFwaS5jb3JlLnYxLlNlcnZpY2VBY2NvdW50IloKHVNlcnZpY2VBY2NvdW50VG9rZW5Qcm9qZWN0aW9uEhAKCGF1ZGllbmNlGAEgASgJEhkKEWV4cGlyYXRpb25TZWNvbmRzGAIgASgDEgwKBHBhdGgYAyABKAkiewoLU2VydmljZUxpc3QSQAoIbWV0YWRhdGEYASABKAsyLi5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuTGlzdE1ldGESKgoFaXRlbXMYAiADKAsyGy5rOHMuaW8uYXBpLmNvcmUudjEuU2VydmljZSKoAQoLU2VydmljZVBvcnQSDAoEbmFtZRgBIAEoCRIQCghwcm90b2NvbBgCIAEoCRITCgthcHBQcm90b2NvbBgGIAEoCRIMCgRwb3J0GAMgASgFEkQKCnRhcmdldFBvcnQYBCABKAsyMC5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy51dGlsLmludHN0ci5JbnRPclN0cmluZxIQCghub2RlUG9ydBgFIAEoBSIjChNTZXJ2aWNlUHJveHlPcHRpb25zEgwKBHBhdGgYASABKAkilwUKC1NlcnZpY2VTcGVjEi4KBXBvcnRzGAEgAygLMh8uazhzLmlvLmFwaS5jb3JlLnYxLlNlcnZpY2VQb3J0Ej8KCHNlbGVjdG9yGAIgAygLMi0uazhzLmlvLmFwaS5jb3JlLnYxLlNlcnZpY2VTcGVjLlNlbGVjdG9yRW50cnkSEQoJY2x1c3RlcklQGAMgASgJEhIKCmNsdXN0ZXJJUHMYEiADKAkSDAoEdHlwZRgEIAEoCRITCgtleHRlcm5hbElQcxgFIAMoCRIXCg9zZXNzaW9uQWZmaW5pdHkYByABKAkSFgoObG9hZEJhbGFuY2VySVAYCCABKAkSIAoYbG9hZEJhbGFuY2VyU291cmNlUmFuZ2VzGAkgAygJEhQKDGV4dGVybmFsTmFtZRgKIAEoCRIdChVleHRlcm5hbFRyYWZmaWNQb2xpY3kYCyABKAkSGwoTaGVhbHRoQ2hlY2tOb2RlUG9ydBgMIAEoBRIgChhwdWJsaXNoTm90UmVhZHlBZGRyZXNzZXMYDSABKAgSSAoVc2Vzc2lvbkFmZmluaXR5Q29uZmlnGA4gASgLMikuazhzLmlvLmFwaS5jb3JlLnYxLlNlc3Npb25BZmZpbml0eUNvbmZpZxISCgppcEZhbWlsaWVzGBMgAygJEhYKDmlwRmFtaWx5UG9saWN5GBEgASgJEiUKHWFsbG9jYXRlTG9hZEJhbGFuY2VyTm9kZVBvcnRzGBQgASgIEhkKEWxvYWRCYWxhbmNlckNsYXNzGBUgASgJEh0KFWludGVybmFsVHJhZmZpY1BvbGljeRgWIAEoCRovCg1TZWxlY3RvckVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEikgEKDVNlcnZpY2VTdGF0dXMSPAoMbG9hZEJhbGFuY2VyGAEgASgLMiYuazhzLmlvLmFwaS5jb3JlLnYxLkxvYWRCYWxhbmNlclN0YXR1cxJDCgpjb25kaXRpb25zGAIgAygLMi8uazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLkNvbmRpdGlvbiJNChVTZXNzaW9uQWZmaW5pdHlDb25maWcSNAoIY2xpZW50SVAYASABKAsyIi5rOHMuaW8uYXBpLmNvcmUudjEuQ2xpZW50SVBDb25maWciqAEKH1N0b3JhZ2VPU1BlcnNpc3RlbnRWb2x1bWVTb3VyY2USEgoKdm9sdW1lTmFtZRgBIAEoCRIXCg92b2x1bWVOYW1lc3BhY2UYAiABKAkSDgoGZnNUeXBlGAMgASgJEhAKCHJlYWRPbmx5GAQgASgIEjYKCXNlY3JldFJlZhgFIAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5PYmplY3RSZWZlcmVuY2UiowEKFVN0b3JhZ2VPU1ZvbHVtZVNvdXJjZRISCgp2b2x1bWVOYW1lGAEgASgJEhcKD3ZvbHVtZU5hbWVzcGFjZRgCIAEoCRIOCgZmc1R5cGUYAyABKAkSEAoIcmVhZE9ubHkYBCABKAgSOwoJc2VjcmV0UmVmGAUgASgLMiguazhzLmlvLmFwaS5jb3JlLnYxLkxvY2FsT2JqZWN0UmVmZXJlbmNlIiUKBlN5c2N0bBIMCgRuYW1lGAEgASgJEg0KBXZhbHVlGAIgASgJIl8KD1RDUFNvY2tldEFjdGlvbhI+CgRwb3J0GAEgASgLMjAuazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cudXRpbC5pbnRzdHIuSW50T3JTdHJpbmcSDAoEaG9zdBgCIAEoCSJyCgVUYWludBILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAkSDgoGZWZmZWN0GAMgASgJEj0KCXRpbWVBZGRlZBgEIAEoCzIqLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5UaW1lImUKClRvbGVyYXRpb24SCwoDa2V5GAEgASgJEhAKCG9wZXJhdG9yGAIgASgJEg0KBXZhbHVlGAMgASgJEg4KBmVmZmVjdBgEIAEoCRIZChF0b2xlcmF0aW9uU2Vjb25kcxgFIAEoAyI/CiBUb3BvbG9neVNlbGVjdG9yTGFiZWxSZXF1aXJlbWVudBILCgNrZXkYASABKAkSDgoGdmFsdWVzGAIgAygJImsKFFRvcG9sb2d5U2VsZWN0b3JUZXJtElMKFW1hdGNoTGFiZWxFeHByZXNzaW9ucxgBIAMoCzI0Lms4cy5pby5hcGkuY29yZS52MS5Ub3BvbG9neVNlbGVjdG9yTGFiZWxSZXF1aXJlbWVudCKnAQoYVG9wb2xvZ3lTcHJlYWRDb25zdHJhaW50Eg8KB21heFNrZXcYASABKAUSEwoLdG9wb2xvZ3lLZXkYAiABKAkSGQoRd2hlblVuc2F0aXNmaWFibGUYAyABKAkSSgoNbGFiZWxTZWxlY3RvchgEIAEoCzIzLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5MYWJlbFNlbGVjdG9yIkkKGVR5cGVkTG9jYWxPYmplY3RSZWZlcmVuY2USEAoIYXBpR3JvdXAYASABKAkSDAoEa2luZBgCIAEoCRIMCgRuYW1lGAMgASgJIk4KBlZvbHVtZRIMCgRuYW1lGAEgASgJEjYKDHZvbHVtZVNvdXJjZRgCIAEoCzIgLms4cy5pby5hcGkuY29yZS52MS5Wb2x1bWVTb3VyY2UiMAoMVm9sdW1lRGV2aWNlEgwKBG5hbWUYASABKAkSEgoKZGV2aWNlUGF0aBgCIAEoCSKAAQoLVm9sdW1lTW91bnQSDAoEbmFtZRgBIAEoCRIQCghyZWFkT25seRgCIAEoCBIRCgltb3VudFBhdGgYAyABKAkSDwoHc3ViUGF0aBgEIAEoCRIYChBtb3VudFByb3BhZ2F0aW9uGAUgASgJEhMKC3N1YlBhdGhFeHByGAYgASgJIkgKElZvbHVtZU5vZGVBZmZpbml0eRIyCghyZXF1aXJlZBgBIAEoCzIgLms4cy5pby5hcGkuY29yZS52MS5Ob2RlU2VsZWN0b3IilAIKEFZvbHVtZVByb2plY3Rpb24SNAoGc2VjcmV0GAEgASgLMiQuazhzLmlvLmFwaS5jb3JlLnYxLlNlY3JldFByb2plY3Rpb24SPgoLZG93bndhcmRBUEkYAiABKAsyKS5rOHMuaW8uYXBpLmNvcmUudjEuRG93bndhcmRBUElQcm9qZWN0aW9uEjoKCWNvbmZpZ01hcBgDIAEoCzInLms4cy5pby5hcGkuY29yZS52MS5Db25maWdNYXBQcm9qZWN0aW9uEk4KE3NlcnZpY2VBY2NvdW50VG9rZW4YBCABKAsyMS5rOHMuaW8uYXBpLmNvcmUudjEuU2VydmljZUFjY291bnRUb2tlblByb2plY3Rpb24imQ4KDFZvbHVtZVNvdXJjZRI6Cghob3N0UGF0aBgBIAEoCzIoLms4cy5pby5hcGkuY29yZS52MS5Ib3N0UGF0aFZvbHVtZVNvdXJjZRI6CghlbXB0eURpchgCIAEoCzIoLms4cy5pby5hcGkuY29yZS52MS5FbXB0eURpclZvbHVtZVNvdXJjZRJMChFnY2VQZXJzaXN0ZW50RGlzaxgDIAEoCzIxLms4cy5pby5hcGkuY29yZS52MS5HQ0VQZXJzaXN0ZW50RGlza1ZvbHVtZVNvdXJjZRJSChRhd3NFbGFzdGljQmxvY2tTdG9yZRgEIAEoCzI0Lms4cy5pby5hcGkuY29yZS52MS5BV1NFbGFzdGljQmxvY2tTdG9yZVZvbHVtZVNvdXJjZRI4CgdnaXRSZXBvGAUgASgLMicuazhzLmlvLmFwaS5jb3JlLnYxLkdpdFJlcG9Wb2x1bWVTb3VyY2USNgoGc2VjcmV0GAYgASgLMiYuazhzLmlvLmFwaS5jb3JlLnYxLlNlY3JldFZvbHVtZVNvdXJjZRIwCgNuZnMYByABKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuTkZTVm9sdW1lU291cmNlEjQKBWlzY3NpGAggASgLMiUuazhzLmlvLmFwaS5jb3JlLnYxLklTQ1NJVm9sdW1lU291cmNlEjwKCWdsdXN0ZXJmcxgJIAEoCzIpLms4cy5pby5hcGkuY29yZS52MS5HbHVzdGVyZnNWb2x1bWVTb3VyY2USVAoVcGVyc2lzdGVudFZvbHVtZUNsYWltGAogASgLMjUuazhzLmlvLmFwaS5jb3JlLnYxLlBlcnNpc3RlbnRWb2x1bWVDbGFpbVZvbHVtZVNvdXJjZRIwCgNyYmQYCyABKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuUkJEVm9sdW1lU291cmNlEjgKCmZsZXhWb2x1bWUYDCABKAsyJC5rOHMuaW8uYXBpLmNvcmUudjEuRmxleFZvbHVtZVNvdXJjZRI2CgZjaW5kZXIYDSABKAsyJi5rOHMuaW8uYXBpLmNvcmUudjEuQ2luZGVyVm9sdW1lU291cmNlEjYKBmNlcGhmcxgOIAEoCzImLms4cy5pby5hcGkuY29yZS52MS5DZXBoRlNWb2x1bWVTb3VyY2USOAoHZmxvY2tlchgPIAEoCzInLms4cy5pby5hcGkuY29yZS52MS5GbG9ja2VyVm9sdW1lU291cmNlEkAKC2Rvd253YXJkQVBJGBAgASgLMisuazhzLmlvLmFwaS5jb3JlLnYxLkRvd253YXJkQVBJVm9sdW1lU291cmNlEi4KAmZjGBEgASgLMiIuazhzLmlvLmFwaS5jb3JlLnYxLkZDVm9sdW1lU291cmNlEjwKCWF6dXJlRmlsZRgSIAEoCzIpLms4cy5pby5hcGkuY29yZS52MS5BenVyZUZpbGVWb2x1bWVTb3VyY2USPAoJY29uZmlnTWFwGBMgASgLMikuazhzLmlvLmFwaS5jb3JlLnYxLkNvbmZpZ01hcFZvbHVtZVNvdXJjZRJJCg12c3BoZXJlVm9sdW1lGBQgASgLMjIuazhzLmlvLmFwaS5jb3JlLnYxLlZzcGhlcmVWaXJ0dWFsRGlza1ZvbHVtZVNvdXJjZRI4CgdxdW9ieXRlGBUgASgLMicuazhzLmlvLmFwaS5jb3JlLnYxLlF1b2J5dGVWb2x1bWVTb3VyY2USPAoJYXp1cmVEaXNrGBYgASgLMikuazhzLmlvLmFwaS5jb3JlLnYxLkF6dXJlRGlza1ZvbHVtZVNvdXJjZRJSChRwaG90b25QZXJzaXN0ZW50RGlzaxgXIAEoCzI0Lms4cy5pby5hcGkuY29yZS52MS5QaG90b25QZXJzaXN0ZW50RGlza1ZvbHVtZVNvdXJjZRI8Cglwcm9qZWN0ZWQYGiABKAsyKS5rOHMuaW8uYXBpLmNvcmUudjEuUHJvamVjdGVkVm9sdW1lU291cmNlEkAKDnBvcnR3b3J4Vm9sdW1lGBggASgLMiguazhzLmlvLmFwaS5jb3JlLnYxLlBvcnR3b3J4Vm9sdW1lU291cmNlEjgKB3NjYWxlSU8YGSABKAsyJy5rOHMuaW8uYXBpLmNvcmUudjEuU2NhbGVJT1ZvbHVtZVNvdXJjZRI8CglzdG9yYWdlb3MYGyABKAsyKS5rOHMuaW8uYXBpLmNvcmUudjEuU3RvcmFnZU9TVm9sdW1lU291cmNlEjAKA2NzaRgcIAEoCzIjLms4cy5pby5hcGkuY29yZS52MS5DU0lWb2x1bWVTb3VyY2USPAoJZXBoZW1lcmFsGB0gASgLMikuazhzLmlvLmFwaS5jb3JlLnYxLkVwaGVtZXJhbFZvbHVtZVNvdXJjZSJ4Ch5Wc3BoZXJlVmlydHVhbERpc2tWb2x1bWVTb3VyY2USEgoKdm9sdW1lUGF0aBgBIAEoCRIOCgZmc1R5cGUYAiABKAkSGQoRc3RvcmFnZVBvbGljeU5hbWUYAyABKAkSFwoPc3RvcmFnZVBvbGljeUlEGAQgASgJImcKF1dlaWdodGVkUG9kQWZmaW5pdHlUZXJtEg4KBndlaWdodBgBIAEoBRI8Cg9wb2RBZmZpbml0eVRlcm0YAiABKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuUG9kQWZmaW5pdHlUZXJtIocBCh1XaW5kb3dzU2VjdXJpdHlDb250ZXh0T3B0aW9ucxIeChZnbXNhQ3JlZGVudGlhbFNwZWNOYW1lGAEgASgJEhoKEmdtc2FDcmVkZW50aWFsU3BlYxgCIAEoCRIVCg1ydW5Bc1VzZXJOYW1lGAMgASgJEhMKC2hvc3RQcm9jZXNzGAQgASgIQhRaEms4cy5pby9hcGkvY29yZS92MQ", [file_k8s_io_apimachinery_pkg_api_resource_generated, file_k8s_io_apimachinery_pkg_apis_meta_v1_generated, file_k8s_io_apimachinery_pkg_runtime_generated, file_k8s_io_apimachinery_pkg_util_intstr_generated]);

/**
 * Describes the message k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource.
 * Use `create(AWSElasticBlockStoreVolumeSourceSchema)` to create a new message.
 */
export const AWSElasticBlockStoreVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 0);

/**
 * Describes the message k8s.io.api.core.v1.Affinity.
 * Use `create(AffinitySchema)` to create a new message.
 */
export const AffinitySchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 1);

/**
 * Describes the message k8s.io.api.core.v1.AttachedVolume.
 * Use `create(AttachedVolumeSchema)` to create a new message.
 */
export const AttachedVolumeSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 2);

/**
 * Describes the message k8s.io.api.core.v1.AvoidPods.
 * Use `create(AvoidPodsSchema)` to create a new message.
 */
export const AvoidPodsSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 3);

/**
 * Describes the message k8s.io.api.core.v1.AzureDiskVolumeSource.
 * Use `create(AzureDiskVolumeSourceSchema)` to create a new message.
 */
export const AzureDiskVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 4);

/**
 * Describes the message k8s.io.api.core.v1.AzureFilePersistentVolumeSource.
 * Use `create(AzureFilePersistentVolumeSourceSchema)` to create a new message.
 */
export const AzureFilePersistentVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 5);

/**
 * Describes the message k8s.io.api.core.v1.AzureFileVolumeSource.
 * Use `create(AzureFileVolumeSourceSchema)` to create a new message.
 */
export const AzureFileVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 6);

/**
 * Describes the message k8s.io.api.core.v1.Binding.
 * Use `create(BindingSchema)` to create a new message.
 */
export const BindingSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 7);

/**
 * Describes the message k8s.io.api.core.v1.CSIPersistentVolumeSource.
 * Use `create(CSIPersistentVolumeSourceSchema)` to create a new message.
 */
export const CSIPersistentVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 8);

/**
 * Describes the message k8s.io.api.core.v1.CSIVolumeSource.
 * Use `create(CSIVolumeSourceSchema)` to create a new message.
 */
export const CSIVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 9);

/**
 * Describes the message k8s.io.api.core.v1.Capabilities.
 * Use `create(CapabilitiesSchema)` to create a new message.
 */
export const CapabilitiesSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 10);

/**
 * Describes the message k8s.io.api.core.v1.CephFSPersistentVolumeSource.
 * Use `create(CephFSPersistentVolumeSourceSchema)` to create a new message.
 */
export const CephFSPersistentVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 11);

/**
 * Describes the message k8s.io.api.core.v1.CephFSVolumeSource.
 * Use `create(CephFSVolumeSourceSchema)` to create a new message.
 */
export const CephFSVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 12);

/**
 * Describes the message k8s.io.api.core.v1.CinderPersistentVolumeSource.
 * Use `create(CinderPersistentVolumeSourceSchema)` to create a new message.
 */
export const CinderPersistentVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 13);

/**
 * Describes the message k8s.io.api.core.v1.CinderVolumeSource.
 * Use `create(CinderVolumeSourceSchema)` to create a new message.
 */
export const CinderVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 14);

/**
 * Describes the message k8s.io.api.core.v1.ClientIPConfig.
 * Use `create(ClientIPConfigSchema)` to create a new message.
 */
export const ClientIPConfigSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 15);

/**
 * Describes the message k8s.io.api.core.v1.ComponentCondition.
 * Use `create(ComponentConditionSchema)` to create a new message.
 */
export const ComponentConditionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 16);

/**
 * Describes the message k8s.io.api.core.v1.ComponentStatus.
 * Use `create(ComponentStatusSchema)` to create a new message.
 */
export const ComponentStatusSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 17);

/**
 * Describes the message k8s.io.api.core.v1.ComponentStatusList.
 * Use `create(ComponentStatusListSchema)` to create a new message.
 */
export const ComponentStatusListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 18);

/**
 * Describes the message k8s.io.api.core.v1.ConfigMap.
 * Use `create(ConfigMapSchema)` to create a new message.
 */
export const ConfigMapSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 19);

/**
 * Describes the message k8s.io.api.core.v1.ConfigMapEnvSource.
 * Use `create(ConfigMapEnvSourceSchema)` to create a new message.
 */
export const ConfigMapEnvSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 20);

/**
 * Describes the message k8s.io.api.core.v1.ConfigMapKeySelector.
 * Use `create(ConfigMapKeySelectorSchema)` to create a new message.
 */
export const ConfigMapKeySelectorSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 21);

/**
 * Describes the message k8s.io.api.core.v1.ConfigMapList.
 * Use `create(ConfigMapListSchema)` to create a new message.
 */
export const ConfigMapListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 22);

/**
 * Describes the message k8s.io.api.core.v1.ConfigMapNodeConfigSource.
 * Use `create(ConfigMapNodeConfigSourceSchema)` to create a new message.
 */
export const ConfigMapNodeConfigSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 23);

/**
 * Describes the message k8s.io.api.core.v1.ConfigMapProjection.
 * Use `create(ConfigMapProjectionSchema)` to create a new message.
 */
export const ConfigMapProjectionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 24);

/**
 * Describes the message k8s.io.api.core.v1.ConfigMapVolumeSource.
 * Use `create(ConfigMapVolumeSourceSchema)` to create a new message.
 */
export const ConfigMapVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 25);

/**
 * Describes the message k8s.io.api.core.v1.Container.
 * Use `create(ContainerSchema)` to create a new message.
 */
export const ContainerSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 26);

/**
 * Describes the message k8s.io.api.core.v1.ContainerImage.
 * Use `create(ContainerImageSchema)` to create a new message.
 */
export const ContainerImageSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 27);

/**
 * Describes the message k8s.io.api.core.v1.ContainerPort.
 * Use `create(ContainerPortSchema)` to create a new message.
 */
export const ContainerPortSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 28);

/**
 * Describes the message k8s.io.api.core.v1.ContainerState.
 * Use `create(ContainerStateSchema)` to create a new message.
 */
export const ContainerStateSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 29);

/**
 * Describes the message k8s.io.api.core.v1.ContainerStateRunning.
 * Use `create(ContainerStateRunningSchema)` to create a new message.
 */
export const ContainerStateRunningSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 30);

/**
 * Describes the message k8s.io.api.core.v1.ContainerStateTerminated.
 * Use `create(ContainerStateTerminatedSchema)` to create a new message.
 */
export const ContainerStateTerminatedSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 31);

/**
 * Describes the message k8s.io.api.core.v1.ContainerStateWaiting.
 * Use `create(ContainerStateWaitingSchema)` to create a new message.
 */
export const ContainerStateWaitingSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 32);

/**
 * Describes the message k8s.io.api.core.v1.ContainerStatus.
 * Use `create(ContainerStatusSchema)` to create a new message.
 */
export const ContainerStatusSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 33);

/**
 * Describes the message k8s.io.api.core.v1.DaemonEndpoint.
 * Use `create(DaemonEndpointSchema)` to create a new message.
 */
export const DaemonEndpointSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 34);

/**
 * Describes the message k8s.io.api.core.v1.DownwardAPIProjection.
 * Use `create(DownwardAPIProjectionSchema)` to create a new message.
 */
export const DownwardAPIProjectionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 35);

/**
 * Describes the message k8s.io.api.core.v1.DownwardAPIVolumeFile.
 * Use `create(DownwardAPIVolumeFileSchema)` to create a new message.
 */
export const DownwardAPIVolumeFileSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 36);

/**
 * Describes the message k8s.io.api.core.v1.DownwardAPIVolumeSource.
 * Use `create(DownwardAPIVolumeSourceSchema)` to create a new message.
 */
export const DownwardAPIVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 37);

/**
 * Describes the message k8s.io.api.core.v1.EmptyDirVolumeSource.
 * Use `create(EmptyDirVolumeSourceSchema)` to create a new message.
 */
export const EmptyDirVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 38);

/**
 * Describes the message k8s.io.api.core.v1.EndpointAddress.
 * Use `create(EndpointAddressSchema)` to create a new message.
 */
export const EndpointAddressSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 39);

/**
 * Describes the message k8s.io.api.core.v1.EndpointPort.
 * Use `create(EndpointPortSchema)` to create a new message.
 */
export const EndpointPortSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 40);

/**
 * Describes the message k8s.io.api.core.v1.EndpointSubset.
 * Use `create(EndpointSubsetSchema)` to create a new message.
 */
export const EndpointSubsetSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 41);

/**
 * Describes the message k8s.io.api.core.v1.Endpoints.
 * Use `create(EndpointsSchema)` to create a new message.
 */
export const EndpointsSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 42);

/**
 * Describes the message k8s.io.api.core.v1.EndpointsList.
 * Use `create(EndpointsListSchema)` to create a new message.
 */
export const EndpointsListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 43);

/**
 * Describes the message k8s.io.api.core.v1.EnvFromSource.
 * Use `create(EnvFromSourceSchema)` to create a new message.
 */
export const EnvFromSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 44);

/**
 * Describes the message k8s.io.api.core.v1.EnvVar.
 * Use `create(EnvVarSchema)` to create a new message.
 */
export const EnvVarSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 45);

/**
 * Describes the message k8s.io.api.core.v1.EnvVarSource.
 * Use `create(EnvVarSourceSchema)` to create a new message.
 */
export const EnvVarSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 46);

/**
 * Describes the message k8s.io.api.core.v1.EphemeralContainer.
 * Use `create(EphemeralContainerSchema)` to create a new message.
 */
export const EphemeralContainerSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 47);

/**
 * Describes the message k8s.io.api.core.v1.EphemeralContainerCommon.
 * Use `create(EphemeralContainerCommonSchema)` to create a new message.
 */
export const EphemeralContainerCommonSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 48);

/**
 * Describes the message k8s.io.api.core.v1.EphemeralVolumeSource.
 * Use `create(EphemeralVolumeSourceSchema)` to create a new message.
 */
export const EphemeralVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 49);

/**
 * Describes the message k8s.io.api.core.v1.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export const EventSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 50);

/**
 * Describes the message k8s.io.api.core.v1.EventList.
 * Use `create(EventListSchema)` to create a new message.
 */
export const EventListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 51);

/**
 * Describes the message k8s.io.api.core.v1.EventSeries.
 * Use `create(EventSeriesSchema)` to create a new message.
 */
export const EventSeriesSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 52);

/**
 * Describes the message k8s.io.api.core.v1.EventSource.
 * Use `create(EventSourceSchema)` to create a new message.
 */
export const EventSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 53);

/**
 * Describes the message k8s.io.api.core.v1.ExecAction.
 * Use `create(ExecActionSchema)` to create a new message.
 */
export const ExecActionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 54);

/**
 * Describes the message k8s.io.api.core.v1.FCVolumeSource.
 * Use `create(FCVolumeSourceSchema)` to create a new message.
 */
export const FCVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 55);

/**
 * Describes the message k8s.io.api.core.v1.FlexPersistentVolumeSource.
 * Use `create(FlexPersistentVolumeSourceSchema)` to create a new message.
 */
export const FlexPersistentVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 56);

/**
 * Describes the message k8s.io.api.core.v1.FlexVolumeSource.
 * Use `create(FlexVolumeSourceSchema)` to create a new message.
 */
export const FlexVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 57);

/**
 * Describes the message k8s.io.api.core.v1.FlockerVolumeSource.
 * Use `create(FlockerVolumeSourceSchema)` to create a new message.
 */
export const FlockerVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 58);

/**
 * Describes the message k8s.io.api.core.v1.GCEPersistentDiskVolumeSource.
 * Use `create(GCEPersistentDiskVolumeSourceSchema)` to create a new message.
 */
export const GCEPersistentDiskVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 59);

/**
 * Describes the message k8s.io.api.core.v1.GRPCAction.
 * Use `create(GRPCActionSchema)` to create a new message.
 */
export const GRPCActionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 60);

/**
 * Describes the message k8s.io.api.core.v1.GitRepoVolumeSource.
 * Use `create(GitRepoVolumeSourceSchema)` to create a new message.
 */
export const GitRepoVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 61);

/**
 * Describes the message k8s.io.api.core.v1.GlusterfsPersistentVolumeSource.
 * Use `create(GlusterfsPersistentVolumeSourceSchema)` to create a new message.
 */
export const GlusterfsPersistentVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 62);

/**
 * Describes the message k8s.io.api.core.v1.GlusterfsVolumeSource.
 * Use `create(GlusterfsVolumeSourceSchema)` to create a new message.
 */
export const GlusterfsVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 63);

/**
 * Describes the message k8s.io.api.core.v1.HTTPGetAction.
 * Use `create(HTTPGetActionSchema)` to create a new message.
 */
export const HTTPGetActionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 64);

/**
 * Describes the message k8s.io.api.core.v1.HTTPHeader.
 * Use `create(HTTPHeaderSchema)` to create a new message.
 */
export const HTTPHeaderSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 65);

/**
 * Describes the message k8s.io.api.core.v1.HostAlias.
 * Use `create(HostAliasSchema)` to create a new message.
 */
export const HostAliasSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 66);

/**
 * Describes the message k8s.io.api.core.v1.HostPathVolumeSource.
 * Use `create(HostPathVolumeSourceSchema)` to create a new message.
 */
export const HostPathVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 67);

/**
 * Describes the message k8s.io.api.core.v1.ISCSIPersistentVolumeSource.
 * Use `create(ISCSIPersistentVolumeSourceSchema)` to create a new message.
 */
export const ISCSIPersistentVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 68);

/**
 * Describes the message k8s.io.api.core.v1.ISCSIVolumeSource.
 * Use `create(ISCSIVolumeSourceSchema)` to create a new message.
 */
export const ISCSIVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 69);

/**
 * Describes the message k8s.io.api.core.v1.KeyToPath.
 * Use `create(KeyToPathSchema)` to create a new message.
 */
export const KeyToPathSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 70);

/**
 * Describes the message k8s.io.api.core.v1.Lifecycle.
 * Use `create(LifecycleSchema)` to create a new message.
 */
export const LifecycleSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 71);

/**
 * Describes the message k8s.io.api.core.v1.LifecycleHandler.
 * Use `create(LifecycleHandlerSchema)` to create a new message.
 */
export const LifecycleHandlerSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 72);

/**
 * Describes the message k8s.io.api.core.v1.LimitRange.
 * Use `create(LimitRangeSchema)` to create a new message.
 */
export const LimitRangeSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 73);

/**
 * Describes the message k8s.io.api.core.v1.LimitRangeItem.
 * Use `create(LimitRangeItemSchema)` to create a new message.
 */
export const LimitRangeItemSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 74);

/**
 * Describes the message k8s.io.api.core.v1.LimitRangeList.
 * Use `create(LimitRangeListSchema)` to create a new message.
 */
export const LimitRangeListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 75);

/**
 * Describes the message k8s.io.api.core.v1.LimitRangeSpec.
 * Use `create(LimitRangeSpecSchema)` to create a new message.
 */
export const LimitRangeSpecSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 76);

/**
 * Describes the message k8s.io.api.core.v1.List.
 * Use `create(ListSchema)` to create a new message.
 */
export const ListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 77);

/**
 * Describes the message k8s.io.api.core.v1.LoadBalancerIngress.
 * Use `create(LoadBalancerIngressSchema)` to create a new message.
 */
export const LoadBalancerIngressSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 78);

/**
 * Describes the message k8s.io.api.core.v1.LoadBalancerStatus.
 * Use `create(LoadBalancerStatusSchema)` to create a new message.
 */
export const LoadBalancerStatusSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 79);

/**
 * Describes the message k8s.io.api.core.v1.LocalObjectReference.
 * Use `create(LocalObjectReferenceSchema)` to create a new message.
 */
export const LocalObjectReferenceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 80);

/**
 * Describes the message k8s.io.api.core.v1.LocalVolumeSource.
 * Use `create(LocalVolumeSourceSchema)` to create a new message.
 */
export const LocalVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 81);

/**
 * Describes the message k8s.io.api.core.v1.NFSVolumeSource.
 * Use `create(NFSVolumeSourceSchema)` to create a new message.
 */
export const NFSVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 82);

/**
 * Describes the message k8s.io.api.core.v1.Namespace.
 * Use `create(NamespaceSchema)` to create a new message.
 */
export const NamespaceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 83);

/**
 * Describes the message k8s.io.api.core.v1.NamespaceCondition.
 * Use `create(NamespaceConditionSchema)` to create a new message.
 */
export const NamespaceConditionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 84);

/**
 * Describes the message k8s.io.api.core.v1.NamespaceList.
 * Use `create(NamespaceListSchema)` to create a new message.
 */
export const NamespaceListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 85);

/**
 * Describes the message k8s.io.api.core.v1.NamespaceSpec.
 * Use `create(NamespaceSpecSchema)` to create a new message.
 */
export const NamespaceSpecSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 86);

/**
 * Describes the message k8s.io.api.core.v1.NamespaceStatus.
 * Use `create(NamespaceStatusSchema)` to create a new message.
 */
export const NamespaceStatusSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 87);

/**
 * Describes the message k8s.io.api.core.v1.Node.
 * Use `create(NodeSchema)` to create a new message.
 */
export const NodeSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 88);

/**
 * Describes the message k8s.io.api.core.v1.NodeAddress.
 * Use `create(NodeAddressSchema)` to create a new message.
 */
export const NodeAddressSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 89);

/**
 * Describes the message k8s.io.api.core.v1.NodeAffinity.
 * Use `create(NodeAffinitySchema)` to create a new message.
 */
export const NodeAffinitySchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 90);

/**
 * Describes the message k8s.io.api.core.v1.NodeCondition.
 * Use `create(NodeConditionSchema)` to create a new message.
 */
export const NodeConditionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 91);

/**
 * Describes the message k8s.io.api.core.v1.NodeConfigSource.
 * Use `create(NodeConfigSourceSchema)` to create a new message.
 */
export const NodeConfigSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 92);

/**
 * Describes the message k8s.io.api.core.v1.NodeConfigStatus.
 * Use `create(NodeConfigStatusSchema)` to create a new message.
 */
export const NodeConfigStatusSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 93);

/**
 * Describes the message k8s.io.api.core.v1.NodeDaemonEndpoints.
 * Use `create(NodeDaemonEndpointsSchema)` to create a new message.
 */
export const NodeDaemonEndpointsSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 94);

/**
 * Describes the message k8s.io.api.core.v1.NodeList.
 * Use `create(NodeListSchema)` to create a new message.
 */
export const NodeListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 95);

/**
 * Describes the message k8s.io.api.core.v1.NodeProxyOptions.
 * Use `create(NodeProxyOptionsSchema)` to create a new message.
 */
export const NodeProxyOptionsSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 96);

/**
 * Describes the message k8s.io.api.core.v1.NodeResources.
 * Use `create(NodeResourcesSchema)` to create a new message.
 */
export const NodeResourcesSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 97);

/**
 * Describes the message k8s.io.api.core.v1.NodeSelector.
 * Use `create(NodeSelectorSchema)` to create a new message.
 */
export const NodeSelectorSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 98);

/**
 * Describes the message k8s.io.api.core.v1.NodeSelectorRequirement.
 * Use `create(NodeSelectorRequirementSchema)` to create a new message.
 */
export const NodeSelectorRequirementSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 99);

/**
 * Describes the message k8s.io.api.core.v1.NodeSelectorTerm.
 * Use `create(NodeSelectorTermSchema)` to create a new message.
 */
export const NodeSelectorTermSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 100);

/**
 * Describes the message k8s.io.api.core.v1.NodeSpec.
 * Use `create(NodeSpecSchema)` to create a new message.
 */
export const NodeSpecSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 101);

/**
 * Describes the message k8s.io.api.core.v1.NodeStatus.
 * Use `create(NodeStatusSchema)` to create a new message.
 */
export const NodeStatusSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 102);

/**
 * Describes the message k8s.io.api.core.v1.NodeSystemInfo.
 * Use `create(NodeSystemInfoSchema)` to create a new message.
 */
export const NodeSystemInfoSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 103);

/**
 * Describes the message k8s.io.api.core.v1.ObjectFieldSelector.
 * Use `create(ObjectFieldSelectorSchema)` to create a new message.
 */
export const ObjectFieldSelectorSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 104);

/**
 * Describes the message k8s.io.api.core.v1.ObjectReference.
 * Use `create(ObjectReferenceSchema)` to create a new message.
 */
export const ObjectReferenceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 105);

/**
 * Describes the message k8s.io.api.core.v1.PersistentVolume.
 * Use `create(PersistentVolumeSchema)` to create a new message.
 */
export const PersistentVolumeSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 106);

/**
 * Describes the message k8s.io.api.core.v1.PersistentVolumeClaim.
 * Use `create(PersistentVolumeClaimSchema)` to create a new message.
 */
export const PersistentVolumeClaimSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 107);

/**
 * Describes the message k8s.io.api.core.v1.PersistentVolumeClaimCondition.
 * Use `create(PersistentVolumeClaimConditionSchema)` to create a new message.
 */
export const PersistentVolumeClaimConditionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 108);

/**
 * Describes the message k8s.io.api.core.v1.PersistentVolumeClaimList.
 * Use `create(PersistentVolumeClaimListSchema)` to create a new message.
 */
export const PersistentVolumeClaimListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 109);

/**
 * Describes the message k8s.io.api.core.v1.PersistentVolumeClaimSpec.
 * Use `create(PersistentVolumeClaimSpecSchema)` to create a new message.
 */
export const PersistentVolumeClaimSpecSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 110);

/**
 * Describes the message k8s.io.api.core.v1.PersistentVolumeClaimStatus.
 * Use `create(PersistentVolumeClaimStatusSchema)` to create a new message.
 */
export const PersistentVolumeClaimStatusSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 111);

/**
 * Describes the message k8s.io.api.core.v1.PersistentVolumeClaimTemplate.
 * Use `create(PersistentVolumeClaimTemplateSchema)` to create a new message.
 */
export const PersistentVolumeClaimTemplateSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 112);

/**
 * Describes the message k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource.
 * Use `create(PersistentVolumeClaimVolumeSourceSchema)` to create a new message.
 */
export const PersistentVolumeClaimVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 113);

/**
 * Describes the message k8s.io.api.core.v1.PersistentVolumeList.
 * Use `create(PersistentVolumeListSchema)` to create a new message.
 */
export const PersistentVolumeListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 114);

/**
 * Describes the message k8s.io.api.core.v1.PersistentVolumeSource.
 * Use `create(PersistentVolumeSourceSchema)` to create a new message.
 */
export const PersistentVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 115);

/**
 * Describes the message k8s.io.api.core.v1.PersistentVolumeSpec.
 * Use `create(PersistentVolumeSpecSchema)` to create a new message.
 */
export const PersistentVolumeSpecSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 116);

/**
 * Describes the message k8s.io.api.core.v1.PersistentVolumeStatus.
 * Use `create(PersistentVolumeStatusSchema)` to create a new message.
 */
export const PersistentVolumeStatusSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 117);

/**
 * Describes the message k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource.
 * Use `create(PhotonPersistentDiskVolumeSourceSchema)` to create a new message.
 */
export const PhotonPersistentDiskVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 118);

/**
 * Describes the message k8s.io.api.core.v1.Pod.
 * Use `create(PodSchema)` to create a new message.
 */
export const PodSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 119);

/**
 * Describes the message k8s.io.api.core.v1.PodAffinity.
 * Use `create(PodAffinitySchema)` to create a new message.
 */
export const PodAffinitySchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 120);

/**
 * Describes the message k8s.io.api.core.v1.PodAffinityTerm.
 * Use `create(PodAffinityTermSchema)` to create a new message.
 */
export const PodAffinityTermSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 121);

/**
 * Describes the message k8s.io.api.core.v1.PodAntiAffinity.
 * Use `create(PodAntiAffinitySchema)` to create a new message.
 */
export const PodAntiAffinitySchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 122);

/**
 * Describes the message k8s.io.api.core.v1.PodAttachOptions.
 * Use `create(PodAttachOptionsSchema)` to create a new message.
 */
export const PodAttachOptionsSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 123);

/**
 * Describes the message k8s.io.api.core.v1.PodCondition.
 * Use `create(PodConditionSchema)` to create a new message.
 */
export const PodConditionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 124);

/**
 * Describes the message k8s.io.api.core.v1.PodDNSConfig.
 * Use `create(PodDNSConfigSchema)` to create a new message.
 */
export const PodDNSConfigSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 125);

/**
 * Describes the message k8s.io.api.core.v1.PodDNSConfigOption.
 * Use `create(PodDNSConfigOptionSchema)` to create a new message.
 */
export const PodDNSConfigOptionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 126);

/**
 * Describes the message k8s.io.api.core.v1.PodExecOptions.
 * Use `create(PodExecOptionsSchema)` to create a new message.
 */
export const PodExecOptionsSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 127);

/**
 * Describes the message k8s.io.api.core.v1.PodIP.
 * Use `create(PodIPSchema)` to create a new message.
 */
export const PodIPSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 128);

/**
 * Describes the message k8s.io.api.core.v1.PodList.
 * Use `create(PodListSchema)` to create a new message.
 */
export const PodListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 129);

/**
 * Describes the message k8s.io.api.core.v1.PodLogOptions.
 * Use `create(PodLogOptionsSchema)` to create a new message.
 */
export const PodLogOptionsSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 130);

/**
 * Describes the message k8s.io.api.core.v1.PodOS.
 * Use `create(PodOSSchema)` to create a new message.
 */
export const PodOSSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 131);

/**
 * Describes the message k8s.io.api.core.v1.PodPortForwardOptions.
 * Use `create(PodPortForwardOptionsSchema)` to create a new message.
 */
export const PodPortForwardOptionsSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 132);

/**
 * Describes the message k8s.io.api.core.v1.PodProxyOptions.
 * Use `create(PodProxyOptionsSchema)` to create a new message.
 */
export const PodProxyOptionsSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 133);

/**
 * Describes the message k8s.io.api.core.v1.PodReadinessGate.
 * Use `create(PodReadinessGateSchema)` to create a new message.
 */
export const PodReadinessGateSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 134);

/**
 * Describes the message k8s.io.api.core.v1.PodSecurityContext.
 * Use `create(PodSecurityContextSchema)` to create a new message.
 */
export const PodSecurityContextSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 135);

/**
 * Describes the message k8s.io.api.core.v1.PodSignature.
 * Use `create(PodSignatureSchema)` to create a new message.
 */
export const PodSignatureSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 136);

/**
 * Describes the message k8s.io.api.core.v1.PodSpec.
 * Use `create(PodSpecSchema)` to create a new message.
 */
export const PodSpecSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 137);

/**
 * Describes the message k8s.io.api.core.v1.PodStatus.
 * Use `create(PodStatusSchema)` to create a new message.
 */
export const PodStatusSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 138);

/**
 * Describes the message k8s.io.api.core.v1.PodStatusResult.
 * Use `create(PodStatusResultSchema)` to create a new message.
 */
export const PodStatusResultSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 139);

/**
 * Describes the message k8s.io.api.core.v1.PodTemplate.
 * Use `create(PodTemplateSchema)` to create a new message.
 */
export const PodTemplateSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 140);

/**
 * Describes the message k8s.io.api.core.v1.PodTemplateList.
 * Use `create(PodTemplateListSchema)` to create a new message.
 */
export const PodTemplateListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 141);

/**
 * Describes the message k8s.io.api.core.v1.PodTemplateSpec.
 * Use `create(PodTemplateSpecSchema)` to create a new message.
 */
export const PodTemplateSpecSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 142);

/**
 * Describes the message k8s.io.api.core.v1.PortStatus.
 * Use `create(PortStatusSchema)` to create a new message.
 */
export const PortStatusSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 143);

/**
 * Describes the message k8s.io.api.core.v1.PortworxVolumeSource.
 * Use `create(PortworxVolumeSourceSchema)` to create a new message.
 */
export const PortworxVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 144);

/**
 * Describes the message k8s.io.api.core.v1.Preconditions.
 * Use `create(PreconditionsSchema)` to create a new message.
 */
export const PreconditionsSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 145);

/**
 * Describes the message k8s.io.api.core.v1.PreferAvoidPodsEntry.
 * Use `create(PreferAvoidPodsEntrySchema)` to create a new message.
 */
export const PreferAvoidPodsEntrySchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 146);

/**
 * Describes the message k8s.io.api.core.v1.PreferredSchedulingTerm.
 * Use `create(PreferredSchedulingTermSchema)` to create a new message.
 */
export const PreferredSchedulingTermSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 147);

/**
 * Describes the message k8s.io.api.core.v1.Probe.
 * Use `create(ProbeSchema)` to create a new message.
 */
export const ProbeSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 148);

/**
 * Describes the message k8s.io.api.core.v1.ProbeHandler.
 * Use `create(ProbeHandlerSchema)` to create a new message.
 */
export const ProbeHandlerSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 149);

/**
 * Describes the message k8s.io.api.core.v1.ProjectedVolumeSource.
 * Use `create(ProjectedVolumeSourceSchema)` to create a new message.
 */
export const ProjectedVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 150);

/**
 * Describes the message k8s.io.api.core.v1.QuobyteVolumeSource.
 * Use `create(QuobyteVolumeSourceSchema)` to create a new message.
 */
export const QuobyteVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 151);

/**
 * Describes the message k8s.io.api.core.v1.RBDPersistentVolumeSource.
 * Use `create(RBDPersistentVolumeSourceSchema)` to create a new message.
 */
export const RBDPersistentVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 152);

/**
 * Describes the message k8s.io.api.core.v1.RBDVolumeSource.
 * Use `create(RBDVolumeSourceSchema)` to create a new message.
 */
export const RBDVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 153);

/**
 * Describes the message k8s.io.api.core.v1.RangeAllocation.
 * Use `create(RangeAllocationSchema)` to create a new message.
 */
export const RangeAllocationSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 154);

/**
 * Describes the message k8s.io.api.core.v1.ReplicationController.
 * Use `create(ReplicationControllerSchema)` to create a new message.
 */
export const ReplicationControllerSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 155);

/**
 * Describes the message k8s.io.api.core.v1.ReplicationControllerCondition.
 * Use `create(ReplicationControllerConditionSchema)` to create a new message.
 */
export const ReplicationControllerConditionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 156);

/**
 * Describes the message k8s.io.api.core.v1.ReplicationControllerList.
 * Use `create(ReplicationControllerListSchema)` to create a new message.
 */
export const ReplicationControllerListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 157);

/**
 * Describes the message k8s.io.api.core.v1.ReplicationControllerSpec.
 * Use `create(ReplicationControllerSpecSchema)` to create a new message.
 */
export const ReplicationControllerSpecSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 158);

/**
 * Describes the message k8s.io.api.core.v1.ReplicationControllerStatus.
 * Use `create(ReplicationControllerStatusSchema)` to create a new message.
 */
export const ReplicationControllerStatusSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 159);

/**
 * Describes the message k8s.io.api.core.v1.ResourceFieldSelector.
 * Use `create(ResourceFieldSelectorSchema)` to create a new message.
 */
export const ResourceFieldSelectorSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 160);

/**
 * Describes the message k8s.io.api.core.v1.ResourceQuota.
 * Use `create(ResourceQuotaSchema)` to create a new message.
 */
export const ResourceQuotaSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 161);

/**
 * Describes the message k8s.io.api.core.v1.ResourceQuotaList.
 * Use `create(ResourceQuotaListSchema)` to create a new message.
 */
export const ResourceQuotaListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 162);

/**
 * Describes the message k8s.io.api.core.v1.ResourceQuotaSpec.
 * Use `create(ResourceQuotaSpecSchema)` to create a new message.
 */
export const ResourceQuotaSpecSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 163);

/**
 * Describes the message k8s.io.api.core.v1.ResourceQuotaStatus.
 * Use `create(ResourceQuotaStatusSchema)` to create a new message.
 */
export const ResourceQuotaStatusSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 164);

/**
 * Describes the message k8s.io.api.core.v1.ResourceRequirements.
 * Use `create(ResourceRequirementsSchema)` to create a new message.
 */
export const ResourceRequirementsSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 165);

/**
 * Describes the message k8s.io.api.core.v1.SELinuxOptions.
 * Use `create(SELinuxOptionsSchema)` to create a new message.
 */
export const SELinuxOptionsSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 166);

/**
 * Describes the message k8s.io.api.core.v1.ScaleIOPersistentVolumeSource.
 * Use `create(ScaleIOPersistentVolumeSourceSchema)` to create a new message.
 */
export const ScaleIOPersistentVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 167);

/**
 * Describes the message k8s.io.api.core.v1.ScaleIOVolumeSource.
 * Use `create(ScaleIOVolumeSourceSchema)` to create a new message.
 */
export const ScaleIOVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 168);

/**
 * Describes the message k8s.io.api.core.v1.ScopeSelector.
 * Use `create(ScopeSelectorSchema)` to create a new message.
 */
export const ScopeSelectorSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 169);

/**
 * Describes the message k8s.io.api.core.v1.ScopedResourceSelectorRequirement.
 * Use `create(ScopedResourceSelectorRequirementSchema)` to create a new message.
 */
export const ScopedResourceSelectorRequirementSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 170);

/**
 * Describes the message k8s.io.api.core.v1.SeccompProfile.
 * Use `create(SeccompProfileSchema)` to create a new message.
 */
export const SeccompProfileSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 171);

/**
 * Describes the message k8s.io.api.core.v1.Secret.
 * Use `create(SecretSchema)` to create a new message.
 */
export const SecretSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 172);

/**
 * Describes the message k8s.io.api.core.v1.SecretEnvSource.
 * Use `create(SecretEnvSourceSchema)` to create a new message.
 */
export const SecretEnvSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 173);

/**
 * Describes the message k8s.io.api.core.v1.SecretKeySelector.
 * Use `create(SecretKeySelectorSchema)` to create a new message.
 */
export const SecretKeySelectorSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 174);

/**
 * Describes the message k8s.io.api.core.v1.SecretList.
 * Use `create(SecretListSchema)` to create a new message.
 */
export const SecretListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 175);

/**
 * Describes the message k8s.io.api.core.v1.SecretProjection.
 * Use `create(SecretProjectionSchema)` to create a new message.
 */
export const SecretProjectionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 176);

/**
 * Describes the message k8s.io.api.core.v1.SecretReference.
 * Use `create(SecretReferenceSchema)` to create a new message.
 */
export const SecretReferenceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 177);

/**
 * Describes the message k8s.io.api.core.v1.SecretVolumeSource.
 * Use `create(SecretVolumeSourceSchema)` to create a new message.
 */
export const SecretVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 178);

/**
 * Describes the message k8s.io.api.core.v1.SecurityContext.
 * Use `create(SecurityContextSchema)` to create a new message.
 */
export const SecurityContextSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 179);

/**
 * Describes the message k8s.io.api.core.v1.SerializedReference.
 * Use `create(SerializedReferenceSchema)` to create a new message.
 */
export const SerializedReferenceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 180);

/**
 * Describes the message k8s.io.api.core.v1.Service.
 * Use `create(ServiceSchema)` to create a new message.
 */
export const ServiceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 181);

/**
 * Describes the message k8s.io.api.core.v1.ServiceAccount.
 * Use `create(ServiceAccountSchema)` to create a new message.
 */
export const ServiceAccountSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 182);

/**
 * Describes the message k8s.io.api.core.v1.ServiceAccountList.
 * Use `create(ServiceAccountListSchema)` to create a new message.
 */
export const ServiceAccountListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 183);

/**
 * Describes the message k8s.io.api.core.v1.ServiceAccountTokenProjection.
 * Use `create(ServiceAccountTokenProjectionSchema)` to create a new message.
 */
export const ServiceAccountTokenProjectionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 184);

/**
 * Describes the message k8s.io.api.core.v1.ServiceList.
 * Use `create(ServiceListSchema)` to create a new message.
 */
export const ServiceListSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 185);

/**
 * Describes the message k8s.io.api.core.v1.ServicePort.
 * Use `create(ServicePortSchema)` to create a new message.
 */
export const ServicePortSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 186);

/**
 * Describes the message k8s.io.api.core.v1.ServiceProxyOptions.
 * Use `create(ServiceProxyOptionsSchema)` to create a new message.
 */
export const ServiceProxyOptionsSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 187);

/**
 * Describes the message k8s.io.api.core.v1.ServiceSpec.
 * Use `create(ServiceSpecSchema)` to create a new message.
 */
export const ServiceSpecSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 188);

/**
 * Describes the message k8s.io.api.core.v1.ServiceStatus.
 * Use `create(ServiceStatusSchema)` to create a new message.
 */
export const ServiceStatusSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 189);

/**
 * Describes the message k8s.io.api.core.v1.SessionAffinityConfig.
 * Use `create(SessionAffinityConfigSchema)` to create a new message.
 */
export const SessionAffinityConfigSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 190);

/**
 * Describes the message k8s.io.api.core.v1.StorageOSPersistentVolumeSource.
 * Use `create(StorageOSPersistentVolumeSourceSchema)` to create a new message.
 */
export const StorageOSPersistentVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 191);

/**
 * Describes the message k8s.io.api.core.v1.StorageOSVolumeSource.
 * Use `create(StorageOSVolumeSourceSchema)` to create a new message.
 */
export const StorageOSVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 192);

/**
 * Describes the message k8s.io.api.core.v1.Sysctl.
 * Use `create(SysctlSchema)` to create a new message.
 */
export const SysctlSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 193);

/**
 * Describes the message k8s.io.api.core.v1.TCPSocketAction.
 * Use `create(TCPSocketActionSchema)` to create a new message.
 */
export const TCPSocketActionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 194);

/**
 * Describes the message k8s.io.api.core.v1.Taint.
 * Use `create(TaintSchema)` to create a new message.
 */
export const TaintSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 195);

/**
 * Describes the message k8s.io.api.core.v1.Toleration.
 * Use `create(TolerationSchema)` to create a new message.
 */
export const TolerationSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 196);

/**
 * Describes the message k8s.io.api.core.v1.TopologySelectorLabelRequirement.
 * Use `create(TopologySelectorLabelRequirementSchema)` to create a new message.
 */
export const TopologySelectorLabelRequirementSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 197);

/**
 * Describes the message k8s.io.api.core.v1.TopologySelectorTerm.
 * Use `create(TopologySelectorTermSchema)` to create a new message.
 */
export const TopologySelectorTermSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 198);

/**
 * Describes the message k8s.io.api.core.v1.TopologySpreadConstraint.
 * Use `create(TopologySpreadConstraintSchema)` to create a new message.
 */
export const TopologySpreadConstraintSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 199);

/**
 * Describes the message k8s.io.api.core.v1.TypedLocalObjectReference.
 * Use `create(TypedLocalObjectReferenceSchema)` to create a new message.
 */
export const TypedLocalObjectReferenceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 200);

/**
 * Describes the message k8s.io.api.core.v1.Volume.
 * Use `create(VolumeSchema)` to create a new message.
 */
export const VolumeSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 201);

/**
 * Describes the message k8s.io.api.core.v1.VolumeDevice.
 * Use `create(VolumeDeviceSchema)` to create a new message.
 */
export const VolumeDeviceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 202);

/**
 * Describes the message k8s.io.api.core.v1.VolumeMount.
 * Use `create(VolumeMountSchema)` to create a new message.
 */
export const VolumeMountSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 203);

/**
 * Describes the message k8s.io.api.core.v1.VolumeNodeAffinity.
 * Use `create(VolumeNodeAffinitySchema)` to create a new message.
 */
export const VolumeNodeAffinitySchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 204);

/**
 * Describes the message k8s.io.api.core.v1.VolumeProjection.
 * Use `create(VolumeProjectionSchema)` to create a new message.
 */
export const VolumeProjectionSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 205);

/**
 * Describes the message k8s.io.api.core.v1.VolumeSource.
 * Use `create(VolumeSourceSchema)` to create a new message.
 */
export const VolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 206);

/**
 * Describes the message k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource.
 * Use `create(VsphereVirtualDiskVolumeSourceSchema)` to create a new message.
 */
export const VsphereVirtualDiskVolumeSourceSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 207);

/**
 * Describes the message k8s.io.api.core.v1.WeightedPodAffinityTerm.
 * Use `create(WeightedPodAffinityTermSchema)` to create a new message.
 */
export const WeightedPodAffinityTermSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 208);

/**
 * Describes the message k8s.io.api.core.v1.WindowsSecurityContextOptions.
 * Use `create(WindowsSecurityContextOptionsSchema)` to create a new message.
 */
export const WindowsSecurityContextOptionsSchema = /*@__PURE__*/
  messageDesc(file_k8s_io_api_core_v1_generated, 209);

