// @generated by protoc-gen-es v2.5.2 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/quota/v1/quota.proto (package qdrant.cloud.quota.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file qdrant/cloud/quota/v1/quota.proto.
 */
export declare const file_qdrant_cloud_quota_v1_quota: GenFile;

/**
 * ListAuthenticatedUserQuotasRequest is the request for the ListAuthenticatedUserQuotas function
 *
 * Empty
 *
 * @generated from message qdrant.cloud.quota.v1.ListAuthenticatedUserQuotasRequest
 */
export declare type ListAuthenticatedUserQuotasRequest = Message<"qdrant.cloud.quota.v1.ListAuthenticatedUserQuotasRequest"> & {
};

/**
 * Describes the message qdrant.cloud.quota.v1.ListAuthenticatedUserQuotasRequest.
 * Use `create(ListAuthenticatedUserQuotasRequestSchema)` to create a new message.
 */
export declare const ListAuthenticatedUserQuotasRequestSchema: GenMessage<ListAuthenticatedUserQuotasRequest>;

/**
 * ListAuthenticatedUserQuotasResponse is the response from the ListAuthenticatedUserQuotas function
 *
 * @generated from message qdrant.cloud.quota.v1.ListAuthenticatedUserQuotasResponse
 */
export declare type ListAuthenticatedUserQuotasResponse = Message<"qdrant.cloud.quota.v1.ListAuthenticatedUserQuotasResponse"> & {
  /**
   * Maximum number of accounts this user can be the owner of
   *
   * @generated from field: uint32 max_owned_accounts = 1;
   */
  maxOwnedAccounts: number;
};

/**
 * Describes the message qdrant.cloud.quota.v1.ListAuthenticatedUserQuotasResponse.
 * Use `create(ListAuthenticatedUserQuotasResponseSchema)` to create a new message.
 */
export declare const ListAuthenticatedUserQuotasResponseSchema: GenMessage<ListAuthenticatedUserQuotasResponse>;

/**
 * ListAccountQuotasRequest is the request for the ListAccountQuotas function.
 *
 * @generated from message qdrant.cloud.quota.v1.ListAccountQuotasRequest
 */
export declare type ListAccountQuotasRequest = Message<"qdrant.cloud.quota.v1.ListAccountQuotasRequest"> & {
  /**
   * The identifier of the account (in GUID format) to list quotas for.
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;
};

/**
 * Describes the message qdrant.cloud.quota.v1.ListAccountQuotasRequest.
 * Use `create(ListAccountQuotasRequestSchema)` to create a new message.
 */
export declare const ListAccountQuotasRequestSchema: GenMessage<ListAccountQuotasRequest>;

/**
 * ListAccountQuotasResponse is the response from the ListAccountQuotas function.
 *
 * @generated from message qdrant.cloud.quota.v1.ListAccountQuotasResponse
 */
export declare type ListAccountQuotasResponse = Message<"qdrant.cloud.quota.v1.ListAccountQuotasResponse"> & {
  /**
   * ID of the account this quota applies to
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * Maximum number of clusters this account is allowed to create
   *
   * @generated from field: uint32 max_clusters = 2;
   */
  maxClusters: number;

  /**
   * Maximum number of nodes clusters can be scaled to
   *
   * @generated from field: uint32 max_cluster_nodes = 3;
   */
  maxClusterNodes: number;

  /**
   * Maximum number of JWTs
   *
   * @generated from field: uint32 max_cluster_jwts = 4;
   */
  maxClusterJwts: number;
};

/**
 * Describes the message qdrant.cloud.quota.v1.ListAccountQuotasResponse.
 * Use `create(ListAccountQuotasResponseSchema)` to create a new message.
 */
export declare const ListAccountQuotasResponseSchema: GenMessage<ListAccountQuotasResponse>;

/**
 * Quota is the API used to configure Quotas.
 *
 * @generated from service qdrant.cloud.quota.v1.QuotaService
 */
export declare const QuotaService: GenService<{
  /**
   * Lists all quotas for the authenticated user.
   * Required permissions:
   * - None (authenticated only)
   *
   * @generated from rpc qdrant.cloud.quota.v1.QuotaService.ListAuthenticatedUserQuotas
   */
  listAuthenticatedUserQuotas: {
    methodKind: "unary";
    input: typeof ListAuthenticatedUserQuotasRequestSchema;
    output: typeof ListAuthenticatedUserQuotasResponseSchema;
  },
  /**
   * Lists all quotas for the account identified by the given account ID.
   * Required permissions:
   * - read:account
   *
   * @generated from rpc qdrant.cloud.quota.v1.QuotaService.ListAccountQuotas
   */
  listAccountQuotas: {
    methodKind: "unary";
    input: typeof ListAccountQuotasRequestSchema;
    output: typeof ListAccountQuotasResponseSchema;
  },
}>;

