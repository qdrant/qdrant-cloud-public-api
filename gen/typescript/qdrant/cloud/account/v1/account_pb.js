// @generated by protoc-gen-es v2.7.0 with parameter "target=js+dts,import_extension=js,valid_types=protovalidate_required"
// @generated from file qdrant/cloud/account/v1/account.proto (package qdrant.cloud.account.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb.js";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb.js";
import { file_qdrant_cloud_iam_v1_iam } from "../../iam/v1/iam_pb.js";

/**
 * Describes the file qdrant/cloud/account/v1/account.proto.
 */
export const file_qdrant_cloud_account_v1_account = /*@__PURE__*/
  fileDesc("", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common, file_qdrant_cloud_iam_v1_iam]);

/**
 * Describes the message qdrant.cloud.account.v1.ListAccountsRequest.
 * Use `create(ListAccountsRequestSchema)` to create a new message.
 */
export const ListAccountsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 0);

/**
 * Describes the message qdrant.cloud.account.v1.ListAccountsResponse.
 * Use `create(ListAccountsResponseSchema)` to create a new message.
 */
export const ListAccountsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 1);

/**
 * Describes the message qdrant.cloud.account.v1.GetAccountRequest.
 * Use `create(GetAccountRequestSchema)` to create a new message.
 */
export const GetAccountRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 2);

/**
 * Describes the message qdrant.cloud.account.v1.GetAccountResponse.
 * Use `create(GetAccountResponseSchema)` to create a new message.
 */
export const GetAccountResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 3);

/**
 * Describes the message qdrant.cloud.account.v1.CreateAccountRequest.
 * Use `create(CreateAccountRequestSchema)` to create a new message.
 */
export const CreateAccountRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 4);

/**
 * Describes the message qdrant.cloud.account.v1.CreateAccountResponse.
 * Use `create(CreateAccountResponseSchema)` to create a new message.
 */
export const CreateAccountResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 5);

/**
 * Describes the message qdrant.cloud.account.v1.UpdateAccountRequest.
 * Use `create(UpdateAccountRequestSchema)` to create a new message.
 */
export const UpdateAccountRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 6);

/**
 * Describes the message qdrant.cloud.account.v1.UpdateAccountResponse.
 * Use `create(UpdateAccountResponseSchema)` to create a new message.
 */
export const UpdateAccountResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 7);

/**
 * Describes the message qdrant.cloud.account.v1.DeleteAccountRequest.
 * Use `create(DeleteAccountRequestSchema)` to create a new message.
 */
export const DeleteAccountRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 8);

/**
 * Describes the message qdrant.cloud.account.v1.DeleteAccountResponse.
 * Use `create(DeleteAccountResponseSchema)` to create a new message.
 */
export const DeleteAccountResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 9);

/**
 * Describes the message qdrant.cloud.account.v1.ListAccountInvitesRequest.
 * Use `create(ListAccountInvitesRequestSchema)` to create a new message.
 */
export const ListAccountInvitesRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 10);

/**
 * Describes the message qdrant.cloud.account.v1.ListAccountInvitesResponse.
 * Use `create(ListAccountInvitesResponseSchema)` to create a new message.
 */
export const ListAccountInvitesResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 11);

/**
 * Describes the message qdrant.cloud.account.v1.ListReceivedAccountInvitesRequest.
 * Use `create(ListReceivedAccountInvitesRequestSchema)` to create a new message.
 */
export const ListReceivedAccountInvitesRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 12);

/**
 * Describes the message qdrant.cloud.account.v1.ListReceivedAccountInvitesResponse.
 * Use `create(ListReceivedAccountInvitesResponseSchema)` to create a new message.
 */
export const ListReceivedAccountInvitesResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 13);

/**
 * Describes the message qdrant.cloud.account.v1.GetAccountInviteRequest.
 * Use `create(GetAccountInviteRequestSchema)` to create a new message.
 */
export const GetAccountInviteRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 14);

/**
 * Describes the message qdrant.cloud.account.v1.GetAccountInviteResponse.
 * Use `create(GetAccountInviteResponseSchema)` to create a new message.
 */
export const GetAccountInviteResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 15);

/**
 * Describes the message qdrant.cloud.account.v1.CreateAccountInviteRequest.
 * Use `create(CreateAccountInviteRequestSchema)` to create a new message.
 */
export const CreateAccountInviteRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 16);

/**
 * Describes the message qdrant.cloud.account.v1.CreateAccountInviteResponse.
 * Use `create(CreateAccountInviteResponseSchema)` to create a new message.
 */
export const CreateAccountInviteResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 17);

/**
 * Describes the message qdrant.cloud.account.v1.DeleteAccountInviteRequest.
 * Use `create(DeleteAccountInviteRequestSchema)` to create a new message.
 */
export const DeleteAccountInviteRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 18);

/**
 * Describes the message qdrant.cloud.account.v1.DeleteAccountInviteResponse.
 * Use `create(DeleteAccountInviteResponseSchema)` to create a new message.
 */
export const DeleteAccountInviteResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 19);

/**
 * Describes the message qdrant.cloud.account.v1.AcceptAccountInviteRequest.
 * Use `create(AcceptAccountInviteRequestSchema)` to create a new message.
 */
export const AcceptAccountInviteRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 20);

/**
 * Describes the message qdrant.cloud.account.v1.AcceptAccountInviteResponse.
 * Use `create(AcceptAccountInviteResponseSchema)` to create a new message.
 */
export const AcceptAccountInviteResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 21);

/**
 * Describes the message qdrant.cloud.account.v1.RejectAccountInviteRequest.
 * Use `create(RejectAccountInviteRequestSchema)` to create a new message.
 */
export const RejectAccountInviteRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 22);

/**
 * Describes the message qdrant.cloud.account.v1.RejectAccountInviteResponse.
 * Use `create(RejectAccountInviteResponseSchema)` to create a new message.
 */
export const RejectAccountInviteResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 23);

/**
 * Describes the message qdrant.cloud.account.v1.ListAccountMembersRequest.
 * Use `create(ListAccountMembersRequestSchema)` to create a new message.
 */
export const ListAccountMembersRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 24);

/**
 * Describes the message qdrant.cloud.account.v1.ListAccountMembersResponse.
 * Use `create(ListAccountMembersResponseSchema)` to create a new message.
 */
export const ListAccountMembersResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 25);

/**
 * Describes the message qdrant.cloud.account.v1.GetAccountMemberRequest.
 * Use `create(GetAccountMemberRequestSchema)` to create a new message.
 */
export const GetAccountMemberRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 26);

/**
 * Describes the message qdrant.cloud.account.v1.GetAccountMemberResponse.
 * Use `create(GetAccountMemberResponseSchema)` to create a new message.
 */
export const GetAccountMemberResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 27);

/**
 * Describes the message qdrant.cloud.account.v1.DeleteAccountMemberRequest.
 * Use `create(DeleteAccountMemberRequestSchema)` to create a new message.
 */
export const DeleteAccountMemberRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 28);

/**
 * Describes the message qdrant.cloud.account.v1.DeleteAccountMemberResponse.
 * Use `create(DeleteAccountMemberResponseSchema)` to create a new message.
 */
export const DeleteAccountMemberResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 29);

/**
 * Describes the message qdrant.cloud.account.v1.Account.
 * Use `create(AccountSchema)` to create a new message.
 */
export const AccountSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 30);

/**
 * Describes the message qdrant.cloud.account.v1.AccountInvite.
 * Use `create(AccountInviteSchema)` to create a new message.
 */
export const AccountInviteSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 31);

/**
 * Describes the message qdrant.cloud.account.v1.AccountMember.
 * Use `create(AccountMemberSchema)` to create a new message.
 */
export const AccountMemberSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_account_v1_account, 32);

/**
 * Describes the enum qdrant.cloud.account.v1.AccountInviteStatus.
 */
export const AccountInviteStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_account_v1_account, 0);

/**
 * AccountInviteStatus defines the possible statuses of an account invitation.
 *
 * @generated from enum qdrant.cloud.account.v1.AccountInviteStatus
 */
export const AccountInviteStatus = /*@__PURE__*/
  tsEnum(AccountInviteStatusSchema);

/**
 * AccountService is the API used to configure Accounts.
 *
 * @generated from service qdrant.cloud.account.v1.AccountService
 */
export const AccountService = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_account_v1_account, 0);

