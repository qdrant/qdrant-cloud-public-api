// @generated by protoc-gen-es v2.2.3 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/account/v1/account.proto (package qdrant.cloud.account.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file qdrant/cloud/account/v1/account.proto.
 */
export declare const file_qdrant_cloud_account_v1_account: GenFile;

/**
 * ListAccountsRequest is the request for the ListAccounts function
 *
 * Empty
 *
 * @generated from message qdrant.cloud.account.v1.ListAccountsRequest
 */
export declare type ListAccountsRequest = Message<"qdrant.cloud.account.v1.ListAccountsRequest"> & {
};

/**
 * Describes the message qdrant.cloud.account.v1.ListAccountsRequest.
 * Use `create(ListAccountsRequestSchema)` to create a new message.
 */
export declare const ListAccountsRequestSchema: GenMessage<ListAccountsRequest>;

/**
 * ListAccountsResponse is the response from the ListAccounts function
 *
 * @generated from message qdrant.cloud.account.v1.ListAccountsResponse
 */
export declare type ListAccountsResponse = Message<"qdrant.cloud.account.v1.ListAccountsResponse"> & {
  /**
   * The actual accounts in this list.
   *
   * @generated from field: repeated qdrant.cloud.account.v1.Account items = 1;
   */
  items: Account[];
};

/**
 * Describes the message qdrant.cloud.account.v1.ListAccountsResponse.
 * Use `create(ListAccountsResponseSchema)` to create a new message.
 */
export declare const ListAccountsResponseSchema: GenMessage<ListAccountsResponse>;

/**
 * GetAccountRequest is the request for the GetAccount function
 *
 * @generated from message qdrant.cloud.account.v1.GetAccountRequest
 */
export declare type GetAccountRequest = Message<"qdrant.cloud.account.v1.GetAccountRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;
};

/**
 * Describes the message qdrant.cloud.account.v1.GetAccountRequest.
 * Use `create(GetAccountRequestSchema)` to create a new message.
 */
export declare const GetAccountRequestSchema: GenMessage<GetAccountRequest>;

/**
 * GetAccountResponse is the response from the GetAccount function
 *
 * @generated from message qdrant.cloud.account.v1.GetAccountResponse
 */
export declare type GetAccountResponse = Message<"qdrant.cloud.account.v1.GetAccountResponse"> & {
  /**
   * The actual account.
   *
   * @generated from field: qdrant.cloud.account.v1.Account account = 1;
   */
  account?: Account;
};

/**
 * Describes the message qdrant.cloud.account.v1.GetAccountResponse.
 * Use `create(GetAccountResponseSchema)` to create a new message.
 */
export declare const GetAccountResponseSchema: GenMessage<GetAccountResponse>;

/**
 * CreateAccountRequest is the request for the CreateAccount function.
 *
 * @generated from message qdrant.cloud.account.v1.CreateAccountRequest
 */
export declare type CreateAccountRequest = Message<"qdrant.cloud.account.v1.CreateAccountRequest"> & {
  /**
   * The actual account.
   *
   * @generated from field: qdrant.cloud.account.v1.Account account = 1;
   */
  account?: Account;
};

/**
 * Describes the message qdrant.cloud.account.v1.CreateAccountRequest.
 * Use `create(CreateAccountRequestSchema)` to create a new message.
 */
export declare const CreateAccountRequestSchema: GenMessage<CreateAccountRequest>;

/**
 * CreateAccountResponse is the response from the CreateAccount function.
 *
 * @generated from message qdrant.cloud.account.v1.CreateAccountResponse
 */
export declare type CreateAccountResponse = Message<"qdrant.cloud.account.v1.CreateAccountResponse"> & {
  /**
   * The actual account.
   *
   * @generated from field: qdrant.cloud.account.v1.Account account = 1;
   */
  account?: Account;
};

/**
 * Describes the message qdrant.cloud.account.v1.CreateAccountResponse.
 * Use `create(CreateAccountResponseSchema)` to create a new message.
 */
export declare const CreateAccountResponseSchema: GenMessage<CreateAccountResponse>;

/**
 * UpdateAccountRequest is the request for the UpdateAccount function.
 *
 * @generated from message qdrant.cloud.account.v1.UpdateAccountRequest
 */
export declare type UpdateAccountRequest = Message<"qdrant.cloud.account.v1.UpdateAccountRequest"> & {
  /**
   * The actual account.
   *
   * @generated from field: qdrant.cloud.account.v1.Account account = 1;
   */
  account?: Account;
};

/**
 * Describes the message qdrant.cloud.account.v1.UpdateAccountRequest.
 * Use `create(UpdateAccountRequestSchema)` to create a new message.
 */
export declare const UpdateAccountRequestSchema: GenMessage<UpdateAccountRequest>;

/**
 * UpdateAccountResponse is the response from the UpdateAccount function.
 *
 * @generated from message qdrant.cloud.account.v1.UpdateAccountResponse
 */
export declare type UpdateAccountResponse = Message<"qdrant.cloud.account.v1.UpdateAccountResponse"> & {
  /**
   * The actual account.
   *
   * @generated from field: qdrant.cloud.account.v1.Account account = 1;
   */
  account?: Account;
};

/**
 * Describes the message qdrant.cloud.account.v1.UpdateAccountResponse.
 * Use `create(UpdateAccountResponseSchema)` to create a new message.
 */
export declare const UpdateAccountResponseSchema: GenMessage<UpdateAccountResponse>;

/**
 * DeleteAccountRequest is the request for the DeleteAccount function.
 *
 * @generated from message qdrant.cloud.account.v1.DeleteAccountRequest
 */
export declare type DeleteAccountRequest = Message<"qdrant.cloud.account.v1.DeleteAccountRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;
};

/**
 * Describes the message qdrant.cloud.account.v1.DeleteAccountRequest.
 * Use `create(DeleteAccountRequestSchema)` to create a new message.
 */
export declare const DeleteAccountRequestSchema: GenMessage<DeleteAccountRequest>;

/**
 * DeleteAccountResponse is the response from the DeleteAccount function.
 *
 * Empty
 *
 * @generated from message qdrant.cloud.account.v1.DeleteAccountResponse
 */
export declare type DeleteAccountResponse = Message<"qdrant.cloud.account.v1.DeleteAccountResponse"> & {
};

/**
 * Describes the message qdrant.cloud.account.v1.DeleteAccountResponse.
 * Use `create(DeleteAccountResponseSchema)` to create a new message.
 */
export declare const DeleteAccountResponseSchema: GenMessage<DeleteAccountResponse>;

/**
 * An Account represents an account in the Qdrant cloud.
 *
 * @generated from message qdrant.cloud.account.v1.Account
 */
export declare type Account = Message<"qdrant.cloud.account.v1.Account"> & {
  /**
   * Unique identifier for the account (in GUID format).
   * This is a read-only field and will be available after an account is created.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The timestamp when the account was created.
   * This is a read-only field and will be available after an account is created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * The timestamp when the account was last updated.
   * This is a read-only field and will be available after an account is created.
   *
   * @generated from field: google.protobuf.Timestamp last_modified_at = 3;
   */
  lastModifiedAt?: Timestamp;

  /**
   * The name of the account.
   * Name can only contain letters, numbers, underscores and dashes
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * The Identifier of the owner of the account (in GUID format).
   * This is a read-only field.
   *
   * @generated from field: string owner_id = 6;
   */
  ownerId: string;

  /**
   * The email address of the owner of the account.
   * This is a read-only field and will be derived from the owner_id field.
   *
   * @generated from field: string owner_email = 7;
   */
  ownerEmail: string;

  /**
   * The privileges of the account, if any.
   * This is a read-only field.
   *
   * @generated from field: repeated string privileges = 8;
   */
  privileges: string[];
};

/**
 * Describes the message qdrant.cloud.account.v1.Account.
 * Use `create(AccountSchema)` to create a new message.
 */
export declare const AccountSchema: GenMessage<Account>;

/**
 * AccountService is the API used to configure Accounts.
 *
 * @generated from service qdrant.cloud.account.v1.AccountService
 */
export declare const AccountService: GenService<{
  /**
   * Fetch all accounts associated for the provided user, where the user has the provided permission.
   * Required permissions:
   * - read:accounts
   *
   * @generated from rpc qdrant.cloud.account.v1.AccountService.ListAccounts
   */
  listAccounts: {
    methodKind: "unary";
    input: typeof ListAccountsRequestSchema;
    output: typeof ListAccountsResponseSchema;
  },
  /**
   * Get an account identified by the given ID.
   * Required permissions:
   * - read:account
   *
   * @generated from rpc qdrant.cloud.account.v1.AccountService.GetAccount
   */
  getAccount: {
    methodKind: "unary";
    input: typeof GetAccountRequestSchema;
    output: typeof GetAccountResponseSchema;
  },
  /**
   * Creates an account for the authenticated user.
   * Required permissions:
   * - None (authenticated only)
   *
   * @generated from rpc qdrant.cloud.account.v1.AccountService.CreateAccount
   */
  createAccount: {
    methodKind: "unary";
    input: typeof CreateAccountRequestSchema;
    output: typeof CreateAccountResponseSchema;
  },
  /**
   * Update an account identified by the given ID.
   * Required permissions:
   * - write:account
   *
   * @generated from rpc qdrant.cloud.account.v1.AccountService.UpdateAccount
   */
  updateAccount: {
    methodKind: "unary";
    input: typeof UpdateAccountRequestSchema;
    output: typeof UpdateAccountResponseSchema;
  },
  /**
   * Deletes an account identified by the given ID.
   * Required permissions:
   * - delete:account
   *
   * @generated from rpc qdrant.cloud.account.v1.AccountService.DeleteAccount
   */
  deleteAccount: {
    methodKind: "unary";
    input: typeof DeleteAccountRequestSchema;
    output: typeof DeleteAccountResponseSchema;
  },
}>;

