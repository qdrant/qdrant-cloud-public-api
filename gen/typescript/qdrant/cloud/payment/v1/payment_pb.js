// @generated by protoc-gen-es v2.9.0 with parameter "target=js+dts,import_extension=js,valid_types=protovalidate_required"
// @generated from file qdrant/cloud/payment/v1/payment.proto (package qdrant.cloud.payment.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb.js";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb.js";
import { file_qdrant_cloud_event_v1_events } from "../../event/v1/events_pb.js";

/**
 * Describes the file qdrant/cloud/payment/v1/payment.proto.
 */
export const file_qdrant_cloud_payment_v1_payment = /*@__PURE__*/
  fileDesc("", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common, file_qdrant_cloud_event_v1_events]);

/**
 * Describes the message qdrant.cloud.payment.v1.ListPaymentMethodsRequest.
 * Use `create(ListPaymentMethodsRequestSchema)` to create a new message.
 */
export const ListPaymentMethodsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 0);

/**
 * Describes the message qdrant.cloud.payment.v1.ListPaymentMethodsResponse.
 * Use `create(ListPaymentMethodsResponseSchema)` to create a new message.
 */
export const ListPaymentMethodsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 1);

/**
 * Describes the message qdrant.cloud.payment.v1.GetPaymentMethodRequest.
 * Use `create(GetPaymentMethodRequestSchema)` to create a new message.
 */
export const GetPaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 2);

/**
 * Describes the message qdrant.cloud.payment.v1.GetPaymentMethodResponse.
 * Use `create(GetPaymentMethodResponseSchema)` to create a new message.
 */
export const GetPaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 3);

/**
 * Describes the message qdrant.cloud.payment.v1.CreatePaymentMethodRequest.
 * Use `create(CreatePaymentMethodRequestSchema)` to create a new message.
 */
export const CreatePaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 4);

/**
 * Describes the message qdrant.cloud.payment.v1.CreatePaymentMethodResponse.
 * Use `create(CreatePaymentMethodResponseSchema)` to create a new message.
 */
export const CreatePaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 5);

/**
 * Describes the message qdrant.cloud.payment.v1.UpdatePaymentMethodRequest.
 * Use `create(UpdatePaymentMethodRequestSchema)` to create a new message.
 */
export const UpdatePaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 6);

/**
 * Describes the message qdrant.cloud.payment.v1.UpdatePaymentMethodResponse.
 * Use `create(UpdatePaymentMethodResponseSchema)` to create a new message.
 */
export const UpdatePaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 7);

/**
 * Describes the message qdrant.cloud.payment.v1.DeletePaymentMethodRequest.
 * Use `create(DeletePaymentMethodRequestSchema)` to create a new message.
 */
export const DeletePaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 8);

/**
 * Describes the message qdrant.cloud.payment.v1.DeletePaymentMethodResponse.
 * Use `create(DeletePaymentMethodResponseSchema)` to create a new message.
 */
export const DeletePaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 9);

/**
 * Describes the message qdrant.cloud.payment.v1.GetStripeCheckoutSessionRequest.
 * Use `create(GetStripeCheckoutSessionRequestSchema)` to create a new message.
 */
export const GetStripeCheckoutSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 10);

/**
 * Describes the message qdrant.cloud.payment.v1.GetStripeCheckoutSessionResponse.
 * Use `create(GetStripeCheckoutSessionResponseSchema)` to create a new message.
 */
export const GetStripeCheckoutSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 11);

/**
 * Describes the message qdrant.cloud.payment.v1.CreateStripeCheckoutSessionRequest.
 * Use `create(CreateStripeCheckoutSessionRequestSchema)` to create a new message.
 */
export const CreateStripeCheckoutSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 12);

/**
 * Describes the message qdrant.cloud.payment.v1.CreateStripeCheckoutSessionResponse.
 * Use `create(CreateStripeCheckoutSessionResponseSchema)` to create a new message.
 */
export const CreateStripeCheckoutSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 13);

/**
 * Describes the message qdrant.cloud.payment.v1.StripeCheckoutSession.
 * Use `create(StripeCheckoutSessionSchema)` to create a new message.
 */
export const StripeCheckoutSessionSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 14);

/**
 * Describes the message qdrant.cloud.payment.v1.PaymentMethod.
 * Use `create(PaymentMethodSchema)` to create a new message.
 */
export const PaymentMethodSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 15);

/**
 * Describes the message qdrant.cloud.payment.v1.BillingAddress.
 * Use `create(BillingAddressSchema)` to create a new message.
 */
export const BillingAddressSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 16);

/**
 * Describes the message qdrant.cloud.payment.v1.PaymentMethodDetails.
 * Use `create(PaymentMethodDetailsSchema)` to create a new message.
 */
export const PaymentMethodDetailsSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 17);

/**
 * Describes the message qdrant.cloud.payment.v1.Card.
 * Use `create(CardSchema)` to create a new message.
 */
export const CardSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 18);

/**
 * Describes the enum qdrant.cloud.payment.v1.PaymentProviderType.
 */
export const PaymentProviderTypeSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_payment_v1_payment, 0);

/**
 * PaymentProviderType defines the type of payment method.
 *
 * @generated from enum qdrant.cloud.payment.v1.PaymentProviderType
 */
export const PaymentProviderType = /*@__PURE__*/
  tsEnum(PaymentProviderTypeSchema);

/**
 * Describes the enum qdrant.cloud.payment.v1.PaymentMethodStatus.
 */
export const PaymentMethodStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_payment_v1_payment, 1);

/**
 * PaymentMethodStatus defines the status of the payment method.
 *
 * @generated from enum qdrant.cloud.payment.v1.PaymentMethodStatus
 */
export const PaymentMethodStatus = /*@__PURE__*/
  tsEnum(PaymentMethodStatusSchema);

/**
 * Describes the enum qdrant.cloud.payment.v1.StripeSetupIntentStatus.
 */
export const StripeSetupIntentStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_payment_v1_payment, 2);

/**
 * Represents the status of a SetupIntent in Stripe.
 *
 * @generated from enum qdrant.cloud.payment.v1.StripeSetupIntentStatus
 */
export const StripeSetupIntentStatus = /*@__PURE__*/
  tsEnum(StripeSetupIntentStatusSchema);

/**
 * PaymentService is the API used to manage payment settings.
 *
 * @generated from service qdrant.cloud.payment.v1.PaymentService
 */
export const PaymentService = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_payment_v1_payment, 0);

