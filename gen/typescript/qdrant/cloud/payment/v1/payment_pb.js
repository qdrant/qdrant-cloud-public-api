// @generated by protoc-gen-es v2.5.2 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/payment/v1/payment.proto (package qdrant.cloud.payment.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb.js";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb.js";

/**
 * Describes the file qdrant/cloud/payment/v1/payment.proto.
 */
export const file_qdrant_cloud_payment_v1_payment = /*@__PURE__*/
  fileDesc("CiVxZHJhbnQvY2xvdWQvcGF5bWVudC92MS9wYXltZW50LnByb3RvEhdxZHJhbnQuY2xvdWQucGF5bWVudC52MSI5ChlMaXN0UGF5bWVudE1ldGhvZHNSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBIlMKGkxpc3RQYXltZW50TWV0aG9kc1Jlc3BvbnNlEjUKBWl0ZW1zGAEgAygLMiYucWRyYW50LmNsb3VkLnBheW1lbnQudjEuUGF5bWVudE1ldGhvZCJcChdHZXRQYXltZW50TWV0aG9kUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIjChFwYXltZW50X21ldGhvZF9pZBgCIAEoCUIIukgFcgOwAQEiYgoYR2V0UGF5bWVudE1ldGhvZFJlc3BvbnNlEkYKDnBheW1lbnRfbWV0aG9kGAEgASgLMiYucWRyYW50LmNsb3VkLnBheW1lbnQudjEuUGF5bWVudE1ldGhvZEIGukgDyAEBImQKGkNyZWF0ZVBheW1lbnRNZXRob2RSZXF1ZXN0EkYKDnBheW1lbnRfbWV0aG9kGAEgASgLMiYucWRyYW50LmNsb3VkLnBheW1lbnQudjEuUGF5bWVudE1ldGhvZEIGukgDyAEBImUKG0NyZWF0ZVBheW1lbnRNZXRob2RSZXNwb25zZRJGCg5wYXltZW50X21ldGhvZBgBIAEoCzImLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLlBheW1lbnRNZXRob2RCBrpIA8gBASLYAQoaVXBkYXRlUGF5bWVudE1ldGhvZFJlcXVlc3QSRgoOcGF5bWVudF9tZXRob2QYAiABKAsyJi5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5QYXltZW50TWV0aG9kQga6SAPIAQE6crpIbxptCiB1cGRhdGVfcGF5bWVudF9tZXRob2QuaWRfcHJlc2VudBIrcGF5bWVudF9tZXRob2QuaWQgaXMgcmVxdWlyZWQgZm9yIGFuIHVwZGF0ZRocdGhpcy5wYXltZW50X21ldGhvZC5pZCAhPSAnJyJlChtVcGRhdGVQYXltZW50TWV0aG9kUmVzcG9uc2USRgoOcGF5bWVudF9tZXRob2QYASABKAsyJi5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5QYXltZW50TWV0aG9kQga6SAPIAQEiXwoaRGVsZXRlUGF5bWVudE1ldGhvZFJlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQESIwoRcGF5bWVudF9tZXRob2RfaWQYAiABKAlCCLpIBXIDsAEBIh0KG0RlbGV0ZVBheW1lbnRNZXRob2RSZXNwb25zZSJcCh9HZXRTdHJpcGVDaGVja291dFNlc3Npb25SZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhsKCnNlc3Npb25faWQYAiABKAlCB7pIBHICEAEicgogR2V0U3RyaXBlQ2hlY2tvdXRTZXNzaW9uUmVzcG9uc2USTgoOc3RyaXBlX3Nlc3Npb24YASABKAsyLi5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5TdHJpcGVDaGVja291dFNlc3Npb25CBrpIA8gBASJiCiJDcmVhdGVTdHJpcGVDaGVja291dFNlc3Npb25SZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEh4KDHJlZGlyZWN0X3VybBgCIAEoCUIIukgFcgOIAQEidQojQ3JlYXRlU3RyaXBlQ2hlY2tvdXRTZXNzaW9uUmVzcG9uc2USTgoOc3RyaXBlX3Nlc3Npb24YASABKAsyLi5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5TdHJpcGVDaGVja291dFNlc3Npb25CBrpIA8gBASKWAgoVU3RyaXBlQ2hlY2tvdXRTZXNzaW9uEhMKAmlkGAEgASgJQge6SARyAhABEhoKA3VybBgCIAEoCUIIukgFcgOIAQFIAIgBARIZCghjdXN0b21lchgDIAEoCUIHukgEcgIQARIgCg9zZXR1cF9pbnRlbnRfaWQYBCABKAlCB7pIBHICEAESWQoTc2V0dXBfaW50ZW50X3N0YXR1cxgFIAEoDjIwLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLlN0cmlwZVNldHVwSW50ZW50U3RhdHVzQgq6SAeCAQQQASAAEiwKG3NldHVwX2ludGVudF9wYXltZW50X21ldGhvZBgGIAEoCUIHukgEcgIQAUIGCgRfdXJsIrYGCg1QYXltZW50TWV0aG9kEgoKAmlkGAEgASgJEhwKCmFjY291bnRfaWQYAiABKAlCCLpIBXIDsAEBEkYKBHR5cGUYAyABKA4yLC5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5QYXltZW50UHJvdmlkZXJUeXBlQgq6SAeCAQQQASAAEiAKE3BheW1lbnRfcHJvdmlkZXJfaWQYBCABKAlIAIgBARJSChZwYXltZW50X21ldGhvZF9kZXRhaWxzGAUgASgLMi0ucWRyYW50LmNsb3VkLnBheW1lbnQudjEuUGF5bWVudE1ldGhvZERldGFpbHNIAYgBARJFCg9iaWxsaW5nX2FkZHJlc3MYBiABKAsyJy5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5CaWxsaW5nQWRkcmVzc0gCiAEBEi4KCmNyZWF0ZWRfYXQYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjQKEGxhc3RfbW9kaWZpZWRfYXQYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhwKBnRheF9pZBgJIAEoCUIHukgEcgIQAUgDiAEBEhIKCmlzX2RlZmF1bHQYCiABKAgSTQoGc3RhdHVzGAsgASgOMiwucWRyYW50LmNsb3VkLnBheW1lbnQudjEuUGF5bWVudE1ldGhvZFN0YXR1c0IKukgHggEEEAEgAEgEiAEBOrEBukitARqqAQoRcGF5bWVudF9tZXRob2QuaWQSGnZhbHVlIG11c3QgYmUgYSB2YWxpZCBVVUlEGnl0aGlzLmlkLm1hdGNoZXMoJ15bMC05YS1mQS1GXXs4fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXsxMn0kJykgfHwgIWhhcyh0aGlzLmNyZWF0ZWRfYXQpQhYKFF9wYXltZW50X3Byb3ZpZGVyX2lkQhkKF19wYXltZW50X21ldGhvZF9kZXRhaWxzQhIKEF9iaWxsaW5nX2FkZHJlc3NCCQoHX3RheF9pZEIJCgdfc3RhdHVzIscCCg5CaWxsaW5nQWRkcmVzcxIVCgRuYW1lGAEgASgJQge6SARyAhABEhYKBWxpbmUxGAIgASgJQge6SARyAhABEhsKBWxpbmUyGAMgASgJQge6SARyAhABSACIAQESIQoLcG9zdGFsX2NvZGUYBCABKAlCB7pIBHICEAFIAYgBARIVCgRjaXR5GAUgASgJQge6SARyAhABEhYKBXN0YXRlGAYgASgJQge6SARyAhABEhgKB2NvdW50cnkYByABKAlCB7pIBHICEAESIgoRY291bnRyeV9mb3JtYXR0ZWQYCCABKAlCB7pIBHICEAESIAoPc3RhdGVfZm9ybWF0dGVkGAkgASgJQge6SARyAhABEh0KFXRheF9zdXBwb3J0ZWRfY291bnRyeRgKIAEoCEIICgZfbGluZTJCDgoMX3Bvc3RhbF9jb2RlImAKFFBheW1lbnRNZXRob2REZXRhaWxzEhMKAmlkGAEgASgJQge6SARyAhABEjMKBGNhcmQYAiABKAsyHS5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5DYXJkQga6SAPIAQEiiwEKBENhcmQSFgoFYnJhbmQYASABKAlCB7pIBHICEAESIwoFbGFzdDQYAiABKAlCFLpIEXIPMgpeWzAtOV17NH0kmAEEEiMKEGV4cGlyYXRpb25fbW9udGgYAyABKAVCCbpIBhoEGAwoARIhCg9leHBpcmF0aW9uX3llYXIYBCABKAVCCLpIBRoDKNAPKoMCChNQYXltZW50UHJvdmlkZXJUeXBlEiUKIVBBWU1FTlRfUFJPVklERVJfVFlQRV9VTlNQRUNJRklFRBAAEiAKHFBBWU1FTlRfUFJPVklERVJfVFlQRV9TVFJJUEUQARIpCiVQQVlNRU5UX1BST1ZJREVSX1RZUEVfQVdTX01BUktFVFBMQUNFEAISKQolUEFZTUVOVF9QUk9WSURFUl9UWVBFX0dDUF9NQVJLRVRQTEFDRRADEisKJ1BBWU1FTlRfUFJPVklERVJfVFlQRV9BWlVSRV9NQVJLRVRQTEFDRRAEEiAKHFBBWU1FTlRfUFJPVklERVJfVFlQRV9DVVNUT00QBSqlAQoTUGF5bWVudE1ldGhvZFN0YXR1cxIlCiFQQVlNRU5UX01FVEhPRF9TVEFUVVNfVU5TUEVDSUZJRUQQABIgChxQQVlNRU5UX01FVEhPRF9TVEFUVVNfQUNUSVZFEAESIgoeUEFZTUVOVF9NRVRIT0RfU1RBVFVTX0lOQUNUSVZFEAISIQodUEFZTUVOVF9NRVRIT0RfU1RBVFVTX1BFTkRJTkcQAyrhAgoXU3RyaXBlU2V0dXBJbnRlbnRTdGF0dXMSKgomU1RSSVBFX1NFVFVQX0lOVEVOVF9TVEFUVVNfVU5TUEVDSUZJRUQQABI2CjJTVFJJUEVfU0VUVVBfSU5URU5UX1NUQVRVU19SRVFVSVJFU19QQVlNRU5UX01FVEhPRBABEjQKMFNUUklQRV9TRVRVUF9JTlRFTlRfU1RBVFVTX1JFUVVJUkVTX0NPTkZJUk1BVElPThACEi4KKlNUUklQRV9TRVRVUF9JTlRFTlRfU1RBVFVTX1JFUVVJUkVTX0FDVElPThADEikKJVNUUklQRV9TRVRVUF9JTlRFTlRfU1RBVFVTX1BST0NFU1NJTkcQBBInCiNTVFJJUEVfU0VUVVBfSU5URU5UX1NUQVRVU19DQU5DRUxFRBAFEigKJFNUUklQRV9TRVRVUF9JTlRFTlRfU1RBVFVTX1NVQ0NFRURFRBAGMucNCg5QYXltZW50U2VydmljZRLYAQoSTGlzdFBheW1lbnRNZXRob2RzEjIucWRyYW50LmNsb3VkLnBheW1lbnQudjEuTGlzdFBheW1lbnRNZXRob2RzUmVxdWVzdBozLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLkxpc3RQYXltZW50TWV0aG9kc1Jlc3BvbnNlIlmKtRgYcmVhZDpwYXltZW50X2luZm9ybWF0aW9ugtPkkwI3EjUvYXBpL3BheW1lbnQvdjEvYWNjb3VudHMve2FjY291bnRfaWR9L3BheW1lbnQtbWV0aG9kcxLmAQoQR2V0UGF5bWVudE1ldGhvZBIwLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLkdldFBheW1lbnRNZXRob2RSZXF1ZXN0GjEucWRyYW50LmNsb3VkLnBheW1lbnQudjEuR2V0UGF5bWVudE1ldGhvZFJlc3BvbnNlIm2KtRgYcmVhZDpwYXltZW50X2luZm9ybWF0aW9ugtPkkwJLEkkvYXBpL3BheW1lbnQvdjEvYWNjb3VudHMve2FjY291bnRfaWR9L3BheW1lbnQtbWV0aG9kcy97cGF5bWVudF9tZXRob2RfaWR9EokCChNDcmVhdGVQYXltZW50TWV0aG9kEjMucWRyYW50LmNsb3VkLnBheW1lbnQudjEuQ3JlYXRlUGF5bWVudE1ldGhvZFJlcXVlc3QaNC5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5DcmVhdGVQYXltZW50TWV0aG9kUmVzcG9uc2UihgGKtRgZd3JpdGU6cGF5bWVudF9pbmZvcm1hdGlvbpK1GBlwYXltZW50X21ldGhvZC5hY2NvdW50X2lkgtPkkwJGIkQvYXBpL3BheW1lbnQvdjEvYWNjb3VudHMve3BheW1lbnRfbWV0aG9kLmFjY291bnRfaWR9L3BheW1lbnQtbWV0aG9kcxKgAgoTVXBkYXRlUGF5bWVudE1ldGhvZBIzLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLlVwZGF0ZVBheW1lbnRNZXRob2RSZXF1ZXN0GjQucWRyYW50LmNsb3VkLnBheW1lbnQudjEuVXBkYXRlUGF5bWVudE1ldGhvZFJlc3BvbnNlIp0BirUYGXdyaXRlOnBheW1lbnRfaW5mb3JtYXRpb26StRgZcGF5bWVudF9tZXRob2QuYWNjb3VudF9pZILT5JMCXToBKhpYL2FwaS9wYXltZW50L3YxL2FjY291bnRzL3twYXltZW50X21ldGhvZC5hY2NvdW50X2lkfS9wYXltZW50LW1ldGhvZHMve3BheW1lbnRfbWV0aG9kLmlkfRLxAQoTRGVsZXRlUGF5bWVudE1ldGhvZBIzLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLkRlbGV0ZVBheW1lbnRNZXRob2RSZXF1ZXN0GjQucWRyYW50LmNsb3VkLnBheW1lbnQudjEuRGVsZXRlUGF5bWVudE1ldGhvZFJlc3BvbnNlIm+KtRgaZGVsZXRlOnBheW1lbnRfaW5mb3JtYXRpb26C0+STAksqSS9hcGkvcGF5bWVudC92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vcGF5bWVudC1tZXRob2RzL3twYXltZW50X21ldGhvZF9pZH0S9wEKGEdldFN0cmlwZUNoZWNrb3V0U2Vzc2lvbhI4LnFkcmFudC5jbG91ZC5wYXltZW50LnYxLkdldFN0cmlwZUNoZWNrb3V0U2Vzc2lvblJlcXVlc3QaOS5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5HZXRTdHJpcGVDaGVja291dFNlc3Npb25SZXNwb25zZSJmirUYGXdyaXRlOnBheW1lbnRfaW5mb3JtYXRpb26C0+STAkMSQS9hcGkvcGF5bWVudC92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vc3RyaXBlLXNlc3Npb24ve3Nlc3Npb25faWR9EvMBChtDcmVhdGVTdHJpcGVDaGVja291dFNlc3Npb24SOy5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5DcmVhdGVTdHJpcGVDaGVja291dFNlc3Npb25SZXF1ZXN0GjwucWRyYW50LmNsb3VkLnBheW1lbnQudjEuQ3JlYXRlU3RyaXBlQ2hlY2tvdXRTZXNzaW9uUmVzcG9uc2UiWYq1GBl3cml0ZTpwYXltZW50X2luZm9ybWF0aW9ugtPkkwI2IjQvYXBpL3BheW1lbnQvdjEvYWNjb3VudHMve2FjY291bnRfaWR9L3N0cmlwZS1zZXNzaW9uQv4BChtjb20ucWRyYW50LmNsb3VkLnBheW1lbnQudjFCDFBheW1lbnRQcm90b1ABWlJnaXRodWIuY29tL3FkcmFudC9xZHJhbnQtY2xvdWQtcHVibGljLWFwaS9nZW4vZ28vcWRyYW50L2Nsb3VkL3BheW1lbnQvdjE7cGF5bWVudHYxogIDUUNQqgIXUWRyYW50LkNsb3VkLlBheW1lbnQuVjHKAhdRZHJhbnRcQ2xvdWRcUGF5bWVudFxWMeICI1FkcmFudFxDbG91ZFxQYXltZW50XFYxXEdQQk1ldGFkYXRh6gIaUWRyYW50OjpDbG91ZDo6UGF5bWVudDo6VjFiBnByb3RvMw", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common]);

/**
 * Describes the message qdrant.cloud.payment.v1.ListPaymentMethodsRequest.
 * Use `create(ListPaymentMethodsRequestSchema)` to create a new message.
 */
export const ListPaymentMethodsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 0);

/**
 * Describes the message qdrant.cloud.payment.v1.ListPaymentMethodsResponse.
 * Use `create(ListPaymentMethodsResponseSchema)` to create a new message.
 */
export const ListPaymentMethodsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 1);

/**
 * Describes the message qdrant.cloud.payment.v1.GetPaymentMethodRequest.
 * Use `create(GetPaymentMethodRequestSchema)` to create a new message.
 */
export const GetPaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 2);

/**
 * Describes the message qdrant.cloud.payment.v1.GetPaymentMethodResponse.
 * Use `create(GetPaymentMethodResponseSchema)` to create a new message.
 */
export const GetPaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 3);

/**
 * Describes the message qdrant.cloud.payment.v1.CreatePaymentMethodRequest.
 * Use `create(CreatePaymentMethodRequestSchema)` to create a new message.
 */
export const CreatePaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 4);

/**
 * Describes the message qdrant.cloud.payment.v1.CreatePaymentMethodResponse.
 * Use `create(CreatePaymentMethodResponseSchema)` to create a new message.
 */
export const CreatePaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 5);

/**
 * Describes the message qdrant.cloud.payment.v1.UpdatePaymentMethodRequest.
 * Use `create(UpdatePaymentMethodRequestSchema)` to create a new message.
 */
export const UpdatePaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 6);

/**
 * Describes the message qdrant.cloud.payment.v1.UpdatePaymentMethodResponse.
 * Use `create(UpdatePaymentMethodResponseSchema)` to create a new message.
 */
export const UpdatePaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 7);

/**
 * Describes the message qdrant.cloud.payment.v1.DeletePaymentMethodRequest.
 * Use `create(DeletePaymentMethodRequestSchema)` to create a new message.
 */
export const DeletePaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 8);

/**
 * Describes the message qdrant.cloud.payment.v1.DeletePaymentMethodResponse.
 * Use `create(DeletePaymentMethodResponseSchema)` to create a new message.
 */
export const DeletePaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 9);

/**
 * Describes the message qdrant.cloud.payment.v1.GetStripeCheckoutSessionRequest.
 * Use `create(GetStripeCheckoutSessionRequestSchema)` to create a new message.
 */
export const GetStripeCheckoutSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 10);

/**
 * Describes the message qdrant.cloud.payment.v1.GetStripeCheckoutSessionResponse.
 * Use `create(GetStripeCheckoutSessionResponseSchema)` to create a new message.
 */
export const GetStripeCheckoutSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 11);

/**
 * Describes the message qdrant.cloud.payment.v1.CreateStripeCheckoutSessionRequest.
 * Use `create(CreateStripeCheckoutSessionRequestSchema)` to create a new message.
 */
export const CreateStripeCheckoutSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 12);

/**
 * Describes the message qdrant.cloud.payment.v1.CreateStripeCheckoutSessionResponse.
 * Use `create(CreateStripeCheckoutSessionResponseSchema)` to create a new message.
 */
export const CreateStripeCheckoutSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 13);

/**
 * Describes the message qdrant.cloud.payment.v1.StripeCheckoutSession.
 * Use `create(StripeCheckoutSessionSchema)` to create a new message.
 */
export const StripeCheckoutSessionSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 14);

/**
 * Describes the message qdrant.cloud.payment.v1.PaymentMethod.
 * Use `create(PaymentMethodSchema)` to create a new message.
 */
export const PaymentMethodSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 15);

/**
 * Describes the message qdrant.cloud.payment.v1.BillingAddress.
 * Use `create(BillingAddressSchema)` to create a new message.
 */
export const BillingAddressSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 16);

/**
 * Describes the message qdrant.cloud.payment.v1.PaymentMethodDetails.
 * Use `create(PaymentMethodDetailsSchema)` to create a new message.
 */
export const PaymentMethodDetailsSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 17);

/**
 * Describes the message qdrant.cloud.payment.v1.Card.
 * Use `create(CardSchema)` to create a new message.
 */
export const CardSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 18);

/**
 * Describes the enum qdrant.cloud.payment.v1.PaymentProviderType.
 */
export const PaymentProviderTypeSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_payment_v1_payment, 0);

/**
 * PaymentProviderType defines the type of payment method.
 *
 * @generated from enum qdrant.cloud.payment.v1.PaymentProviderType
 */
export const PaymentProviderType = /*@__PURE__*/
  tsEnum(PaymentProviderTypeSchema);

/**
 * Describes the enum qdrant.cloud.payment.v1.PaymentMethodStatus.
 */
export const PaymentMethodStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_payment_v1_payment, 1);

/**
 * PaymentMethodStatus defines the status of the payment method.
 *
 * @generated from enum qdrant.cloud.payment.v1.PaymentMethodStatus
 */
export const PaymentMethodStatus = /*@__PURE__*/
  tsEnum(PaymentMethodStatusSchema);

/**
 * Describes the enum qdrant.cloud.payment.v1.StripeSetupIntentStatus.
 */
export const StripeSetupIntentStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_payment_v1_payment, 2);

/**
 * Represents the status of a SetupIntent in Stripe.
 *
 * @generated from enum qdrant.cloud.payment.v1.StripeSetupIntentStatus
 */
export const StripeSetupIntentStatus = /*@__PURE__*/
  tsEnum(StripeSetupIntentStatusSchema);

/**
 * PaymentService is the API used to manage payment settings.
 *
 * @generated from service qdrant.cloud.payment.v1.PaymentService
 */
export const PaymentService = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_payment_v1_payment, 0);

