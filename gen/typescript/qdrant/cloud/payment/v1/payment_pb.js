// @generated by protoc-gen-es v2.5.2 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/payment/v1/payment.proto (package qdrant.cloud.payment.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb.js";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb.js";

/**
 * Describes the file qdrant/cloud/payment/v1/payment.proto.
 */
export const file_qdrant_cloud_payment_v1_payment = /*@__PURE__*/
  fileDesc("CiVxZHJhbnQvY2xvdWQvcGF5bWVudC92MS9wYXltZW50LnByb3RvEhdxZHJhbnQuY2xvdWQucGF5bWVudC52MSI5ChlMaXN0UGF5bWVudE1ldGhvZHNSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBIlMKGkxpc3RQYXltZW50TWV0aG9kc1Jlc3BvbnNlEjUKBWl0ZW1zGAEgAygLMiYucWRyYW50LmNsb3VkLnBheW1lbnQudjEuUGF5bWVudE1ldGhvZCJcChdHZXRQYXltZW50TWV0aG9kUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIjChFwYXltZW50X21ldGhvZF9pZBgCIAEoCUIIukgFcgOwAQEiYgoYR2V0UGF5bWVudE1ldGhvZFJlc3BvbnNlEkYKDnBheW1lbnRfbWV0aG9kGAEgASgLMiYucWRyYW50LmNsb3VkLnBheW1lbnQudjEuUGF5bWVudE1ldGhvZEIGukgDyAEBImQKGkNyZWF0ZVBheW1lbnRNZXRob2RSZXF1ZXN0EkYKDnBheW1lbnRfbWV0aG9kGAEgASgLMiYucWRyYW50LmNsb3VkLnBheW1lbnQudjEuUGF5bWVudE1ldGhvZEIGukgDyAEBImUKG0NyZWF0ZVBheW1lbnRNZXRob2RSZXNwb25zZRJGCg5wYXltZW50X21ldGhvZBgBIAEoCzImLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLlBheW1lbnRNZXRob2RCBrpIA8gBASLYAQoaVXBkYXRlUGF5bWVudE1ldGhvZFJlcXVlc3QSRgoOcGF5bWVudF9tZXRob2QYAiABKAsyJi5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5QYXltZW50TWV0aG9kQga6SAPIAQE6crpIbxptCiB1cGRhdGVfcGF5bWVudF9tZXRob2QuaWRfcHJlc2VudBIrcGF5bWVudF9tZXRob2QuaWQgaXMgcmVxdWlyZWQgZm9yIGFuIHVwZGF0ZRocdGhpcy5wYXltZW50X21ldGhvZC5pZCAhPSAnJyJlChtVcGRhdGVQYXltZW50TWV0aG9kUmVzcG9uc2USRgoOcGF5bWVudF9tZXRob2QYASABKAsyJi5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5QYXltZW50TWV0aG9kQga6SAPIAQEiXwoaRGVsZXRlUGF5bWVudE1ldGhvZFJlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQESIwoRcGF5bWVudF9tZXRob2RfaWQYAiABKAlCCLpIBXIDsAEBIh0KG0RlbGV0ZVBheW1lbnRNZXRob2RSZXNwb25zZSJTCh9HZXRTdHJpcGVDaGVja291dFNlc3Npb25SZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhIKCnNlc3Npb25faWQYAiABKAkiagogR2V0U3RyaXBlQ2hlY2tvdXRTZXNzaW9uUmVzcG9uc2USRgoOc3RyaXBlX3Nlc3Npb24YASABKAsyLi5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5TdHJpcGVDaGVja291dFNlc3Npb24iWAoiQ3JlYXRlU3RyaXBlQ2hlY2tvdXRTZXNzaW9uUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIUCgxyZWRpcmVjdF91cmwYAiABKAkibQojQ3JlYXRlU3RyaXBlQ2hlY2tvdXRTZXNzaW9uUmVzcG9uc2USRgoOc3RyaXBlX3Nlc3Npb24YASABKAsyLi5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5TdHJpcGVDaGVja291dFNlc3Npb24i3AEKFVN0cmlwZUNoZWNrb3V0U2Vzc2lvbhIKCgJpZBgBIAEoCRIQCgN1cmwYAiABKAlIAIgBARIQCghjdXN0b21lchgDIAEoCRIXCg9zZXR1cF9pbnRlbnRfaWQYBCABKAkSTQoTc2V0dXBfaW50ZW50X3N0YXR1cxgFIAEoDjIwLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLlN0cmlwZVNldHVwSW50ZW50U3RhdHVzEiMKG3NldHVwX2ludGVudF9wYXltZW50X21ldGhvZBgGIAEoCUIGCgRfdXJsIrIGCg1QYXltZW50TWV0aG9kEgoKAmlkGAEgASgJEhwKCmFjY291bnRfaWQYAiABKAlCCLpIBXIDsAEBEkQKBHR5cGUYAyABKA4yLC5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5QYXltZW50UHJvdmlkZXJUeXBlQgi6SAWCAQIgABIgChNwYXltZW50X3Byb3ZpZGVyX2lkGAQgASgJSACIAQESUgoWcGF5bWVudF9tZXRob2RfZGV0YWlscxgFIAEoCzItLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLlBheW1lbnRNZXRob2REZXRhaWxzSAGIAQESRQoPYmlsbGluZ19hZGRyZXNzGAYgASgLMicucWRyYW50LmNsb3VkLnBheW1lbnQudjEuQmlsbGluZ0FkZHJlc3NIAogBARIuCgpjcmVhdGVkX2F0GAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI0ChBsYXN0X21vZGlmaWVkX2F0GAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIcCgZ0YXhfaWQYCSABKAlCB7pIBHICEAFIA4gBARISCgppc19kZWZhdWx0GAogASgIEksKBnN0YXR1cxgLIAEoDjIsLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLlBheW1lbnRNZXRob2RTdGF0dXNCCLpIBYIBAhABSASIAQE6sQG6SK0BGqoBChFwYXltZW50X21ldGhvZC5pZBIadmFsdWUgbXVzdCBiZSBhIHZhbGlkIFVVSUQaeXRoaXMuaWQubWF0Y2hlcygnXlswLTlhLWZBLUZdezh9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezEyfSQnKSB8fCAhaGFzKHRoaXMuY3JlYXRlZF9hdClCFgoUX3BheW1lbnRfcHJvdmlkZXJfaWRCGQoXX3BheW1lbnRfbWV0aG9kX2RldGFpbHNCEgoQX2JpbGxpbmdfYWRkcmVzc0IJCgdfdGF4X2lkQgkKB19zdGF0dXMixwIKDkJpbGxpbmdBZGRyZXNzEhUKBG5hbWUYASABKAlCB7pIBHICEAESFgoFbGluZTEYAiABKAlCB7pIBHICEAESGwoFbGluZTIYAyABKAlCB7pIBHICEAFIAIgBARIhCgtwb3N0YWxfY29kZRgEIAEoCUIHukgEcgIQAUgBiAEBEhUKBGNpdHkYBSABKAlCB7pIBHICEAESFgoFc3RhdGUYBiABKAlCB7pIBHICEAESGAoHY291bnRyeRgHIAEoCUIHukgEcgIQARIiChFjb3VudHJ5X2Zvcm1hdHRlZBgIIAEoCUIHukgEcgIQARIgCg9zdGF0ZV9mb3JtYXR0ZWQYCSABKAlCB7pIBHICEAESHQoVdGF4X3N1cHBvcnRlZF9jb3VudHJ5GAogASgIQggKBl9saW5lMkIOCgxfcG9zdGFsX2NvZGUiYAoUUGF5bWVudE1ldGhvZERldGFpbHMSEwoCaWQYASABKAlCB7pIBHICEAESMwoEY2FyZBgCIAEoCzIdLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLkNhcmRCBrpIA8gBASKLAQoEQ2FyZBIWCgVicmFuZBgBIAEoCUIHukgEcgIQARIjCgVsYXN0NBgCIAEoCUIUukgRcg8yCl5bMC05XXs0fSSYAQQSIwoQZXhwaXJhdGlvbl9tb250aBgDIAEoBUIJukgGGgQYDCgBEiEKD2V4cGlyYXRpb25feWVhchgEIAEoBUIIukgFGgMo0A8qgwIKE1BheW1lbnRQcm92aWRlclR5cGUSJQohUEFZTUVOVF9QUk9WSURFUl9UWVBFX1VOU1BFQ0lGSUVEEAASIAocUEFZTUVOVF9QUk9WSURFUl9UWVBFX1NUUklQRRABEikKJVBBWU1FTlRfUFJPVklERVJfVFlQRV9BV1NfTUFSS0VUUExBQ0UQAhIpCiVQQVlNRU5UX1BST1ZJREVSX1RZUEVfR0NQX01BUktFVFBMQUNFEAMSKwonUEFZTUVOVF9QUk9WSURFUl9UWVBFX0FaVVJFX01BUktFVFBMQUNFEAQSIAocUEFZTUVOVF9QUk9WSURFUl9UWVBFX0NVU1RPTRAFKqUBChNQYXltZW50TWV0aG9kU3RhdHVzEiUKIVBBWU1FTlRfTUVUSE9EX1NUQVRVU19VTlNQRUNJRklFRBAAEiAKHFBBWU1FTlRfTUVUSE9EX1NUQVRVU19BQ1RJVkUQARIiCh5QQVlNRU5UX01FVEhPRF9TVEFUVVNfSU5BQ1RJVkUQAhIhCh1QQVlNRU5UX01FVEhPRF9TVEFUVVNfUEVORElORxADKuECChdTdHJpcGVTZXR1cEludGVudFN0YXR1cxIqCiZTVFJJUEVfU0VUVVBfSU5URU5UX1NUQVRVU19VTlNQRUNJRklFRBAAEjYKMlNUUklQRV9TRVRVUF9JTlRFTlRfU1RBVFVTX1JFUVVJUkVTX1BBWU1FTlRfTUVUSE9EEAESNAowU1RSSVBFX1NFVFVQX0lOVEVOVF9TVEFUVVNfUkVRVUlSRVNfQ09ORklSTUFUSU9OEAISLgoqU1RSSVBFX1NFVFVQX0lOVEVOVF9TVEFUVVNfUkVRVUlSRVNfQUNUSU9OEAMSKQolU1RSSVBFX1NFVFVQX0lOVEVOVF9TVEFUVVNfUFJPQ0VTU0lORxAEEicKI1NUUklQRV9TRVRVUF9JTlRFTlRfU1RBVFVTX0NBTkNFTEVEEAUSKAokU1RSSVBFX1NFVFVQX0lOVEVOVF9TVEFUVVNfU1VDQ0VFREVEEAYy5w0KDlBheW1lbnRTZXJ2aWNlEtgBChJMaXN0UGF5bWVudE1ldGhvZHMSMi5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5MaXN0UGF5bWVudE1ldGhvZHNSZXF1ZXN0GjMucWRyYW50LmNsb3VkLnBheW1lbnQudjEuTGlzdFBheW1lbnRNZXRob2RzUmVzcG9uc2UiWYq1GBhyZWFkOnBheW1lbnRfaW5mb3JtYXRpb26C0+STAjcSNS9hcGkvcGF5bWVudC92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vcGF5bWVudC1tZXRob2RzEuYBChBHZXRQYXltZW50TWV0aG9kEjAucWRyYW50LmNsb3VkLnBheW1lbnQudjEuR2V0UGF5bWVudE1ldGhvZFJlcXVlc3QaMS5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5HZXRQYXltZW50TWV0aG9kUmVzcG9uc2UibYq1GBhyZWFkOnBheW1lbnRfaW5mb3JtYXRpb26C0+STAksSSS9hcGkvcGF5bWVudC92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vcGF5bWVudC1tZXRob2RzL3twYXltZW50X21ldGhvZF9pZH0SiQIKE0NyZWF0ZVBheW1lbnRNZXRob2QSMy5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5DcmVhdGVQYXltZW50TWV0aG9kUmVxdWVzdBo0LnFkcmFudC5jbG91ZC5wYXltZW50LnYxLkNyZWF0ZVBheW1lbnRNZXRob2RSZXNwb25zZSKGAYq1GBl3cml0ZTpwYXltZW50X2luZm9ybWF0aW9ukrUYGXBheW1lbnRfbWV0aG9kLmFjY291bnRfaWSC0+STAkYiRC9hcGkvcGF5bWVudC92MS9hY2NvdW50cy97cGF5bWVudF9tZXRob2QuYWNjb3VudF9pZH0vcGF5bWVudC1tZXRob2RzEqACChNVcGRhdGVQYXltZW50TWV0aG9kEjMucWRyYW50LmNsb3VkLnBheW1lbnQudjEuVXBkYXRlUGF5bWVudE1ldGhvZFJlcXVlc3QaNC5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5VcGRhdGVQYXltZW50TWV0aG9kUmVzcG9uc2UinQGKtRgZd3JpdGU6cGF5bWVudF9pbmZvcm1hdGlvbpK1GBlwYXltZW50X21ldGhvZC5hY2NvdW50X2lkgtPkkwJdOgEqGlgvYXBpL3BheW1lbnQvdjEvYWNjb3VudHMve3BheW1lbnRfbWV0aG9kLmFjY291bnRfaWR9L3BheW1lbnQtbWV0aG9kcy97cGF5bWVudF9tZXRob2QuaWR9EvEBChNEZWxldGVQYXltZW50TWV0aG9kEjMucWRyYW50LmNsb3VkLnBheW1lbnQudjEuRGVsZXRlUGF5bWVudE1ldGhvZFJlcXVlc3QaNC5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5EZWxldGVQYXltZW50TWV0aG9kUmVzcG9uc2Uib4q1GBpkZWxldGU6cGF5bWVudF9pbmZvcm1hdGlvboLT5JMCSypJL2FwaS9wYXltZW50L3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9wYXltZW50LW1ldGhvZHMve3BheW1lbnRfbWV0aG9kX2lkfRL3AQoYR2V0U3RyaXBlQ2hlY2tvdXRTZXNzaW9uEjgucWRyYW50LmNsb3VkLnBheW1lbnQudjEuR2V0U3RyaXBlQ2hlY2tvdXRTZXNzaW9uUmVxdWVzdBo5LnFkcmFudC5jbG91ZC5wYXltZW50LnYxLkdldFN0cmlwZUNoZWNrb3V0U2Vzc2lvblJlc3BvbnNlImaKtRgZd3JpdGU6cGF5bWVudF9pbmZvcm1hdGlvboLT5JMCQxJBL2FwaS9wYXltZW50L3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9zdHJpcGUtc2Vzc2lvbi97c2Vzc2lvbl9pZH0S8wEKG0NyZWF0ZVN0cmlwZUNoZWNrb3V0U2Vzc2lvbhI7LnFkcmFudC5jbG91ZC5wYXltZW50LnYxLkNyZWF0ZVN0cmlwZUNoZWNrb3V0U2Vzc2lvblJlcXVlc3QaPC5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5DcmVhdGVTdHJpcGVDaGVja291dFNlc3Npb25SZXNwb25zZSJZirUYGXdyaXRlOnBheW1lbnRfaW5mb3JtYXRpb26C0+STAjYiNC9hcGkvcGF5bWVudC92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vc3RyaXBlLXNlc3Npb25C/gEKG2NvbS5xZHJhbnQuY2xvdWQucGF5bWVudC52MUIMUGF5bWVudFByb3RvUAFaUmdpdGh1Yi5jb20vcWRyYW50L3FkcmFudC1jbG91ZC1wdWJsaWMtYXBpL2dlbi9nby9xZHJhbnQvY2xvdWQvcGF5bWVudC92MTtwYXltZW50djGiAgNRQ1CqAhdRZHJhbnQuQ2xvdWQuUGF5bWVudC5WMcoCF1FkcmFudFxDbG91ZFxQYXltZW50XFYx4gIjUWRyYW50XENsb3VkXFBheW1lbnRcVjFcR1BCTWV0YWRhdGHqAhpRZHJhbnQ6OkNsb3VkOjpQYXltZW50OjpWMWIGcHJvdG8z", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common]);

/**
 * Describes the message qdrant.cloud.payment.v1.ListPaymentMethodsRequest.
 * Use `create(ListPaymentMethodsRequestSchema)` to create a new message.
 */
export const ListPaymentMethodsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 0);

/**
 * Describes the message qdrant.cloud.payment.v1.ListPaymentMethodsResponse.
 * Use `create(ListPaymentMethodsResponseSchema)` to create a new message.
 */
export const ListPaymentMethodsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 1);

/**
 * Describes the message qdrant.cloud.payment.v1.GetPaymentMethodRequest.
 * Use `create(GetPaymentMethodRequestSchema)` to create a new message.
 */
export const GetPaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 2);

/**
 * Describes the message qdrant.cloud.payment.v1.GetPaymentMethodResponse.
 * Use `create(GetPaymentMethodResponseSchema)` to create a new message.
 */
export const GetPaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 3);

/**
 * Describes the message qdrant.cloud.payment.v1.CreatePaymentMethodRequest.
 * Use `create(CreatePaymentMethodRequestSchema)` to create a new message.
 */
export const CreatePaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 4);

/**
 * Describes the message qdrant.cloud.payment.v1.CreatePaymentMethodResponse.
 * Use `create(CreatePaymentMethodResponseSchema)` to create a new message.
 */
export const CreatePaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 5);

/**
 * Describes the message qdrant.cloud.payment.v1.UpdatePaymentMethodRequest.
 * Use `create(UpdatePaymentMethodRequestSchema)` to create a new message.
 */
export const UpdatePaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 6);

/**
 * Describes the message qdrant.cloud.payment.v1.UpdatePaymentMethodResponse.
 * Use `create(UpdatePaymentMethodResponseSchema)` to create a new message.
 */
export const UpdatePaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 7);

/**
 * Describes the message qdrant.cloud.payment.v1.DeletePaymentMethodRequest.
 * Use `create(DeletePaymentMethodRequestSchema)` to create a new message.
 */
export const DeletePaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 8);

/**
 * Describes the message qdrant.cloud.payment.v1.DeletePaymentMethodResponse.
 * Use `create(DeletePaymentMethodResponseSchema)` to create a new message.
 */
export const DeletePaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 9);

/**
 * Describes the message qdrant.cloud.payment.v1.GetStripeCheckoutSessionRequest.
 * Use `create(GetStripeCheckoutSessionRequestSchema)` to create a new message.
 */
export const GetStripeCheckoutSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 10);

/**
 * Describes the message qdrant.cloud.payment.v1.GetStripeCheckoutSessionResponse.
 * Use `create(GetStripeCheckoutSessionResponseSchema)` to create a new message.
 */
export const GetStripeCheckoutSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 11);

/**
 * Describes the message qdrant.cloud.payment.v1.CreateStripeCheckoutSessionRequest.
 * Use `create(CreateStripeCheckoutSessionRequestSchema)` to create a new message.
 */
export const CreateStripeCheckoutSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 12);

/**
 * Describes the message qdrant.cloud.payment.v1.CreateStripeCheckoutSessionResponse.
 * Use `create(CreateStripeCheckoutSessionResponseSchema)` to create a new message.
 */
export const CreateStripeCheckoutSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 13);

/**
 * Describes the message qdrant.cloud.payment.v1.StripeCheckoutSession.
 * Use `create(StripeCheckoutSessionSchema)` to create a new message.
 */
export const StripeCheckoutSessionSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 14);

/**
 * Describes the message qdrant.cloud.payment.v1.PaymentMethod.
 * Use `create(PaymentMethodSchema)` to create a new message.
 */
export const PaymentMethodSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 15);

/**
 * Describes the message qdrant.cloud.payment.v1.BillingAddress.
 * Use `create(BillingAddressSchema)` to create a new message.
 */
export const BillingAddressSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 16);

/**
 * Describes the message qdrant.cloud.payment.v1.PaymentMethodDetails.
 * Use `create(PaymentMethodDetailsSchema)` to create a new message.
 */
export const PaymentMethodDetailsSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 17);

/**
 * Describes the message qdrant.cloud.payment.v1.Card.
 * Use `create(CardSchema)` to create a new message.
 */
export const CardSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 18);

/**
 * Describes the enum qdrant.cloud.payment.v1.PaymentProviderType.
 */
export const PaymentProviderTypeSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_payment_v1_payment, 0);

/**
 * PaymentProviderType defines the type of payment method.
 *
 * @generated from enum qdrant.cloud.payment.v1.PaymentProviderType
 */
export const PaymentProviderType = /*@__PURE__*/
  tsEnum(PaymentProviderTypeSchema);

/**
 * Describes the enum qdrant.cloud.payment.v1.PaymentMethodStatus.
 */
export const PaymentMethodStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_payment_v1_payment, 1);

/**
 * PaymentMethodStatus defines the status of the payment method.
 *
 * @generated from enum qdrant.cloud.payment.v1.PaymentMethodStatus
 */
export const PaymentMethodStatus = /*@__PURE__*/
  tsEnum(PaymentMethodStatusSchema);

/**
 * Describes the enum qdrant.cloud.payment.v1.StripeSetupIntentStatus.
 */
export const StripeSetupIntentStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_payment_v1_payment, 2);

/**
 * Represents the status of a SetupIntent in Stripe.
 *
 * @generated from enum qdrant.cloud.payment.v1.StripeSetupIntentStatus
 */
export const StripeSetupIntentStatus = /*@__PURE__*/
  tsEnum(StripeSetupIntentStatusSchema);

/**
 * PaymentService is the API used to manage payment settings.
 *
 * @generated from service qdrant.cloud.payment.v1.PaymentService
 */
export const PaymentService = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_payment_v1_payment, 0);

