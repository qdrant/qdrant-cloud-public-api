// @generated by protoc-gen-es v2.5.2 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/payment/v1/payment.proto (package qdrant.cloud.payment.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb.js";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb.js";

/**
 * Describes the file qdrant/cloud/payment/v1/payment.proto.
 */
export const file_qdrant_cloud_payment_v1_payment = /*@__PURE__*/
  fileDesc("CiVxZHJhbnQvY2xvdWQvcGF5bWVudC92MS9wYXltZW50LnByb3RvEhdxZHJhbnQuY2xvdWQucGF5bWVudC52MSI5ChlMaXN0UGF5bWVudE1ldGhvZHNSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBIlMKGkxpc3RQYXltZW50TWV0aG9kc1Jlc3BvbnNlEjUKBWl0ZW1zGAEgAygLMiYucWRyYW50LmNsb3VkLnBheW1lbnQudjEuUGF5bWVudE1ldGhvZCJcChdHZXRQYXltZW50TWV0aG9kUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIjChFwYXltZW50X21ldGhvZF9pZBgCIAEoCUIIukgFcgOwAQEiYgoYR2V0UGF5bWVudE1ldGhvZFJlc3BvbnNlEkYKDnBheW1lbnRfbWV0aG9kGAEgASgLMiYucWRyYW50LmNsb3VkLnBheW1lbnQudjEuUGF5bWVudE1ldGhvZEIGukgDyAEBImQKGkNyZWF0ZVBheW1lbnRNZXRob2RSZXF1ZXN0EkYKDnBheW1lbnRfbWV0aG9kGAEgASgLMiYucWRyYW50LmNsb3VkLnBheW1lbnQudjEuUGF5bWVudE1ldGhvZEIGukgDyAEBImUKG0NyZWF0ZVBheW1lbnRNZXRob2RSZXNwb25zZRJGCg5wYXltZW50X21ldGhvZBgBIAEoCzImLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLlBheW1lbnRNZXRob2RCBrpIA8gBASLYAQoaVXBkYXRlUGF5bWVudE1ldGhvZFJlcXVlc3QSRgoOcGF5bWVudF9tZXRob2QYAiABKAsyJi5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5QYXltZW50TWV0aG9kQga6SAPIAQE6crpIbxptCiB1cGRhdGVfcGF5bWVudF9tZXRob2QuaWRfcHJlc2VudBIrcGF5bWVudF9tZXRob2QuaWQgaXMgcmVxdWlyZWQgZm9yIGFuIHVwZGF0ZRocdGhpcy5wYXltZW50X21ldGhvZC5pZCAhPSAnJyJlChtVcGRhdGVQYXltZW50TWV0aG9kUmVzcG9uc2USRgoOcGF5bWVudF9tZXRob2QYASABKAsyJi5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5QYXltZW50TWV0aG9kQga6SAPIAQEiXwoaRGVsZXRlUGF5bWVudE1ldGhvZFJlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQESIwoRcGF5bWVudF9tZXRob2RfaWQYAiABKAlCCLpIBXIDsAEBIh0KG0RlbGV0ZVBheW1lbnRNZXRob2RSZXNwb25zZSJTCh9HZXRTdHJpcGVDaGVja291dFNlc3Npb25SZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhIKCnNlc3Npb25faWQYAiABKAkiagogR2V0U3RyaXBlQ2hlY2tvdXRTZXNzaW9uUmVzcG9uc2USRgoOc3RyaXBlX3Nlc3Npb24YASABKAsyLi5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5TdHJpcGVDaGVja291dFNlc3Npb24iWAoiQ3JlYXRlU3RyaXBlQ2hlY2tvdXRTZXNzaW9uUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIUCgxyZWRpcmVjdF91cmwYAiABKAkibQojQ3JlYXRlU3RyaXBlQ2hlY2tvdXRTZXNzaW9uUmVzcG9uc2USRgoOc3RyaXBlX3Nlc3Npb24YASABKAsyLi5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5TdHJpcGVDaGVja291dFNlc3Npb24i3AEKFVN0cmlwZUNoZWNrb3V0U2Vzc2lvbhIKCgJpZBgBIAEoCRIQCgN1cmwYAiABKAlIAIgBARIQCghjdXN0b21lchgDIAEoCRIXCg9zZXR1cF9pbnRlbnRfaWQYBCABKAkSTQoTc2V0dXBfaW50ZW50X3N0YXR1cxgFIAEoDjIwLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLlN0cmlwZVNldHVwSW50ZW50U3RhdHVzEiMKG3NldHVwX2ludGVudF9wYXltZW50X21ldGhvZBgGIAEoCUIGCgRfdXJsIrQGCg1QYXltZW50TWV0aG9kEgoKAmlkGAEgASgJEhwKCmFjY291bnRfaWQYAiABKAlCCLpIBXIDsAEBEkYKBHR5cGUYAyABKA4yLC5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5QYXltZW50UHJvdmlkZXJUeXBlQgq6SAeCAQQQASAAEiAKE3BheW1lbnRfcHJvdmlkZXJfaWQYBCABKAlIAIgBARJSChZwYXltZW50X21ldGhvZF9kZXRhaWxzGAUgASgLMi0ucWRyYW50LmNsb3VkLnBheW1lbnQudjEuUGF5bWVudE1ldGhvZERldGFpbHNIAYgBARJFCg9iaWxsaW5nX2FkZHJlc3MYBiABKAsyJy5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5CaWxsaW5nQWRkcmVzc0gCiAEBEi4KCmNyZWF0ZWRfYXQYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjQKEGxhc3RfbW9kaWZpZWRfYXQYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhwKBnRheF9pZBgJIAEoCUIHukgEcgIQAUgDiAEBEhIKCmlzX2RlZmF1bHQYCiABKAgSSwoGc3RhdHVzGAsgASgOMiwucWRyYW50LmNsb3VkLnBheW1lbnQudjEuUGF5bWVudE1ldGhvZFN0YXR1c0IIukgFggECEAFIBIgBATqxAbpIrQEaqgEKEXBheW1lbnRfbWV0aG9kLmlkEhp2YWx1ZSBtdXN0IGJlIGEgdmFsaWQgVVVJRBp5dGhpcy5pZC5tYXRjaGVzKCdeWzAtOWEtZkEtRl17OH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17MTJ9JCcpIHx8ICFoYXModGhpcy5jcmVhdGVkX2F0KUIWChRfcGF5bWVudF9wcm92aWRlcl9pZEIZChdfcGF5bWVudF9tZXRob2RfZGV0YWlsc0ISChBfYmlsbGluZ19hZGRyZXNzQgkKB190YXhfaWRCCQoHX3N0YXR1cyLHAgoOQmlsbGluZ0FkZHJlc3MSFQoEbmFtZRgBIAEoCUIHukgEcgIQARIWCgVsaW5lMRgCIAEoCUIHukgEcgIQARIbCgVsaW5lMhgDIAEoCUIHukgEcgIQAUgAiAEBEiEKC3Bvc3RhbF9jb2RlGAQgASgJQge6SARyAhABSAGIAQESFQoEY2l0eRgFIAEoCUIHukgEcgIQARIWCgVzdGF0ZRgGIAEoCUIHukgEcgIQARIYCgdjb3VudHJ5GAcgASgJQge6SARyAhABEiIKEWNvdW50cnlfZm9ybWF0dGVkGAggASgJQge6SARyAhABEiAKD3N0YXRlX2Zvcm1hdHRlZBgJIAEoCUIHukgEcgIQARIdChV0YXhfc3VwcG9ydGVkX2NvdW50cnkYCiABKAhCCAoGX2xpbmUyQg4KDF9wb3N0YWxfY29kZSJgChRQYXltZW50TWV0aG9kRGV0YWlscxITCgJpZBgBIAEoCUIHukgEcgIQARIzCgRjYXJkGAIgASgLMh0ucWRyYW50LmNsb3VkLnBheW1lbnQudjEuQ2FyZEIGukgDyAEBIosBCgRDYXJkEhYKBWJyYW5kGAEgASgJQge6SARyAhABEiMKBWxhc3Q0GAIgASgJQhS6SBFyDzIKXlswLTldezR9JJgBBBIjChBleHBpcmF0aW9uX21vbnRoGAMgASgFQgm6SAYaBBgMKAESIQoPZXhwaXJhdGlvbl95ZWFyGAQgASgFQgi6SAUaAyjQDyqDAgoTUGF5bWVudFByb3ZpZGVyVHlwZRIlCiFQQVlNRU5UX1BST1ZJREVSX1RZUEVfVU5TUEVDSUZJRUQQABIgChxQQVlNRU5UX1BST1ZJREVSX1RZUEVfU1RSSVBFEAESKQolUEFZTUVOVF9QUk9WSURFUl9UWVBFX0FXU19NQVJLRVRQTEFDRRACEikKJVBBWU1FTlRfUFJPVklERVJfVFlQRV9HQ1BfTUFSS0VUUExBQ0UQAxIrCidQQVlNRU5UX1BST1ZJREVSX1RZUEVfQVpVUkVfTUFSS0VUUExBQ0UQBBIgChxQQVlNRU5UX1BST1ZJREVSX1RZUEVfQ1VTVE9NEAUqpQEKE1BheW1lbnRNZXRob2RTdGF0dXMSJQohUEFZTUVOVF9NRVRIT0RfU1RBVFVTX1VOU1BFQ0lGSUVEEAASIAocUEFZTUVOVF9NRVRIT0RfU1RBVFVTX0FDVElWRRABEiIKHlBBWU1FTlRfTUVUSE9EX1NUQVRVU19JTkFDVElWRRACEiEKHVBBWU1FTlRfTUVUSE9EX1NUQVRVU19QRU5ESU5HEAMq4QIKF1N0cmlwZVNldHVwSW50ZW50U3RhdHVzEioKJlNUUklQRV9TRVRVUF9JTlRFTlRfU1RBVFVTX1VOU1BFQ0lGSUVEEAASNgoyU1RSSVBFX1NFVFVQX0lOVEVOVF9TVEFUVVNfUkVRVUlSRVNfUEFZTUVOVF9NRVRIT0QQARI0CjBTVFJJUEVfU0VUVVBfSU5URU5UX1NUQVRVU19SRVFVSVJFU19DT05GSVJNQVRJT04QAhIuCipTVFJJUEVfU0VUVVBfSU5URU5UX1NUQVRVU19SRVFVSVJFU19BQ1RJT04QAxIpCiVTVFJJUEVfU0VUVVBfSU5URU5UX1NUQVRVU19QUk9DRVNTSU5HEAQSJwojU1RSSVBFX1NFVFVQX0lOVEVOVF9TVEFUVVNfQ0FOQ0VMRUQQBRIoCiRTVFJJUEVfU0VUVVBfSU5URU5UX1NUQVRVU19TVUNDRUVERUQQBjLnDQoOUGF5bWVudFNlcnZpY2US2AEKEkxpc3RQYXltZW50TWV0aG9kcxIyLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLkxpc3RQYXltZW50TWV0aG9kc1JlcXVlc3QaMy5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5MaXN0UGF5bWVudE1ldGhvZHNSZXNwb25zZSJZirUYGHJlYWQ6cGF5bWVudF9pbmZvcm1hdGlvboLT5JMCNxI1L2FwaS9wYXltZW50L3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9wYXltZW50LW1ldGhvZHMS5gEKEEdldFBheW1lbnRNZXRob2QSMC5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5HZXRQYXltZW50TWV0aG9kUmVxdWVzdBoxLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLkdldFBheW1lbnRNZXRob2RSZXNwb25zZSJtirUYGHJlYWQ6cGF5bWVudF9pbmZvcm1hdGlvboLT5JMCSxJJL2FwaS9wYXltZW50L3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9wYXltZW50LW1ldGhvZHMve3BheW1lbnRfbWV0aG9kX2lkfRKJAgoTQ3JlYXRlUGF5bWVudE1ldGhvZBIzLnFkcmFudC5jbG91ZC5wYXltZW50LnYxLkNyZWF0ZVBheW1lbnRNZXRob2RSZXF1ZXN0GjQucWRyYW50LmNsb3VkLnBheW1lbnQudjEuQ3JlYXRlUGF5bWVudE1ldGhvZFJlc3BvbnNlIoYBirUYGXdyaXRlOnBheW1lbnRfaW5mb3JtYXRpb26StRgZcGF5bWVudF9tZXRob2QuYWNjb3VudF9pZILT5JMCRiJEL2FwaS9wYXltZW50L3YxL2FjY291bnRzL3twYXltZW50X21ldGhvZC5hY2NvdW50X2lkfS9wYXltZW50LW1ldGhvZHMSoAIKE1VwZGF0ZVBheW1lbnRNZXRob2QSMy5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5VcGRhdGVQYXltZW50TWV0aG9kUmVxdWVzdBo0LnFkcmFudC5jbG91ZC5wYXltZW50LnYxLlVwZGF0ZVBheW1lbnRNZXRob2RSZXNwb25zZSKdAYq1GBl3cml0ZTpwYXltZW50X2luZm9ybWF0aW9ukrUYGXBheW1lbnRfbWV0aG9kLmFjY291bnRfaWSC0+STAl06ASoaWC9hcGkvcGF5bWVudC92MS9hY2NvdW50cy97cGF5bWVudF9tZXRob2QuYWNjb3VudF9pZH0vcGF5bWVudC1tZXRob2RzL3twYXltZW50X21ldGhvZC5pZH0S8QEKE0RlbGV0ZVBheW1lbnRNZXRob2QSMy5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5EZWxldGVQYXltZW50TWV0aG9kUmVxdWVzdBo0LnFkcmFudC5jbG91ZC5wYXltZW50LnYxLkRlbGV0ZVBheW1lbnRNZXRob2RSZXNwb25zZSJvirUYGmRlbGV0ZTpwYXltZW50X2luZm9ybWF0aW9ugtPkkwJLKkkvYXBpL3BheW1lbnQvdjEvYWNjb3VudHMve2FjY291bnRfaWR9L3BheW1lbnQtbWV0aG9kcy97cGF5bWVudF9tZXRob2RfaWR9EvcBChhHZXRTdHJpcGVDaGVja291dFNlc3Npb24SOC5xZHJhbnQuY2xvdWQucGF5bWVudC52MS5HZXRTdHJpcGVDaGVja291dFNlc3Npb25SZXF1ZXN0GjkucWRyYW50LmNsb3VkLnBheW1lbnQudjEuR2V0U3RyaXBlQ2hlY2tvdXRTZXNzaW9uUmVzcG9uc2UiZoq1GBl3cml0ZTpwYXltZW50X2luZm9ybWF0aW9ugtPkkwJDEkEvYXBpL3BheW1lbnQvdjEvYWNjb3VudHMve2FjY291bnRfaWR9L3N0cmlwZS1zZXNzaW9uL3tzZXNzaW9uX2lkfRLzAQobQ3JlYXRlU3RyaXBlQ2hlY2tvdXRTZXNzaW9uEjsucWRyYW50LmNsb3VkLnBheW1lbnQudjEuQ3JlYXRlU3RyaXBlQ2hlY2tvdXRTZXNzaW9uUmVxdWVzdBo8LnFkcmFudC5jbG91ZC5wYXltZW50LnYxLkNyZWF0ZVN0cmlwZUNoZWNrb3V0U2Vzc2lvblJlc3BvbnNlIlmKtRgZd3JpdGU6cGF5bWVudF9pbmZvcm1hdGlvboLT5JMCNiI0L2FwaS9wYXltZW50L3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9zdHJpcGUtc2Vzc2lvbkL+AQobY29tLnFkcmFudC5jbG91ZC5wYXltZW50LnYxQgxQYXltZW50UHJvdG9QAVpSZ2l0aHViLmNvbS9xZHJhbnQvcWRyYW50LWNsb3VkLXB1YmxpYy1hcGkvZ2VuL2dvL3FkcmFudC9jbG91ZC9wYXltZW50L3YxO3BheW1lbnR2MaICA1FDUKoCF1FkcmFudC5DbG91ZC5QYXltZW50LlYxygIXUWRyYW50XENsb3VkXFBheW1lbnRcVjHiAiNRZHJhbnRcQ2xvdWRcUGF5bWVudFxWMVxHUEJNZXRhZGF0YeoCGlFkcmFudDo6Q2xvdWQ6OlBheW1lbnQ6OlYxYgZwcm90bzM", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common]);

/**
 * Describes the message qdrant.cloud.payment.v1.ListPaymentMethodsRequest.
 * Use `create(ListPaymentMethodsRequestSchema)` to create a new message.
 */
export const ListPaymentMethodsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 0);

/**
 * Describes the message qdrant.cloud.payment.v1.ListPaymentMethodsResponse.
 * Use `create(ListPaymentMethodsResponseSchema)` to create a new message.
 */
export const ListPaymentMethodsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 1);

/**
 * Describes the message qdrant.cloud.payment.v1.GetPaymentMethodRequest.
 * Use `create(GetPaymentMethodRequestSchema)` to create a new message.
 */
export const GetPaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 2);

/**
 * Describes the message qdrant.cloud.payment.v1.GetPaymentMethodResponse.
 * Use `create(GetPaymentMethodResponseSchema)` to create a new message.
 */
export const GetPaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 3);

/**
 * Describes the message qdrant.cloud.payment.v1.CreatePaymentMethodRequest.
 * Use `create(CreatePaymentMethodRequestSchema)` to create a new message.
 */
export const CreatePaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 4);

/**
 * Describes the message qdrant.cloud.payment.v1.CreatePaymentMethodResponse.
 * Use `create(CreatePaymentMethodResponseSchema)` to create a new message.
 */
export const CreatePaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 5);

/**
 * Describes the message qdrant.cloud.payment.v1.UpdatePaymentMethodRequest.
 * Use `create(UpdatePaymentMethodRequestSchema)` to create a new message.
 */
export const UpdatePaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 6);

/**
 * Describes the message qdrant.cloud.payment.v1.UpdatePaymentMethodResponse.
 * Use `create(UpdatePaymentMethodResponseSchema)` to create a new message.
 */
export const UpdatePaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 7);

/**
 * Describes the message qdrant.cloud.payment.v1.DeletePaymentMethodRequest.
 * Use `create(DeletePaymentMethodRequestSchema)` to create a new message.
 */
export const DeletePaymentMethodRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 8);

/**
 * Describes the message qdrant.cloud.payment.v1.DeletePaymentMethodResponse.
 * Use `create(DeletePaymentMethodResponseSchema)` to create a new message.
 */
export const DeletePaymentMethodResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 9);

/**
 * Describes the message qdrant.cloud.payment.v1.GetStripeCheckoutSessionRequest.
 * Use `create(GetStripeCheckoutSessionRequestSchema)` to create a new message.
 */
export const GetStripeCheckoutSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 10);

/**
 * Describes the message qdrant.cloud.payment.v1.GetStripeCheckoutSessionResponse.
 * Use `create(GetStripeCheckoutSessionResponseSchema)` to create a new message.
 */
export const GetStripeCheckoutSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 11);

/**
 * Describes the message qdrant.cloud.payment.v1.CreateStripeCheckoutSessionRequest.
 * Use `create(CreateStripeCheckoutSessionRequestSchema)` to create a new message.
 */
export const CreateStripeCheckoutSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 12);

/**
 * Describes the message qdrant.cloud.payment.v1.CreateStripeCheckoutSessionResponse.
 * Use `create(CreateStripeCheckoutSessionResponseSchema)` to create a new message.
 */
export const CreateStripeCheckoutSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 13);

/**
 * Describes the message qdrant.cloud.payment.v1.StripeCheckoutSession.
 * Use `create(StripeCheckoutSessionSchema)` to create a new message.
 */
export const StripeCheckoutSessionSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 14);

/**
 * Describes the message qdrant.cloud.payment.v1.PaymentMethod.
 * Use `create(PaymentMethodSchema)` to create a new message.
 */
export const PaymentMethodSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 15);

/**
 * Describes the message qdrant.cloud.payment.v1.BillingAddress.
 * Use `create(BillingAddressSchema)` to create a new message.
 */
export const BillingAddressSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 16);

/**
 * Describes the message qdrant.cloud.payment.v1.PaymentMethodDetails.
 * Use `create(PaymentMethodDetailsSchema)` to create a new message.
 */
export const PaymentMethodDetailsSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 17);

/**
 * Describes the message qdrant.cloud.payment.v1.Card.
 * Use `create(CardSchema)` to create a new message.
 */
export const CardSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_payment_v1_payment, 18);

/**
 * Describes the enum qdrant.cloud.payment.v1.PaymentProviderType.
 */
export const PaymentProviderTypeSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_payment_v1_payment, 0);

/**
 * PaymentProviderType defines the type of payment method.
 *
 * @generated from enum qdrant.cloud.payment.v1.PaymentProviderType
 */
export const PaymentProviderType = /*@__PURE__*/
  tsEnum(PaymentProviderTypeSchema);

/**
 * Describes the enum qdrant.cloud.payment.v1.PaymentMethodStatus.
 */
export const PaymentMethodStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_payment_v1_payment, 1);

/**
 * PaymentMethodStatus defines the status of the payment method.
 *
 * @generated from enum qdrant.cloud.payment.v1.PaymentMethodStatus
 */
export const PaymentMethodStatus = /*@__PURE__*/
  tsEnum(PaymentMethodStatusSchema);

/**
 * Describes the enum qdrant.cloud.payment.v1.StripeSetupIntentStatus.
 */
export const StripeSetupIntentStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_payment_v1_payment, 2);

/**
 * Represents the status of a SetupIntent in Stripe.
 *
 * @generated from enum qdrant.cloud.payment.v1.StripeSetupIntentStatus
 */
export const StripeSetupIntentStatus = /*@__PURE__*/
  tsEnum(StripeSetupIntentStatusSchema);

/**
 * PaymentService is the API used to manage payment settings.
 *
 * @generated from service qdrant.cloud.payment.v1.PaymentService
 */
export const PaymentService = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_payment_v1_payment, 0);

