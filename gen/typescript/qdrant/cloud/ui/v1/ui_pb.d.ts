// @generated by protoc-gen-es v2.7.0 with parameter "target=js+dts,import_extension=js,valid_types=protovalidate_required"
// @generated from file qdrant/cloud/ui/v1/ui.proto (package qdrant.cloud.ui.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Role, RoleValid, User, UserValid } from "../../iam/v1/iam_pb.js";

/**
 * Describes the file qdrant/cloud/ui/v1/ui.proto.
 */
export declare const file_qdrant_cloud_ui_v1_ui: GenFile;

/**
 * ListUsersWithRolesRequest is the request for the ListUsersWithRoles function.
 *
 * @generated from message qdrant.cloud.ui.v1.ListUsersWithRolesRequest
 */
export declare type ListUsersWithRolesRequest = Message<"qdrant.cloud.ui.v1.ListUsersWithRolesRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;
};

export declare type ListUsersWithRolesRequestValid = ListUsersWithRolesRequest;

/**
 * Describes the message qdrant.cloud.ui.v1.ListUsersWithRolesRequest.
 * Use `create(ListUsersWithRolesRequestSchema)` to create a new message.
 */
export declare const ListUsersWithRolesRequestSchema: GenMessage<ListUsersWithRolesRequest, {validType: ListUsersWithRolesRequestValid}>;

/**
 * ListUsersWithRolesResponse is the response from the ListUsersWithRoles function.
 *
 * @generated from message qdrant.cloud.ui.v1.ListUsersWithRolesResponse
 */
export declare type ListUsersWithRolesResponse = Message<"qdrant.cloud.ui.v1.ListUsersWithRolesResponse"> & {
  /**
   * The list of users extended with their assigned roles.
   *
   * @generated from field: repeated qdrant.cloud.ui.v1.UserWithRoles items = 1;
   */
  items: UserWithRoles[];
};

export declare type ListUsersWithRolesResponseValid = ListUsersWithRolesResponse;

/**
 * Describes the message qdrant.cloud.ui.v1.ListUsersWithRolesResponse.
 * Use `create(ListUsersWithRolesResponseSchema)` to create a new message.
 */
export declare const ListUsersWithRolesResponseSchema: GenMessage<ListUsersWithRolesResponse, {validType: ListUsersWithRolesResponseValid}>;

/**
 * UserWithRoles represents a user along with their assigned roles.
 *
 * @generated from message qdrant.cloud.ui.v1.UserWithRoles
 */
export declare type UserWithRoles = Message<"qdrant.cloud.ui.v1.UserWithRoles"> & {
  /**
   * The user information.
   *
   * @generated from field: qdrant.cloud.iam.v1.User user = 1;
   */
  user?: User;

  /**
   * The roles assigned to this user.
   * If the user has no roles assigned, this list will be empty.
   *
   * @generated from field: repeated qdrant.cloud.iam.v1.Role roles = 2;
   */
  roles: Role[];
};

/**
 * UserWithRoles represents a user along with their assigned roles.
 *
 * @generated from message qdrant.cloud.ui.v1.UserWithRoles
 */
export declare type UserWithRolesValid = Message<"qdrant.cloud.ui.v1.UserWithRoles"> & {
  /**
   * The user information.
   *
   * @generated from field: qdrant.cloud.iam.v1.User user = 1;
   */
  user: UserValid;

  /**
   * The roles assigned to this user.
   * If the user has no roles assigned, this list will be empty.
   *
   * @generated from field: repeated qdrant.cloud.iam.v1.Role roles = 2;
   */
  roles: RoleValid[];
};

/**
 * Describes the message qdrant.cloud.ui.v1.UserWithRoles.
 * Use `create(UserWithRolesSchema)` to create a new message.
 */
export declare const UserWithRolesSchema: GenMessage<UserWithRoles, {validType: UserWithRolesValid}>;

/**
 * UIViewService provides optimized methods for UI components that need aggregated data.
 * This service combines multiple entities to reduce API round trips for common UI patterns.
 *
 * @generated from service qdrant.cloud.ui.v1.UIViewService
 */
export declare const UIViewService: GenService<{
  /**
   * Lists users in an account with their assigned roles.
   * This endpoint provides a consolidated view that would otherwise require separate calls
   * to ListUsers and ListUserRoles for each user.
   * Required permissions:
   * - read:users
   * - read:roles
   *
   * @generated from rpc qdrant.cloud.ui.v1.UIViewService.ListUsersWithRoles
   */
  listUsersWithRoles: {
    methodKind: "unary";
    input: typeof ListUsersWithRolesRequestSchema;
    output: typeof ListUsersWithRolesResponseSchema;
  },
}>;

