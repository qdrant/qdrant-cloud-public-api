// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file qdrant/cloud/common/v1/common.proto (package qdrant.cloud.common.v1, syntax proto3)
/* eslint-disable */

import type { GenExtension, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { extDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import type { MethodOptions } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file qdrant/cloud/common/v1/common.proto.
 */
export const file_qdrant_cloud_common_v1_common: GenFile = /*@__PURE__*/
  fileDesc("CiNxZHJhbnQvY2xvdWQvY29tbW9uL3YxL2NvbW1vbi5wcm90bxIWcWRyYW50LmNsb3VkLmNvbW1vbi52MSI2CgdWZXJzaW9uEg0KBW1ham9yGAEgASgNEg0KBW1pbm9yGAIgASgNEg0KBXBhdGNoGAMgASgNImIKDFNlY3JldEtleVJlZhI5CgRuYW1lGAEgASgJQiu6SChyJhABGP0BMh9eW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8kEhcKA2tleRgCIAEoCUIKukgHcgUQARiACCKnAQoIS2V5VmFsdWUSgQEKA2tleRgBIAEoCUJ0ukhxcm8YPzJrXigoW2EtekEtWjAtOV18W2EtekEtWjAtOV1bYS16QS1aMC05XC1dKlthLXpBLVowLTldKVwuKSooW0EtWmEtejAtOV18W0EtWmEtejAtOV1bQS1aYS16MC05XC1dKltBLVphLXowLTldKSQSFwoFdmFsdWUYAiABKAlCCLpIBXIDGIAIOkIKC3Blcm1pc3Npb25zEh4uZ29vZ2xlLnByb3RvYnVmLk1ldGhvZE9wdGlvbnMY0YYDIAMoCVILcGVybWlzc2lvbnM6VAoVYWNjb3VudF9pZF9leHByZXNzaW9uEh4uZ29vZ2xlLnByb3RvYnVmLk1ldGhvZE9wdGlvbnMY0oYDIAEoCVITYWNjb3VudElkRXhwcmVzc2lvbjpZChdyZXF1aXJlc19hdXRoZW50aWNhdGlvbhIeLmdvb2dsZS5wcm90b2J1Zi5NZXRob2RPcHRpb25zGNOGAyABKAhSFnJlcXVpcmVzQXV0aGVudGljYXRpb25C9gEKGmNvbS5xZHJhbnQuY2xvdWQuY29tbW9uLnYxQgtDb21tb25Qcm90b1ABWlBnaXRodWIuY29tL3FkcmFudC9xZHJhbnQtY2xvdWQtcHVibGljLWFwaS9nZW4vZ28vcWRyYW50L2Nsb3VkL2NvbW1vbi92MTtjb21tb252MaICA1FDQ6oCFlFkcmFudC5DbG91ZC5Db21tb24uVjHKAhZRZHJhbnRcQ2xvdWRcQ29tbW9uXFYx4gIiUWRyYW50XENsb3VkXENvbW1vblxWMVxHUEJNZXRhZGF0YeoCGVFkcmFudDo6Q2xvdWQ6OkNvbW1vbjo6VjFiBnByb3RvMw", [file_buf_validate_validate, file_google_protobuf_descriptor]);

/**
 * Semantic version number.
 *
 * @generated from message qdrant.cloud.common.v1.Version
 */
export type Version = Message<"qdrant.cloud.common.v1.Version"> & {
  /**
   * Major version (increasing may break APIs)
   *
   * @generated from field: uint32 major = 1;
   */
  major: number;

  /**
   * Minor version (increased for new features)
   *
   * @generated from field: uint32 minor = 2;
   */
  minor: number;

  /**
   * Patch version (increased for fixes)
   *
   * @generated from field: uint32 patch = 3;
   */
  patch: number;
};

/**
 * Describes the message qdrant.cloud.common.v1.Version.
 * Use `create(VersionSchema)` to create a new message.
 */
export const VersionSchema: GenMessage<Version> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_common_v1_common, 0);

/**
 * SecretKeyRef is a reference to a Kubernetes secret name and the key inside the secret
 *
 * @generated from message qdrant.cloud.common.v1.SecretKeyRef
 */
export type SecretKeyRef = Message<"qdrant.cloud.common.v1.SecretKeyRef"> & {
  /**
   * The name of the secret (in the same namespace as the QdrantCluster CRD instance)
   * This is a required field
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The key inside the secret
   * This is a required field
   *
   * @generated from field: string key = 2;
   */
  key: string;
};

/**
 * Describes the message qdrant.cloud.common.v1.SecretKeyRef.
 * Use `create(SecretKeyRefSchema)` to create a new message.
 */
export const SecretKeyRefSchema: GenMessage<SecretKeyRef> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_common_v1_common, 1);

/**
 * KeyValue is a key-value tuple (used in e.g. node selectors / annotations)
 * The message represents an object for Kubernetes.
 *
 * @generated from message qdrant.cloud.common.v1.KeyValue
 */
export type KeyValue = Message<"qdrant.cloud.common.v1.KeyValue"> & {
  /**
   * The key part of a key-value pair
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * The value part of a key-value pair
   *
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message qdrant.cloud.common.v1.KeyValue.
 * Use `create(KeyValueSchema)` to create a new message.
 */
export const KeyValueSchema: GenMessage<KeyValue> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_common_v1_common, 2);

/**
 * A list of permissions which ALL need to be met by the current user.
 *
 * @generated from extension: repeated string permissions = 50001;
 */
export const permissions: GenExtension<MethodOptions, string[]> = /*@__PURE__*/
  extDesc(file_qdrant_cloud_common_v1_common, 0);

/**
 * The expression to find the account ID field, which should be a string field.
 * It is allowed to nest fields with a point, like 'cluster.account_id' or 'account.id'
 * If the expression is set to an empty string, no account ID will be used.
 *
 * @generated from extension: string account_id_expression = 50002;
 */
export const account_id_expression: GenExtension<MethodOptions, string> = /*@__PURE__*/
  extDesc(file_qdrant_cloud_common_v1_common, 1);

/**
 * Set to allow a method to be used without authentication.
 *
 * @generated from extension: bool requires_authentication = 50003;
 */
export const requires_authentication: GenExtension<MethodOptions, boolean> = /*@__PURE__*/
  extDesc(file_qdrant_cloud_common_v1_common, 2);

