// @generated by protoc-gen-es v2.5.2 with parameter "target=js+dts,import_extension=js,valid_types=protovalidate_required"
// @generated from file qdrant/cloud/common/v1/common.proto (package qdrant.cloud.common.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, extDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb.js";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file qdrant/cloud/common/v1/common.proto.
 */
export const file_qdrant_cloud_common_v1_common = /*@__PURE__*/
  fileDesc("CiNxZHJhbnQvY2xvdWQvY29tbW9uL3YxL2NvbW1vbi5wcm90bxIWcWRyYW50LmNsb3VkLmNvbW1vbi52MSI2CgdWZXJzaW9uEg0KBW1ham9yGAEgASgNEg0KBW1pbm9yGAIgASgNEg0KBXBhdGNoGAMgASgNImIKDFNlY3JldEtleVJlZhI5CgRuYW1lGAEgASgJQiu6SChyJhABGP0BMh9eW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8kEhcKA2tleRgCIAEoCUIKukgHcgUQARiACCKnAQoIS2V5VmFsdWUSgQEKA2tleRgBIAEoCUJ0ukhxcm8YPzJrXigoW2EtekEtWjAtOV18W2EtekEtWjAtOV1bYS16QS1aMC05XC1dKlthLXpBLVowLTldKVwuKSooW0EtWmEtejAtOV18W0EtWmEtejAtOV1bQS1aYS16MC05XC1dKltBLVphLXowLTldKSQSFwoFdmFsdWUYAiABKAlCCLpIBXIDGIAIKnsKCUFjdG9yVHlwZRIaChZBQ1RPUl9UWVBFX1VOU1BFQ0lGSUVEEAASEwoPQUNUT1JfVFlQRV9VU0VSEAESHQoZQUNUT1JfVFlQRV9NQU5BR0VNRU5UX0tFWRACEh4KGkFDVE9SX1RZUEVfU0VSVklDRV9BQ0NPVU5UEAM6UAoLcGVybWlzc2lvbnMSHi5nb29nbGUucHJvdG9idWYuTWV0aG9kT3B0aW9ucxjRhgMgAygJQgy6SAmSAQYiBHICEAFSC3Blcm1pc3Npb25zOnUKFWFjY291bnRfaWRfZXhwcmVzc2lvbhIeLmdvb2dsZS5wcm90b2J1Zi5NZXRob2RPcHRpb25zGNKGAyABKAlCH7pIHHIaMhheKHxbYS16X10rKFwuW2Etel9dKykqKSRSE2FjY291bnRJZEV4cHJlc3Npb246WQoXcmVxdWlyZXNfYXV0aGVudGljYXRpb24SHi5nb29nbGUucHJvdG9idWYuTWV0aG9kT3B0aW9ucxjThgMgASgIUhZyZXF1aXJlc0F1dGhlbnRpY2F0aW9uOooBChVzdXBwb3J0ZWRfYWN0b3JfdHlwZXMSHi5nb29nbGUucHJvdG9idWYuTWV0aG9kT3B0aW9ucxjUhgMgAygOMiEucWRyYW50LmNsb3VkLmNvbW1vbi52MS5BY3RvclR5cGVCERABukgMkgEJIgeCAQQQASAAUhNzdXBwb3J0ZWRBY3RvclR5cGVzOloKGHJlcXVpcmVzX2FsbF9wZXJtaXNzaW9ucxIeLmdvb2dsZS5wcm90b2J1Zi5NZXRob2RPcHRpb25zGNWGAyABKAhSFnJlcXVpcmVzQWxsUGVybWlzc2lvbnM6VgoQbWF4X21lc3NhZ2Vfc2l6ZRIeLmdvb2dsZS5wcm90b2J1Zi5NZXRob2RPcHRpb25zGNaGAyABKAVCCrpIBxoFGIAIKAFSDm1heE1lc3NhZ2VTaXplQvYBChpjb20ucWRyYW50LmNsb3VkLmNvbW1vbi52MUILQ29tbW9uUHJvdG9QAVpQZ2l0aHViLmNvbS9xZHJhbnQvcWRyYW50LWNsb3VkLXB1YmxpYy1hcGkvZ2VuL2dvL3FkcmFudC9jbG91ZC9jb21tb24vdjE7Y29tbW9udjGiAgNRQ0OqAhZRZHJhbnQuQ2xvdWQuQ29tbW9uLlYxygIWUWRyYW50XENsb3VkXENvbW1vblxWMeICIlFkcmFudFxDbG91ZFxDb21tb25cVjFcR1BCTWV0YWRhdGHqAhlRZHJhbnQ6OkNsb3VkOjpDb21tb246OlYxYgZwcm90bzM", [file_buf_validate_validate, file_google_protobuf_descriptor]);

/**
 * Describes the message qdrant.cloud.common.v1.Version.
 * Use `create(VersionSchema)` to create a new message.
 */
export const VersionSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_common_v1_common, 0);

/**
 * Describes the message qdrant.cloud.common.v1.SecretKeyRef.
 * Use `create(SecretKeyRefSchema)` to create a new message.
 */
export const SecretKeyRefSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_common_v1_common, 1);

/**
 * Describes the message qdrant.cloud.common.v1.KeyValue.
 * Use `create(KeyValueSchema)` to create a new message.
 */
export const KeyValueSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_common_v1_common, 2);

/**
 * Describes the enum qdrant.cloud.common.v1.ActorType.
 */
export const ActorTypeSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_common_v1_common, 0);

/**
 * ActorType specifies the type of actor that can call a method.
 *
 * @generated from enum qdrant.cloud.common.v1.ActorType
 */
export const ActorType = /*@__PURE__*/
  tsEnum(ActorTypeSchema);

/**
 * A list of permissions which need to be met by the current user.
 * If `requires_all_permissions` is true (or missing): ALL of the permissions should be met (and)
 * If `requires_all_permissions` is false: ANY-OF the permissions should be met (or)
 *
 * @generated from extension: repeated string permissions = 50001;
 */
export const permissions = /*@__PURE__*/
  extDesc(file_qdrant_cloud_common_v1_common, 0);

/**
 * The expression to find the account ID field, which should be a string field.
 * It is allowed to nest fields with a point, like 'cluster.account_id' or 'account.id'
 * If the expression is set to an empty string, no account ID will be used.
 *
 * @generated from extension: string account_id_expression = 50002;
 */
export const account_id_expression = /*@__PURE__*/
  extDesc(file_qdrant_cloud_common_v1_common, 1);

/**
 * Set to allow a method to be used without authentication.
 *
 * @generated from extension: bool requires_authentication = 50003;
 */
export const requires_authentication = /*@__PURE__*/
  extDesc(file_qdrant_cloud_common_v1_common, 2);

/**
 * If this option is set, only the specified actor types are allowed to call the method.
 * If empty or not set, all authenticated actor types (that pass other permission checks) are allowed.
 *
 * @generated from extension: repeated qdrant.cloud.common.v1.ActorType supported_actor_types = 50004 [packed = true];
 */
export const supported_actor_types = /*@__PURE__*/
  extDesc(file_qdrant_cloud_common_v1_common, 3);

/**
 * If set to true the provided permissions are ALL (and)
 * if set to false the provided permissions are ANY-OF (or).
 *
 * @generated from extension: bool requires_all_permissions = 50005;
 */
export const requires_all_permissions = /*@__PURE__*/
  extDesc(file_qdrant_cloud_common_v1_common, 4);

/**
 * The override of the default maximum message size in MB (per message).
 *
 * @generated from extension: int32 max_message_size = 50006;
 */
export const max_message_size = /*@__PURE__*/
  extDesc(file_qdrant_cloud_common_v1_common, 5);

