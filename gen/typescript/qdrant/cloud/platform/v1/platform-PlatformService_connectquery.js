// @generated by protoc-gen-connect-query v0.4.1
// @generated from file qdrant/cloud/platform/v1/platform.proto (package qdrant.cloud.platform.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { createQueryService } from "@bufbuild/connect-query";
import { MethodKind } from "@bufbuild/protobuf";
import { ListCloudProviderRegionsRequest, ListCloudProviderRegionsResponse, ListCloudProvidersRequest, ListCloudProvidersResponse, ListGlobalCloudProviderRegionsRequest, ListGlobalCloudProviderRegionsResponse, ListGlobalCloudProvidersRequest, ListGlobalCloudProvidersResponse } from "./platform_pb.js";

export const typeName = "qdrant.cloud.platform.v1.PlatformService";

/**
 * buf:lint:ignore QDRANT_CLOUD_METHOD_OPTIONS
 * Lists all available cloud providers globally (not account-specific).
 * Authentication is not required.
 *
 * @generated from rpc qdrant.cloud.platform.v1.PlatformService.ListGlobalCloudProviders
 */
export const listGlobalCloudProviders = createQueryService({
  service: {
    methods: {
      listGlobalCloudProviders: {
        name: "ListGlobalCloudProviders",
        kind: MethodKind.Unary,
        I: ListGlobalCloudProvidersRequest,
        O: ListGlobalCloudProvidersResponse,
      },
    },
    typeName: "qdrant.cloud.platform.v1.PlatformService",
  },
}).listGlobalCloudProviders;

/**
 * Lists all cloud providers in the account identified by the given ID.
 * Required permissions:
 * - None (authenticated only)
 *
 * @generated from rpc qdrant.cloud.platform.v1.PlatformService.ListCloudProviders
 */
export const listCloudProviders = createQueryService({
  service: {
    methods: {
      listCloudProviders: {
        name: "ListCloudProviders",
        kind: MethodKind.Unary,
        I: ListCloudProvidersRequest,
        O: ListCloudProvidersResponse,
      },
    },
    typeName: "qdrant.cloud.platform.v1.PlatformService",
  },
}).listCloudProviders;

/**
 * buf:lint:ignore QDRANT_CLOUD_METHOD_OPTIONS
 * Lists all cloud provider regions (not account-specific) identified by cloud provider ID.
 * Authentication is not required.
 *
 * @generated from rpc qdrant.cloud.platform.v1.PlatformService.ListGlobalCloudProviderRegions
 */
export const listGlobalCloudProviderRegions = createQueryService({
  service: {
    methods: {
      listGlobalCloudProviderRegions: {
        name: "ListGlobalCloudProviderRegions",
        kind: MethodKind.Unary,
        I: ListGlobalCloudProviderRegionsRequest,
        O: ListGlobalCloudProviderRegionsResponse,
      },
    },
    typeName: "qdrant.cloud.platform.v1.PlatformService",
  },
}).listGlobalCloudProviderRegions;

/**
 * Lists all cloud provider regions in the account identified by the given ID and cloud provider.
 * Required permissions:
 * - None (authenticated only)
 *
 * @generated from rpc qdrant.cloud.platform.v1.PlatformService.ListCloudProviderRegions
 */
export const listCloudProviderRegions = createQueryService({
  service: {
    methods: {
      listCloudProviderRegions: {
        name: "ListCloudProviderRegions",
        kind: MethodKind.Unary,
        I: ListCloudProviderRegionsRequest,
        O: ListCloudProviderRegionsResponse,
      },
    },
    typeName: "qdrant.cloud.platform.v1.PlatformService",
  },
}).listCloudProviderRegions;
