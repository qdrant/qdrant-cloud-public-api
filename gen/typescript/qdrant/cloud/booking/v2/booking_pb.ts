// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file qdrant/cloud/booking/v2/booking.proto (package qdrant.cloud.booking.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file qdrant/cloud/booking/v2/booking.proto.
 */
export const file_qdrant_cloud_booking_v2_booking: GenFile = /*@__PURE__*/
  fileDesc("CiVxZHJhbnQvY2xvdWQvYm9va2luZy92Mi9ib29raW5nLnByb3RvEhdxZHJhbnQuY2xvdWQuYm9va2luZy52MiLMAQoTTGlzdFBhY2thZ2VzUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARI7Cg5jbG91ZF9wcm92aWRlchgCIAEoCUIeukgbchlSA2F3c1IDZ2NwUgVhenVyZVIGaHlicmlkSACIAQESFAoMY2xvdWRfcmVnaW9uGAMgASgJEjEKCHN0YXR1c2VzGAQgAygJQh+6SBySARkiF3IVUgZBY3RpdmVSC0RlYWN0aXZhdGVkQhEKD19jbG91ZF9wcm92aWRlciJHChRMaXN0UGFja2FnZXNSZXNwb25zZRIvCgVpdGVtcxgBIAMoCzIgLnFkcmFudC5jbG91ZC5ib29raW5nLnYyLlBhY2thZ2UiRwoRR2V0UGFja2FnZVJlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQESFAoCaWQYAiABKAlCCLpIBXIDsAEBIkcKEkdldFBhY2thZ2VSZXNwb25zZRIxCgdwYWNrYWdlGAEgASgLMiAucWRyYW50LmNsb3VkLmJvb2tpbmcudjIuUGFja2FnZSLPAQoHUGFja2FnZRIUCgJpZBgBIAEoCUIIukgFcgOwAQESDAoEbmFtZRgCIAEoCRIMCgR0eXBlGAMgASgJEk8KF3Jlc291cmNlX2NvbmZpZ3VyYXRpb25zGAQgAygLMi4ucWRyYW50LmNsb3VkLmJvb2tpbmcudjIuUmVzb3VyY2VDb25maWd1cmF0aW9uEhAKCGN1cnJlbmN5GAUgASgJEh8KF3VuaXRfaW50X3ByaWNlX3Blcl9ob3VyGAYgASgFEg4KBnN0YXR1cxgHIAEoCSJVChVSZXNvdXJjZUNvbmZpZ3VyYXRpb24SDgoGYW1vdW50GAEgASgFEhUKDXJlc291cmNlX3VuaXQYAiABKAkSFQoNcmVzb3VyY2VfdHlwZRgDIAEoCTLjAgoOQm9va2luZ1NlcnZpY2USpwEKDExpc3RQYWNrYWdlcxIsLnFkcmFudC5jbG91ZC5ib29raW5nLnYyLkxpc3RQYWNrYWdlc1JlcXVlc3QaLS5xZHJhbnQuY2xvdWQuYm9va2luZy52Mi5MaXN0UGFja2FnZXNSZXNwb25zZSI6irUYAILT5JMCMBIuL2FwaS9ib29raW5nL3YyL2FjY291bnRzL3thY2NvdW50X2lkfS9wYWNrYWdlcxKmAQoKR2V0UGFja2FnZRIqLnFkcmFudC5jbG91ZC5ib29raW5nLnYyLkdldFBhY2thZ2VSZXF1ZXN0GisucWRyYW50LmNsb3VkLmJvb2tpbmcudjIuR2V0UGFja2FnZVJlc3BvbnNlIj+KtRgAgtPkkwI1EjMvYXBpL2Jvb2tpbmcvdjIvYWNjb3VudHMve2FjY291bnRfaWR9L3BhY2thZ2VzL3tpZH1C/gEKG2NvbS5xZHJhbnQuY2xvdWQuYm9va2luZy52MkIMQm9va2luZ1Byb3RvUAFaUmdpdGh1Yi5jb20vcWRyYW50L3FkcmFudC1jbG91ZC1wdWJsaWMtYXBpL2dlbi9nby9xZHJhbnQvY2xvdWQvYm9va2luZy92Mjtib29raW5ndjKiAgNRQ0KqAhdRZHJhbnQuQ2xvdWQuQm9va2luZy5WMsoCF1FkcmFudFxDbG91ZFxCb29raW5nXFYy4gIjUWRyYW50XENsb3VkXEJvb2tpbmdcVjJcR1BCTWV0YWRhdGHqAhpRZHJhbnQ6OkNsb3VkOjpCb29raW5nOjpWMmIGcHJvdG8z", [file_buf_validate_validate, file_google_api_annotations, file_qdrant_cloud_common_v1_common]);

/**
 * ListPackagesRequest is the request for the ListPackages function
 *
 * @generated from message qdrant.cloud.booking.v2.ListPackagesRequest
 */
export type ListPackagesRequest = Message<"qdrant.cloud.booking.v2.ListPackagesRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * Cloud provider where the cluster will be hosted.
   * This is an optional field (if set, it should be one of the following: aws, gcp, azure or hybrid).
   *
   * @generated from field: optional string cloud_provider = 2;
   */
  cloudProvider?: string;

  /**
   * Cloud region where the cluster is located.
   * This is an optional field and is ignored if the provider is set to 'hybrid'.
   *
   * @generated from field: string cloud_region = 3;
   */
  cloudRegion: string;

  /**
   * The status of the packages to filter.
   * This is an optional field. If value is not set, all packages are returned.
   *
   * TODO: ListOptions (however without since, the result doesn't contain any created_at/updated_at)
   *
   * @generated from field: repeated string statuses = 4;
   */
  statuses: string[];
};

/**
 * Describes the message qdrant.cloud.booking.v2.ListPackagesRequest.
 * Use `create(ListPackagesRequestSchema)` to create a new message.
 */
export const ListPackagesRequestSchema: GenMessage<ListPackagesRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_booking_v2_booking, 0);

/**
 * ListPackagesResponse is the response from the ListPackages function
 *
 * @generated from message qdrant.cloud.booking.v2.ListPackagesResponse
 */
export type ListPackagesResponse = Message<"qdrant.cloud.booking.v2.ListPackagesResponse"> & {
  /**
   * The actual packages in this list
   *
   * @generated from field: repeated qdrant.cloud.booking.v2.Package items = 1;
   */
  items: Package[];
};

/**
 * Describes the message qdrant.cloud.booking.v2.ListPackagesResponse.
 * Use `create(ListPackagesResponseSchema)` to create a new message.
 */
export const ListPackagesResponseSchema: GenMessage<ListPackagesResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_booking_v2_booking, 1);

/**
 * GetPackageRequest is the request for the GetPackage function
 *
 * @generated from message qdrant.cloud.booking.v2.GetPackageRequest
 */
export type GetPackageRequest = Message<"qdrant.cloud.booking.v2.GetPackageRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The unique identifier of the package.
   * A unique string ID assigned to each package.
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message qdrant.cloud.booking.v2.GetPackageRequest.
 * Use `create(GetPackageRequestSchema)` to create a new message.
 */
export const GetPackageRequestSchema: GenMessage<GetPackageRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_booking_v2_booking, 2);

/**
 * GetPackageResponse is the response from the GetPackage function
 *
 * @generated from message qdrant.cloud.booking.v2.GetPackageResponse
 */
export type GetPackageResponse = Message<"qdrant.cloud.booking.v2.GetPackageResponse"> & {
  /**
   * The actual package
   *
   * @generated from field: qdrant.cloud.booking.v2.Package package = 1;
   */
  package?: Package;
};

/**
 * Describes the message qdrant.cloud.booking.v2.GetPackageResponse.
 * Use `create(GetPackageResponseSchema)` to create a new message.
 */
export const GetPackageResponseSchema: GenMessage<GetPackageResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_booking_v2_booking, 3);

/**
 * Package represents a single package.
 * A package is a configuration (CPU/Memory/Disk size) for a cluster with a price.
 *
 * @generated from message qdrant.cloud.booking.v2.Package
 */
export type Package = Message<"qdrant.cloud.booking.v2.Package"> & {
  /**
   * The unique identifier of the package.
   * A unique string ID assigned to each package.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The name of the package.
   * A human-readable identifier for the package.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Specifies if this is a free or paid package.
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * A repeated field representing the resource configurations associated with the package.
   *
   * @generated from field: repeated qdrant.cloud.booking.v2.ResourceConfiguration resource_configurations = 4;
   */
  resourceConfigurations: ResourceConfiguration[];

  /**
   * The currency of the prices.
   * Specifies the currency in which the prices are denominated.
   *
   * @generated from field: string currency = 5;
   */
  currency: string;

  /**
   * The unit price per hour in millicents, in integer format.
   * Represents the cost per hour for a single unit of the resource.
   * TODO: You will be billed by minutes?
   *
   * @generated from field: int32 unit_int_price_per_hour = 6;
   */
  unitIntPricePerHour: number;

  /**
   * The status of the package.
   * Indicates the current status of the package.
   * One of: Active, Deactivated
   *
   * @generated from field: string status = 7;
   */
  status: string;
};

/**
 * Describes the message qdrant.cloud.booking.v2.Package.
 * Use `create(PackageSchema)` to create a new message.
 */
export const PackageSchema: GenMessage<Package> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_booking_v2_booking, 4);

/**
 * ResourceConfiguration configures a specific resource in a total resource configuration
 *
 * @generated from message qdrant.cloud.booking.v2.ResourceConfiguration
 */
export type ResourceConfiguration = Message<"qdrant.cloud.booking.v2.ResourceConfiguration"> & {
  /**
   * The amount in the specified unit
   *
   * @generated from field: int32 amount = 1;
   */
  amount: number;

  /**
   * The unit of the resource, specifying what kind of unit the resource is measured in (e.g., m, Gib).
   *
   * @generated from field: string resource_unit = 2;
   */
  resourceUnit: string;

  /**
   * The type of the resource, specifying the category or type of resource (e.g., vCPU, DiskSize).
   *
   * @generated from field: string resource_type = 3;
   */
  resourceType: string;
};

/**
 * Describes the message qdrant.cloud.booking.v2.ResourceConfiguration.
 * Use `create(ResourceConfigurationSchema)` to create a new message.
 */
export const ResourceConfigurationSchema: GenMessage<ResourceConfiguration> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_booking_v2_booking, 5);

/**
 * BookingService is the API used to configure the booking settings (like packages objects).
 *
 * @generated from service qdrant.cloud.booking.v2.BookingService
 */
export const BookingService: GenService<{
  /**
   * Fetch all packages known by the system, optional filtered.
   * Required permissions:
   * - None (authenticated only)
   *
   * @generated from rpc qdrant.cloud.booking.v2.BookingService.ListPackages
   */
  listPackages: {
    methodKind: "unary";
    input: typeof ListPackagesRequestSchema;
    output: typeof ListPackagesResponseSchema;
  },
  /**
   * Get the package identified by the request identifier
   * Required permissions:
   * - None (authenticated only)
   *
   * @generated from rpc qdrant.cloud.booking.v2.BookingService.GetPackage
   */
  getPackage: {
    methodKind: "unary";
    input: typeof GetPackageRequestSchema;
    output: typeof GetPackageResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_booking_v2_booking, 0);

