// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file qdrant/cloud/booking/v1/booking.proto (package qdrant.cloud.booking.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file qdrant/cloud/booking/v1/booking.proto.
 */
export const file_qdrant_cloud_booking_v1_booking: GenFile = /*@__PURE__*/
  fileDesc("CiVxZHJhbnQvY2xvdWQvYm9va2luZy92MS9ib29raW5nLnByb3RvEhdxZHJhbnQuY2xvdWQuYm9va2luZy52MSLTAQoTTGlzdFBhY2thZ2VzUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARI7Cg5jbG91ZF9wcm92aWRlchgCIAEoCUIeukgbchlSA2F3c1IDZ2NwUgVhenVyZVIGaHlicmlkSACIAQESFAoMY2xvdWRfcmVnaW9uGAMgASgJEjgKCHN0YXR1c2VzGAQgAygOMiYucWRyYW50LmNsb3VkLmJvb2tpbmcudjEuUGFja2FnZVN0YXR1c0IRCg9fY2xvdWRfcHJvdmlkZXIiRwoUTGlzdFBhY2thZ2VzUmVzcG9uc2USLwoFaXRlbXMYASADKAsyIC5xZHJhbnQuY2xvdWQuYm9va2luZy52MS5QYWNrYWdlIkcKEUdldFBhY2thZ2VSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhQKAmlkGAIgASgJQgi6SAVyA7ABASJHChJHZXRQYWNrYWdlUmVzcG9uc2USMQoHcGFja2FnZRgBIAEoCzIgLnFkcmFudC5jbG91ZC5ib29raW5nLnYxLlBhY2thZ2Ui9gEKB1BhY2thZ2USFAoCaWQYASABKAlCCLpIBXIDsAEBEgwKBG5hbWUYAiABKAkSDAoEdHlwZRgDIAEoCRJOChZyZXNvdXJjZV9jb25maWd1cmF0aW9uGAQgASgLMi4ucWRyYW50LmNsb3VkLmJvb2tpbmcudjEuUmVzb3VyY2VDb25maWd1cmF0aW9uEhAKCGN1cnJlbmN5GAUgASgJEh8KF3VuaXRfaW50X3ByaWNlX3Blcl9ob3VyGAYgASgFEjYKBnN0YXR1cxgHIAEoDjImLnFkcmFudC5jbG91ZC5ib29raW5nLnYxLlBhY2thZ2VTdGF0dXMiPwoVUmVzb3VyY2VDb25maWd1cmF0aW9uEgsKA3JhbRgBIAEoCRILCgNjcHUYAiABKAkSDAoEZGlzaxgDIAEoCSpqCg1QYWNrYWdlU3RhdHVzEh4KGlBBQ0tBR0VfU1RBVFVTX1VOU1BFQ0lGSUVEEAASGQoVUEFDS0FHRV9TVEFUVVNfQUNUSVZFEAESHgoaUEFDS0FHRV9TVEFUVVNfREVBQ1RJVkFURUQQAjLjAgoOQm9va2luZ1NlcnZpY2USpwEKDExpc3RQYWNrYWdlcxIsLnFkcmFudC5jbG91ZC5ib29raW5nLnYxLkxpc3RQYWNrYWdlc1JlcXVlc3QaLS5xZHJhbnQuY2xvdWQuYm9va2luZy52MS5MaXN0UGFja2FnZXNSZXNwb25zZSI6irUYAILT5JMCMBIuL2FwaS9ib29raW5nL3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9wYWNrYWdlcxKmAQoKR2V0UGFja2FnZRIqLnFkcmFudC5jbG91ZC5ib29raW5nLnYxLkdldFBhY2thZ2VSZXF1ZXN0GisucWRyYW50LmNsb3VkLmJvb2tpbmcudjEuR2V0UGFja2FnZVJlc3BvbnNlIj+KtRgAgtPkkwI1EjMvYXBpL2Jvb2tpbmcvdjEvYWNjb3VudHMve2FjY291bnRfaWR9L3BhY2thZ2VzL3tpZH1C/gEKG2NvbS5xZHJhbnQuY2xvdWQuYm9va2luZy52MUIMQm9va2luZ1Byb3RvUAFaUmdpdGh1Yi5jb20vcWRyYW50L3FkcmFudC1jbG91ZC1wdWJsaWMtYXBpL2dlbi9nby9xZHJhbnQvY2xvdWQvYm9va2luZy92MTtib29raW5ndjGiAgNRQ0KqAhdRZHJhbnQuQ2xvdWQuQm9va2luZy5WMcoCF1FkcmFudFxDbG91ZFxCb29raW5nXFYx4gIjUWRyYW50XENsb3VkXEJvb2tpbmdcVjFcR1BCTWV0YWRhdGHqAhpRZHJhbnQ6OkNsb3VkOjpCb29raW5nOjpWMWIGcHJvdG8z", [file_buf_validate_validate, file_google_api_annotations, file_qdrant_cloud_common_v1_common]);

/**
 * ListPackagesRequest is the request for the ListPackages function
 *
 * @generated from message qdrant.cloud.booking.v1.ListPackagesRequest
 */
export type ListPackagesRequest = Message<"qdrant.cloud.booking.v1.ListPackagesRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * Cloud provider where the cluster will be hosted.
   * This is an optional field (if set, it should be one of the following: aws, gcp, azure or hybrid).
   *
   * @generated from field: optional string cloud_provider = 2;
   */
  cloudProvider?: string;

  /**
   * Cloud region where the cluster is located.
   * This is an optional field and is ignored if the provider is set to 'hybrid'.
   *
   * @generated from field: string cloud_region = 3;
   */
  cloudRegion: string;

  /**
   * The status of the packages to filter.
   * This is an optional field. If value is not set, all packages are returned.
   *
   * @generated from field: repeated qdrant.cloud.booking.v1.PackageStatus statuses = 4;
   */
  statuses: PackageStatus[];
};

/**
 * Describes the message qdrant.cloud.booking.v1.ListPackagesRequest.
 * Use `create(ListPackagesRequestSchema)` to create a new message.
 */
export const ListPackagesRequestSchema: GenMessage<ListPackagesRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_booking_v1_booking, 0);

/**
 * ListPackagesResponse is the response from the ListPackages function
 *
 * @generated from message qdrant.cloud.booking.v1.ListPackagesResponse
 */
export type ListPackagesResponse = Message<"qdrant.cloud.booking.v1.ListPackagesResponse"> & {
  /**
   * The actual packages in this list
   *
   * @generated from field: repeated qdrant.cloud.booking.v1.Package items = 1;
   */
  items: Package[];
};

/**
 * Describes the message qdrant.cloud.booking.v1.ListPackagesResponse.
 * Use `create(ListPackagesResponseSchema)` to create a new message.
 */
export const ListPackagesResponseSchema: GenMessage<ListPackagesResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_booking_v1_booking, 1);

/**
 * GetPackageRequest is the request for the GetPackage function
 *
 * @generated from message qdrant.cloud.booking.v1.GetPackageRequest
 */
export type GetPackageRequest = Message<"qdrant.cloud.booking.v1.GetPackageRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The unique identifier of the package.
   * A unique string ID assigned to each package.
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * Describes the message qdrant.cloud.booking.v1.GetPackageRequest.
 * Use `create(GetPackageRequestSchema)` to create a new message.
 */
export const GetPackageRequestSchema: GenMessage<GetPackageRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_booking_v1_booking, 2);

/**
 * GetPackageResponse is the response from the GetPackage function
 *
 * @generated from message qdrant.cloud.booking.v1.GetPackageResponse
 */
export type GetPackageResponse = Message<"qdrant.cloud.booking.v1.GetPackageResponse"> & {
  /**
   * The actual package
   *
   * @generated from field: qdrant.cloud.booking.v1.Package package = 1;
   */
  package?: Package;
};

/**
 * Describes the message qdrant.cloud.booking.v1.GetPackageResponse.
 * Use `create(GetPackageResponseSchema)` to create a new message.
 */
export const GetPackageResponseSchema: GenMessage<GetPackageResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_booking_v1_booking, 3);

/**
 * Package represents a single package.
 * A package is a configuration (CPU/Memory/Disk size) for a cluster with a price.
 *
 * @generated from message qdrant.cloud.booking.v1.Package
 */
export type Package = Message<"qdrant.cloud.booking.v1.Package"> & {
  /**
   * The unique identifier of the package.
   * A unique string ID assigned to each package.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The name of the package.
   * A human-readable identifier for the package.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Specifies if this is a free or paid package.
   *
   * @generated from field: string type = 3;
   */
  type: string;

  /**
   * The resource configuration associated with the package
   *
   * @generated from field: qdrant.cloud.booking.v1.ResourceConfiguration resource_configuration = 4;
   */
  resourceConfiguration?: ResourceConfiguration;

  /**
   * The currency of the prices.
   * Specifies the currency in which the prices are denominated.
   *
   * @generated from field: string currency = 5;
   */
  currency: string;

  /**
   * The unit price per hour in millicents, in integer format.
   * Represents the cost per hour for a single unit of the resource.
   * You will be billed hourly for the resources you use. Partial hours are rounded up and billed as full hours.
   *
   * @generated from field: int32 unit_int_price_per_hour = 6;
   */
  unitIntPricePerHour: number;

  /**
   * The status of the package.
   * Indicates the current status of the package.
   *
   * @generated from field: qdrant.cloud.booking.v1.PackageStatus status = 7;
   */
  status: PackageStatus;
};

/**
 * Describes the message qdrant.cloud.booking.v1.Package.
 * Use `create(PackageSchema)` to create a new message.
 */
export const PackageSchema: GenMessage<Package> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_booking_v1_booking, 4);

/**
 * ResourceConfiguration defines the resource configuration for a package.
 *
 * @generated from message qdrant.cloud.booking.v1.ResourceConfiguration
 */
export type ResourceConfiguration = Message<"qdrant.cloud.booking.v1.ResourceConfiguration"> & {
  /**
   * The amount of RAM (e.g., "1GiB")
   *
   * @generated from field: string ram = 1;
   */
  ram: string;

  /**
   * The amount of CPU (e.g., "1000m" (1 vCPU))
   *
   * @generated from field: string cpu = 2;
   */
  cpu: string;

  /**
   * The amount of disk (e.g., "100GiB")
   *
   * @generated from field: string disk = 3;
   */
  disk: string;
};

/**
 * Describes the message qdrant.cloud.booking.v1.ResourceConfiguration.
 * Use `create(ResourceConfigurationSchema)` to create a new message.
 */
export const ResourceConfigurationSchema: GenMessage<ResourceConfiguration> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_booking_v1_booking, 5);

/**
 * PackageStatus defines the valid states a package can be in.
 *
 * @generated from enum qdrant.cloud.booking.v1.PackageStatus
 */
export enum PackageStatus {
  /**
   * Unspecified package status.
   *
   * @generated from enum value: PACKAGE_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The package is active and available for use.
   *
   * @generated from enum value: PACKAGE_STATUS_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * The package is deactivated.
   *
   * @generated from enum value: PACKAGE_STATUS_DEACTIVATED = 2;
   */
  DEACTIVATED = 2,
}

/**
 * Describes the enum qdrant.cloud.booking.v1.PackageStatus.
 */
export const PackageStatusSchema: GenEnum<PackageStatus> = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_booking_v1_booking, 0);

/**
 * BookingService is the API used to configure the booking settings (like packages objects).
 *
 * @generated from service qdrant.cloud.booking.v1.BookingService
 */
export const BookingService: GenService<{
  /**
   * Fetch all packages known by the system, optional filtered.
   * Required permissions:
   * - None (authenticated only)
   *
   * @generated from rpc qdrant.cloud.booking.v1.BookingService.ListPackages
   */
  listPackages: {
    methodKind: "unary";
    input: typeof ListPackagesRequestSchema;
    output: typeof ListPackagesResponseSchema;
  },
  /**
   * Get the package identified by the request identifier
   * Required permissions:
   * - None (authenticated only)
   *
   * @generated from rpc qdrant.cloud.booking.v1.BookingService.GetPackage
   */
  getPackage: {
    methodKind: "unary";
    input: typeof GetPackageRequestSchema;
    output: typeof GetPackageResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_booking_v1_booking, 0);

