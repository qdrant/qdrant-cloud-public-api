// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file qdrant/cloud/serverless/collections/v1/collection_keys.proto (package qdrant.cloud.serverless.collections.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../../../google/api/annotations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../../common/v1/common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file qdrant/cloud/serverless/collections/v1/collection_keys.proto.
 */
export const file_qdrant_cloud_serverless_collections_v1_collection_keys: GenFile = /*@__PURE__*/
  fileDesc("CjxxZHJhbnQvY2xvdWQvc2VydmVybGVzcy9jb2xsZWN0aW9ucy92MS9jb2xsZWN0aW9uX2tleXMucHJvdG8SJnFkcmFudC5jbG91ZC5zZXJ2ZXJsZXNzLmNvbGxlY3Rpb25zLnYxIloKGUxpc3RDb2xsZWN0aW9uS2V5c1JlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQESHwoNY29sbGVjdGlvbl9pZBgCIAEoCUIIukgFcgOwAQEiWgoaTGlzdENvbGxlY3Rpb25LZXlzUmVzcG9uc2USPAoEa2V5cxgBIAMoCzIuLnFkcmFudC5jbG91ZC5zZXJ2ZXJsZXNzLmNvbGxlY3Rpb25zLnYxLkFwaUtleSKcAQoaQ3JlYXRlQ29sbGVjdGlvbktleVJlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQESHwoNY29sbGVjdGlvbl9pZBgCIAEoCUIIukgFcgOwAQESPwoHYXBpX2tleRgDIAEoCzIuLnFkcmFudC5jbG91ZC5zZXJ2ZXJsZXNzLmNvbGxlY3Rpb25zLnYxLkFwaUtleSJeChtDcmVhdGVDb2xsZWN0aW9uS2V5UmVzcG9uc2USPwoHYXBpX2tleRgBIAEoCzIuLnFkcmFudC5jbG91ZC5zZXJ2ZXJsZXNzLmNvbGxlY3Rpb25zLnYxLkFwaUtleSJ1ChpEZWxldGVDb2xsZWN0aW9uS2V5UmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIfCg1jb2xsZWN0aW9uX2lkGAIgASgJQgi6SAVyA7ABARIYCgZrZXlfaWQYAyABKAlCCLpIBXIDsAEBIh0KG0RlbGV0ZUNvbGxlY3Rpb25LZXlSZXNwb25zZSLRAwoGQXBpS2V5EgoKAmlkGAEgASgJEgwKBG5hbWUYAyABKAkSCwoDa2V5GAQgASgJEg8KB3Bvc3RmaXgYBSABKAkSLgoKY3JlYXRlZF9hdBgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASGAoQY3JlYXRlZF9ieV9lbWFpbBgHIAEoCRIdCgZhY2Nlc3MYCCABKAlCC7pICHIGUgFyUgF3SAASIwoDZXhwGAkgASgDQhG6SA4iDBiAyK+gJSiAlOvcA0gBiAEBEhwKCmFjY291bnRfaWQYCiABKAlCCLpIBXIDsAEBEh8KDWNvbGxlY3Rpb25faWQYCyABKAlCCLpIBXIDsAEBOqoBukimARqjAQoKYXBpX2tleS5pZBIadmFsdWUgbXVzdCBiZSBhIHZhbGlkIFVVSUQaeXRoaXMuaWQubWF0Y2hlcygnXlswLTlhLWZBLUZdezh9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezEyfSQnKSB8fCAhaGFzKHRoaXMuY3JlYXRlZF9hdClCDQoLYWNjZXNzX3R5cGVCBgoEX2V4cDLSBgoVQ29sbGVjdGlvbktleXNTZXJ2aWNlEooCChJMaXN0Q29sbGVjdGlvbktleXMSQS5xZHJhbnQuY2xvdWQuc2VydmVybGVzcy5jb2xsZWN0aW9ucy52MS5MaXN0Q29sbGVjdGlvbktleXNSZXF1ZXN0GkIucWRyYW50LmNsb3VkLnNlcnZlcmxlc3MuY29sbGVjdGlvbnMudjEuTGlzdENvbGxlY3Rpb25LZXlzUmVzcG9uc2UibYq1GBhyZWFkOnNlcnZlcmxlc3NfYXBpX2tleXOC0+STAksSSS9hcGkvc2VydmVybGVzcy92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25faWR9L2tleXMSkQIKE0NyZWF0ZUNvbGxlY3Rpb25LZXkSQi5xZHJhbnQuY2xvdWQuc2VydmVybGVzcy5jb2xsZWN0aW9ucy52MS5DcmVhdGVDb2xsZWN0aW9uS2V5UmVxdWVzdBpDLnFkcmFudC5jbG91ZC5zZXJ2ZXJsZXNzLmNvbGxlY3Rpb25zLnYxLkNyZWF0ZUNvbGxlY3Rpb25LZXlSZXNwb25zZSJxirUYGXdyaXRlOnNlcnZlcmxlc3NfYXBpX2tleXOC0+STAk46ASoiSS9hcGkvc2VydmVybGVzcy92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25faWR9L2tleXMSlwIKE0RlbGV0ZUNvbGxlY3Rpb25LZXkSQi5xZHJhbnQuY2xvdWQuc2VydmVybGVzcy5jb2xsZWN0aW9ucy52MS5EZWxldGVDb2xsZWN0aW9uS2V5UmVxdWVzdBpDLnFkcmFudC5jbG91ZC5zZXJ2ZXJsZXNzLmNvbGxlY3Rpb25zLnYxLkRlbGV0ZUNvbGxlY3Rpb25LZXlSZXNwb25zZSJ3irUYGXdyaXRlOnNlcnZlcmxlc3NfYXBpX2tleXOC0+STAlQqUi9hcGkvc2VydmVybGVzcy92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25faWR9L2tleXMve2tleV9pZH1C5QIKKmNvbS5xZHJhbnQuY2xvdWQuc2VydmVybGVzcy5jb2xsZWN0aW9ucy52MUITQ29sbGVjdGlvbktleXNQcm90b1ABWmVnaXRodWIuY29tL3FkcmFudC9xZHJhbnQtY2xvdWQtcHVibGljLWFwaS9nZW4vZ28vcWRyYW50L2Nsb3VkL3NlcnZlcmxlc3MvY29sbGVjdGlvbnMvdjE7Y29sbGVjdGlvbnN2MaICBFFDU0OqAiZRZHJhbnQuQ2xvdWQuU2VydmVybGVzcy5Db2xsZWN0aW9ucy5WMcoCJlFkcmFudFxDbG91ZFxTZXJ2ZXJsZXNzXENvbGxlY3Rpb25zXFYx4gIyUWRyYW50XENsb3VkXFNlcnZlcmxlc3NcQ29sbGVjdGlvbnNcVjFcR1BCTWV0YWRhdGHqAipRZHJhbnQ6OkNsb3VkOjpTZXJ2ZXJsZXNzOjpDb2xsZWN0aW9uczo6VjFiBnByb3RvMw", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common]);

/**
 * Request all api-keys associated with a collection
 *
 * @generated from message qdrant.cloud.serverless.collections.v1.ListCollectionKeysRequest
 */
export type ListCollectionKeysRequest = Message<"qdrant.cloud.serverless.collections.v1.ListCollectionKeysRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * Collection the keys belong to
   *
   * @generated from field: string collection_id = 2;
   */
  collectionId: string;
};

/**
 * Describes the message qdrant.cloud.serverless.collections.v1.ListCollectionKeysRequest.
 * Use `create(ListCollectionKeysRequestSchema)` to create a new message.
 */
export const ListCollectionKeysRequestSchema: GenMessage<ListCollectionKeysRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collections_v1_collection_keys, 0);

/**
 * Response containing all api-keys associated with a collection
 *
 * @generated from message qdrant.cloud.serverless.collections.v1.ListCollectionKeysResponse
 */
export type ListCollectionKeysResponse = Message<"qdrant.cloud.serverless.collections.v1.ListCollectionKeysResponse"> & {
  /**
   * List of API keys for the collection
   *
   * @generated from field: repeated qdrant.cloud.serverless.collections.v1.ApiKey keys = 1;
   */
  keys: ApiKey[];
};

/**
 * Describes the message qdrant.cloud.serverless.collections.v1.ListCollectionKeysResponse.
 * Use `create(ListCollectionKeysResponseSchema)` to create a new message.
 */
export const ListCollectionKeysResponseSchema: GenMessage<ListCollectionKeysResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collections_v1_collection_keys, 1);

/**
 * CreateCollectionKeyRequest defines parameters for creating a new API key
 *
 * @generated from message qdrant.cloud.serverless.collections.v1.CreateCollectionKeyRequest
 */
export type CreateCollectionKeyRequest = Message<"qdrant.cloud.serverless.collections.v1.CreateCollectionKeyRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * Collection the key will access
   *
   * @generated from field: string collection_id = 2;
   */
  collectionId: string;

  /**
   * The API key to create
   *
   * @generated from field: qdrant.cloud.serverless.collections.v1.ApiKey api_key = 3;
   */
  apiKey?: ApiKey;
};

/**
 * Describes the message qdrant.cloud.serverless.collections.v1.CreateCollectionKeyRequest.
 * Use `create(CreateCollectionKeyRequestSchema)` to create a new message.
 */
export const CreateCollectionKeyRequestSchema: GenMessage<CreateCollectionKeyRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collections_v1_collection_keys, 2);

/**
 * CollectionKeyResponse provides the API key after creation
 *
 * @generated from message qdrant.cloud.serverless.collections.v1.CreateCollectionKeyResponse
 */
export type CreateCollectionKeyResponse = Message<"qdrant.cloud.serverless.collections.v1.CreateCollectionKeyResponse"> & {
  /**
   * The newly created API key value
   *
   * @generated from field: qdrant.cloud.serverless.collections.v1.ApiKey api_key = 1;
   */
  apiKey?: ApiKey;
};

/**
 * Describes the message qdrant.cloud.serverless.collections.v1.CreateCollectionKeyResponse.
 * Use `create(CreateCollectionKeyResponseSchema)` to create a new message.
 */
export const CreateCollectionKeyResponseSchema: GenMessage<CreateCollectionKeyResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collections_v1_collection_keys, 3);

/**
 * DeleteCollectionKeyRequest identifies the API key to delete
 *
 * @generated from message qdrant.cloud.serverless.collections.v1.DeleteCollectionKeyRequest
 */
export type DeleteCollectionKeyRequest = Message<"qdrant.cloud.serverless.collections.v1.DeleteCollectionKeyRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * Collection the key belongs to
   *
   * @generated from field: string collection_id = 2;
   */
  collectionId: string;

  /**
   * ID of the key to delete
   *
   * @generated from field: string key_id = 3;
   */
  keyId: string;
};

/**
 * Describes the message qdrant.cloud.serverless.collections.v1.DeleteCollectionKeyRequest.
 * Use `create(DeleteCollectionKeyRequestSchema)` to create a new message.
 */
export const DeleteCollectionKeyRequestSchema: GenMessage<DeleteCollectionKeyRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collections_v1_collection_keys, 4);

/**
 * DeleteCollectionKeyResponse is an empty response for deletion confirmation
 *
 * Empty
 *
 * @generated from message qdrant.cloud.serverless.collections.v1.DeleteCollectionKeyResponse
 */
export type DeleteCollectionKeyResponse = Message<"qdrant.cloud.serverless.collections.v1.DeleteCollectionKeyResponse"> & {
};

/**
 * Describes the message qdrant.cloud.serverless.collections.v1.DeleteCollectionKeyResponse.
 * Use `create(DeleteCollectionKeyResponseSchema)` to create a new message.
 */
export const DeleteCollectionKeyResponseSchema: GenMessage<DeleteCollectionKeyResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collections_v1_collection_keys, 5);

/**
 * An ApiKey represents a JWT token to access a Qdrant cloud serverless collection.
 *
 * @generated from message qdrant.cloud.serverless.collections.v1.ApiKey
 */
export type ApiKey = Message<"qdrant.cloud.serverless.collections.v1.ApiKey"> & {
  /**
   * Unique identifier for the API key
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Human-readable name for the API key
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * The api key itself.
   * This is a read-only field and will be available only once in the return of CreateCollectionKey.
   * You should securely store this token, and it should be handled as a secret.
   *
   * @generated from field: string key = 4;
   */
  key: string;

  /**
   * Postfix for the collection api key, this represents the last bytes of the key.
   * This is a read-only field and will be available after a collection api key is created.
   *
   * @generated from field: string postfix = 5;
   */
  postfix: string;

  /**
   * Timestamp when the collection api key was created.
   * This is a read-only field and will be available after a collection api key is created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 6;
   */
  createdAt?: Timestamp;

  /**
   * The email of the user who created the collection api key.
   * This is a read-only field and will be available after a collection api key is created.
   *
   * @generated from field: string created_by_email = 7;
   */
  createdByEmail: string;

  /**
   * The access type
   *
   * @generated from oneof qdrant.cloud.serverless.collections.v1.ApiKey.access_type
   */
  accessType: {
    /**
     * A general access level claim, either "r" (read) or "w" (write).
     *
     * @generated from field: string access = 8;
     */
    value: string;
    case: "access";
  } | { case: undefined; value?: undefined };

  /**
   * The expiration time of the collection api key in seconds since the Unix epoch.
   *
   * @generated from field: optional int64 exp = 9;
   */
  exp?: bigint;

  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 10;
   */
  accountId: string;

  /**
   * The identifier of the collection (in Guid format).
   * This is a required field.
   *
   * @generated from field: string collection_id = 11;
   */
  collectionId: string;
};

/**
 * Describes the message qdrant.cloud.serverless.collections.v1.ApiKey.
 * Use `create(ApiKeySchema)` to create a new message.
 */
export const ApiKeySchema: GenMessage<ApiKey> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collections_v1_collection_keys, 6);

/**
 * Service for managing API keys for a serverless collection
 *
 * @generated from service qdrant.cloud.serverless.collections.v1.CollectionKeysService
 */
export const CollectionKeysService: GenService<{
  /**
   * ListCollectionKeys returns all API keys for a collection
   * Required Permissions:
   * - read:serverless_api_keys
   *
   * @generated from rpc qdrant.cloud.serverless.collections.v1.CollectionKeysService.ListCollectionKeys
   */
  listCollectionKeys: {
    methodKind: "unary";
    input: typeof ListCollectionKeysRequestSchema;
    output: typeof ListCollectionKeysResponseSchema;
  },
  /**
   * CreateCollectionKey creates a new API key for a collection
   * Required Permissions:
   * - write:serverless_api_keys
   *
   * @generated from rpc qdrant.cloud.serverless.collections.v1.CollectionKeysService.CreateCollectionKey
   */
  createCollectionKey: {
    methodKind: "unary";
    input: typeof CreateCollectionKeyRequestSchema;
    output: typeof CreateCollectionKeyResponseSchema;
  },
  /**
   * DeleteCollectionKey removes an API key from a collection
   * Required Permissions:
   * - write:serverless_api_keys
   *
   * @generated from rpc qdrant.cloud.serverless.collections.v1.CollectionKeysService.DeleteCollectionKey
   */
  deleteCollectionKey: {
    methodKind: "unary";
    input: typeof DeleteCollectionKeyRequestSchema;
    output: typeof DeleteCollectionKeyResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_serverless_collections_v1_collection_keys, 0);

