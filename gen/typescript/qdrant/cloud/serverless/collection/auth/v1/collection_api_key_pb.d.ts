// @generated by protoc-gen-es v2.9.0 with parameter "target=js+dts,import_extension=js,valid_types=protovalidate_required"
// @generated from file qdrant/cloud/serverless/collection/auth/v1/collection_api_key.proto (package qdrant.cloud.serverless.collection.auth.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file qdrant/cloud/serverless/collection/auth/v1/collection_api_key.proto.
 */
export declare const file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key: GenFile;

/**
 * Request all API keys associated with a collection
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysRequest
 */
export declare type ListCollectionApiKeysRequest = Message<"qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * Collection the API keys belong to (in GUID format).
   * This is a required field.
   *
   * @generated from field: string collection_id = 2;
   */
  collectionId: string;
};

export declare type ListCollectionApiKeysRequestValid = ListCollectionApiKeysRequest;

/**
 * Describes the message qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysRequest.
 * Use `create(ListCollectionApiKeysRequestSchema)` to create a new message.
 */
export declare const ListCollectionApiKeysRequestSchema: GenMessage<ListCollectionApiKeysRequest, {validType: ListCollectionApiKeysRequestValid}>;

/**
 * Response containing all API keys associated with a collection
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysResponse
 */
export declare type ListCollectionApiKeysResponse = Message<"qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysResponse"> & {
  /**
   * List of API keys for the collection
   *
   * @generated from field: repeated qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey items = 1;
   */
  items: CollectionApiKey[];
};

export declare type ListCollectionApiKeysResponseValid = ListCollectionApiKeysResponse;

/**
 * Describes the message qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysResponse.
 * Use `create(ListCollectionApiKeysResponseSchema)` to create a new message.
 */
export declare const ListCollectionApiKeysResponseSchema: GenMessage<ListCollectionApiKeysResponse, {validType: ListCollectionApiKeysResponseValid}>;

/**
 * CreateCollectionApiKeyRequest defines parameters for creating a new collection API key
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyRequest
 */
export declare type CreateCollectionApiKeyRequest = Message<"qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyRequest"> & {
  /**
   * The API key to create.
   * This is a required field.
   *
   * @generated from field: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey collection_api_key = 1;
   */
  collectionApiKey?: CollectionApiKey;
};

/**
 * CreateCollectionApiKeyRequest defines parameters for creating a new collection API key
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyRequest
 */
export declare type CreateCollectionApiKeyRequestValid = Message<"qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyRequest"> & {
  /**
   * The API key to create.
   * This is a required field.
   *
   * @generated from field: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey collection_api_key = 1;
   */
  collectionApiKey: CollectionApiKeyValid;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyRequest.
 * Use `create(CreateCollectionApiKeyRequestSchema)` to create a new message.
 */
export declare const CreateCollectionApiKeyRequestSchema: GenMessage<CreateCollectionApiKeyRequest, {validType: CreateCollectionApiKeyRequestValid}>;

/**
 * CollectionApiKeyResponse provides the API key after creation
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyResponse
 */
export declare type CreateCollectionApiKeyResponse = Message<"qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyResponse"> & {
  /**
   * The newly created API key value
   *
   * @generated from field: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey collection_api_key = 1;
   */
  collectionApiKey?: CollectionApiKey;
};

/**
 * CollectionApiKeyResponse provides the API key after creation
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyResponse
 */
export declare type CreateCollectionApiKeyResponseValid = Message<"qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyResponse"> & {
  /**
   * The newly created API key value
   *
   * @generated from field: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey collection_api_key = 1;
   */
  collectionApiKey: CollectionApiKeyValid;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyResponse.
 * Use `create(CreateCollectionApiKeyResponseSchema)` to create a new message.
 */
export declare const CreateCollectionApiKeyResponseSchema: GenMessage<CreateCollectionApiKeyResponse, {validType: CreateCollectionApiKeyResponseValid}>;

/**
 * DeleteCollectionApiKeyRequest identifies the API key to delete
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyRequest
 */
export declare type DeleteCollectionApiKeyRequest = Message<"qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * Collection the key belongs to (in GUID format).
   * This is a required field.
   *
   * @generated from field: string collection_id = 2;
   */
  collectionId: string;

  /**
   * ID of the key to delete (in GUID format).
   * This is a required field.
   *
   * @generated from field: string collection_api_key_id = 3;
   */
  collectionApiKeyId: string;
};

export declare type DeleteCollectionApiKeyRequestValid = DeleteCollectionApiKeyRequest;

/**
 * Describes the message qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyRequest.
 * Use `create(DeleteCollectionApiKeyRequestSchema)` to create a new message.
 */
export declare const DeleteCollectionApiKeyRequestSchema: GenMessage<DeleteCollectionApiKeyRequest, {validType: DeleteCollectionApiKeyRequestValid}>;

/**
 * DeleteCollectionApiKeyResponse is an empty response for deletion confirmation
 *
 * Empty
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyResponse
 */
export declare type DeleteCollectionApiKeyResponse = Message<"qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyResponse"> & {
};

export declare type DeleteCollectionApiKeyResponseValid = DeleteCollectionApiKeyResponse;

/**
 * Describes the message qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyResponse.
 * Use `create(DeleteCollectionApiKeyResponseSchema)` to create a new message.
 */
export declare const DeleteCollectionApiKeyResponseSchema: GenMessage<DeleteCollectionApiKeyResponse, {validType: DeleteCollectionApiKeyResponseValid}>;

/**
 * A CollectionApiKey represents one collection api key of a Qdrant cloud account.
 * This collection key can grant access to a Qdrant cloud serverless collection.
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey
 */
export declare type CollectionApiKey = Message<"qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey"> & {
  /**
   * Unique identifier for the collection api key (in GUID format).
   * This is a read-only field and will be available after a collection api key is created.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 2;
   */
  accountId: string;

  /**
   * Timestamp when the collection api key was created.
   * This is a read-only field and will be available after a collection api key is created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * The identifier of the collection (in GUID format).
   * This is a required field.
   *
   * @generated from field: string collection_id = 4;
   */
  collectionId: string;

  /**
   * Name of the collection api key.
   * This is a required field.
   * Name can only contain letters, numbers, spaces, underscores and dashes.
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * The expiration time of the collection api key. The key will be invalid after this time.
   * This field is optional, and if not provided, the key does not expire.
   *
   * @generated from field: optional google.protobuf.Timestamp expires_at = 6;
   */
  expiresAt?: Timestamp;

  /**
   * The type of access granted for the collection.
   * This is a required field.
   *
   * @generated from field: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyAccessType access_type = 7;
   */
  accessType: CollectionApiKeyAccessType;

  /**
   * The email of the user who created the collection api key.
   * This is an optional read-only field and will be available after a collection api key is created.
   * If the CollectionApiKey is created by an actual user the information will be filled-out, if it's created programmatically the field will be empty.
   *
   * @generated from field: string created_by_email = 8;
   */
  createdByEmail: string;

  /**
   * Postfix for the collection api key, this represents the last bytes of the key.
   * This is a read-only field and will be available after a collection api key is created.
   *
   * @generated from field: string postfix = 9;
   */
  postfix: string;

  /**
   * The key for the collection api key.
   * This is a read-only field and will be available only once in the response of CreateCollectionApiKey.
   * You should securely store this key and it should be handled as a secret.
   *
   * @generated from field: string key = 10;
   */
  key: string;
};

export declare type CollectionApiKeyValid = CollectionApiKey;

/**
 * Describes the message qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey.
 * Use `create(CollectionApiKeySchema)` to create a new message.
 */
export declare const CollectionApiKeySchema: GenMessage<CollectionApiKey, {validType: CollectionApiKeyValid}>;

/**
 * CollectionApiKeyAccessType defines the access types that can be granted to a collection API key.
 * For a detailed list of actions allowed for each access type, see:
 * https://qdrant.tech/documentation/guides/security/#table-of-access
 *
 * @generated from enum qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyAccessType
 */
export enum CollectionApiKeyAccessType {
  /**
   * Unspecified access type.
   *
   * @generated from enum value: COLLECTION_API_KEY_ACCESS_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Grants access to perform collection-related actions that only read data.
   *
   * @generated from enum value: COLLECTION_API_KEY_ACCESS_TYPE_READ_ONLY = 1;
   */
  READ_ONLY = 1,

  /**
   * Grants access to perform collection-related actions that read or write data (like `upsert points`).
   *
   * @generated from enum value: COLLECTION_API_KEY_ACCESS_TYPE_READ_WRITE = 2;
   */
  READ_WRITE = 2,
}

/**
 * Describes the enum qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyAccessType.
 */
export declare const CollectionApiKeyAccessTypeSchema: GenEnum<CollectionApiKeyAccessType>;

/**
 * Service for managing API keys for a serverless collection
 *
 * @generated from service qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService
 */
export declare const CollectionApiKeyService: GenService<{
  /**
   * ListCollectionApiKeys returns all API keys for a collection
   * Required Permissions:
   * - read:serverless_api_keys
   *
   * @generated from rpc qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService.ListCollectionApiKeys
   */
  listCollectionApiKeys: {
    methodKind: "unary";
    input: typeof ListCollectionApiKeysRequestSchema;
    output: typeof ListCollectionApiKeysResponseSchema;
  },
  /**
   * CreateCollectionApiKey creates a new API key for a collection
   * Required Permissions:
   * - write:serverless_api_keys
   *
   * @generated from rpc qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService.CreateCollectionApiKey
   */
  createCollectionApiKey: {
    methodKind: "unary";
    input: typeof CreateCollectionApiKeyRequestSchema;
    output: typeof CreateCollectionApiKeyResponseSchema;
  },
  /**
   * DeleteCollectionApiKey removes an API key from a collection
   * Required Permissions:
   * - delete:serverless_api_keys
   *
   * @generated from rpc qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService.DeleteCollectionApiKey
   */
  deleteCollectionApiKey: {
    methodKind: "unary";
    input: typeof DeleteCollectionApiKeyRequestSchema;
    output: typeof DeleteCollectionApiKeyResponseSchema;
  },
}>;

