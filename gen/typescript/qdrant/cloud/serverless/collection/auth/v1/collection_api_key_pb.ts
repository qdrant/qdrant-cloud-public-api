// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file qdrant/cloud/serverless/collection/auth/v1/collection_api_key.proto (package qdrant.cloud.serverless.collection.auth.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../../../../google/api/annotations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../../../common/v1/common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file qdrant/cloud/serverless/collection/auth/v1/collection_api_key.proto.
 */
export const file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key: GenFile = /*@__PURE__*/
  fileDesc("CkNxZHJhbnQvY2xvdWQvc2VydmVybGVzcy9jb2xsZWN0aW9uL2F1dGgvdjEvY29sbGVjdGlvbl9hcGlfa2V5LnByb3RvEipxZHJhbnQuY2xvdWQuc2VydmVybGVzcy5jb2xsZWN0aW9uLmF1dGgudjEiXQocTGlzdENvbGxlY3Rpb25BcGlLZXlzUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIfCg1jb2xsZWN0aW9uX2lkGAIgASgJQgi6SAVyA7ABASJsCh1MaXN0Q29sbGVjdGlvbkFwaUtleXNSZXNwb25zZRJLCgVpdGVtcxgBIAMoCzI8LnFkcmFudC5jbG91ZC5zZXJ2ZXJsZXNzLmNvbGxlY3Rpb24uYXV0aC52MS5Db2xsZWN0aW9uQXBpS2V5IrgBCh1DcmVhdGVDb2xsZWN0aW9uQXBpS2V5UmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIfCg1jb2xsZWN0aW9uX2lkGAIgASgJQgi6SAVyA7ABARJYChJjb2xsZWN0aW9uX2FwaV9rZXkYAyABKAsyPC5xZHJhbnQuY2xvdWQuc2VydmVybGVzcy5jb2xsZWN0aW9uLmF1dGgudjEuQ29sbGVjdGlvbkFwaUtleSJ6Ch5DcmVhdGVDb2xsZWN0aW9uQXBpS2V5UmVzcG9uc2USWAoSY29sbGVjdGlvbl9hcGlfa2V5GAEgASgLMjwucWRyYW50LmNsb3VkLnNlcnZlcmxlc3MuY29sbGVjdGlvbi5hdXRoLnYxLkNvbGxlY3Rpb25BcGlLZXkihwEKHURlbGV0ZUNvbGxlY3Rpb25BcGlLZXlSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEh8KDWNvbGxlY3Rpb25faWQYAiABKAlCCLpIBXIDsAEBEicKFWNvbGxlY3Rpb25fYXBpX2tleV9pZBgDIAEoCUIIukgFcgOwAQEiIAoeRGVsZXRlQ29sbGVjdGlvbkFwaUtleVJlc3BvbnNlIpoEChBDb2xsZWN0aW9uQXBpS2V5EgoKAmlkGAEgASgJEhwKCmFjY291bnRfaWQYAiABKAlCCLpIBXIDsAEBEi4KCmNyZWF0ZWRfYXQYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEh8KDWNvbGxlY3Rpb25faWQYBCABKAlCCLpIBXIDsAEBEiQKBG5hbWUYBSABKAlCFrpIE3IREAQYgAEyCl5bXHdccy1dKyQSMwoKZXhwaXJlc19hdBgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAIgBARIxCgthY2Nlc3NfdHlwZRgHIAEoCUIcukgZchdSCXJlYWQtb25seVIKcmVhZC13cml0ZRIYChBjcmVhdGVkX2J5X2VtYWlsGAggASgJEg8KB3Bvc3RmaXgYCSABKAkSCwoDa2V5GAogASgJOrUBukixARquAQoVY29sbGVjdGlvbl9hcGlfa2V5LmlkEhp2YWx1ZSBtdXN0IGJlIGEgdmFsaWQgVVVJRBp5dGhpcy5pZC5tYXRjaGVzKCdeWzAtOWEtZkEtRl17OH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17MTJ9JCcpIHx8ICFoYXModGhpcy5jcmVhdGVkX2F0KUINCgtfZXhwaXJlc19hdDKyBwoXQ29sbGVjdGlvbkFwaUtleVNlcnZpY2USpAIKFUxpc3RDb2xsZWN0aW9uQXBpS2V5cxJILnFkcmFudC5jbG91ZC5zZXJ2ZXJsZXNzLmNvbGxlY3Rpb24uYXV0aC52MS5MaXN0Q29sbGVjdGlvbkFwaUtleXNSZXF1ZXN0GkkucWRyYW50LmNsb3VkLnNlcnZlcmxlc3MuY29sbGVjdGlvbi5hdXRoLnYxLkxpc3RDb2xsZWN0aW9uQXBpS2V5c1Jlc3BvbnNlInaKtRgYcmVhZDpzZXJ2ZXJsZXNzX2FwaV9rZXlzgtPkkwJUElIvYXBpL3NlcnZlcmxlc3MvYXV0aC92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vY29sbGVjdGlvbnMve2NvbGxlY3Rpb25faWR9L2FwaS1rZXlzEqsCChZDcmVhdGVDb2xsZWN0aW9uQXBpS2V5EkkucWRyYW50LmNsb3VkLnNlcnZlcmxlc3MuY29sbGVjdGlvbi5hdXRoLnYxLkNyZWF0ZUNvbGxlY3Rpb25BcGlLZXlSZXF1ZXN0GkoucWRyYW50LmNsb3VkLnNlcnZlcmxlc3MuY29sbGVjdGlvbi5hdXRoLnYxLkNyZWF0ZUNvbGxlY3Rpb25BcGlLZXlSZXNwb25zZSJ6irUYGXdyaXRlOnNlcnZlcmxlc3NfYXBpX2tleXOC0+STAlc6ASoiUi9hcGkvc2VydmVybGVzcy9hdXRoL3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbl9pZH0vYXBpLWtleXMSwQIKFkRlbGV0ZUNvbGxlY3Rpb25BcGlLZXkSSS5xZHJhbnQuY2xvdWQuc2VydmVybGVzcy5jb2xsZWN0aW9uLmF1dGgudjEuRGVsZXRlQ29sbGVjdGlvbkFwaUtleVJlcXVlc3QaSi5xZHJhbnQuY2xvdWQuc2VydmVybGVzcy5jb2xsZWN0aW9uLmF1dGgudjEuRGVsZXRlQ29sbGVjdGlvbkFwaUtleVJlc3BvbnNlIo8BirUYGXdyaXRlOnNlcnZlcmxlc3NfYXBpX2tleXOC0+STAmwqai9hcGkvc2VydmVybGVzcy9hdXRoL3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbl9pZH0vYXBpLWtleXMve2NvbGxlY3Rpb25fYXBpX2tleV9pZH1C+gIKLmNvbS5xZHJhbnQuY2xvdWQuc2VydmVybGVzcy5jb2xsZWN0aW9uLmF1dGgudjFCFUNvbGxlY3Rpb25BcGlLZXlQcm90b1ABWmJnaXRodWIuY29tL3FkcmFudC9xZHJhbnQtY2xvdWQtcHVibGljLWFwaS9nZW4vZ28vcWRyYW50L2Nsb3VkL3NlcnZlcmxlc3MvY29sbGVjdGlvbi9hdXRoL3YxO2F1dGh2MaICBVFDU0NBqgIqUWRyYW50LkNsb3VkLlNlcnZlcmxlc3MuQ29sbGVjdGlvbi5BdXRoLlYxygIqUWRyYW50XENsb3VkXFNlcnZlcmxlc3NcQ29sbGVjdGlvblxBdXRoXFYx4gI2UWRyYW50XENsb3VkXFNlcnZlcmxlc3NcQ29sbGVjdGlvblxBdXRoXFYxXEdQQk1ldGFkYXRh6gIvUWRyYW50OjpDbG91ZDo6U2VydmVybGVzczo6Q29sbGVjdGlvbjo6QXV0aDo6VjFiBnByb3RvMw", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common]);

/**
 * Request all API keys associated with a collection
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysRequest
 */
export type ListCollectionApiKeysRequest = Message<"qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * Collection the API keys belong to (in Guid format).
   * This is a required field.
   *
   * @generated from field: string collection_id = 2;
   */
  collectionId: string;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysRequest.
 * Use `create(ListCollectionApiKeysRequestSchema)` to create a new message.
 */
export const ListCollectionApiKeysRequestSchema: GenMessage<ListCollectionApiKeysRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key, 0);

/**
 * Response containing all API keys associated with a collection
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysResponse
 */
export type ListCollectionApiKeysResponse = Message<"qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysResponse"> & {
  /**
   * List of API keys for the collection
   *
   * @generated from field: repeated qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey items = 1;
   */
  items: CollectionApiKey[];
};

/**
 * Describes the message qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysResponse.
 * Use `create(ListCollectionApiKeysResponseSchema)` to create a new message.
 */
export const ListCollectionApiKeysResponseSchema: GenMessage<ListCollectionApiKeysResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key, 1);

/**
 * CreateCollectionApiKeyRequest defines parameters for creating a new collection API key
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyRequest
 */
export type CreateCollectionApiKeyRequest = Message<"qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * Collection the key will access (in Guid format).
   * This is a required field.
   *
   * @generated from field: string collection_id = 2;
   */
  collectionId: string;

  /**
   * The API key to create.
   * This is a required field.
   *
   * @generated from field: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey collection_api_key = 3;
   */
  collectionApiKey?: CollectionApiKey;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyRequest.
 * Use `create(CreateCollectionApiKeyRequestSchema)` to create a new message.
 */
export const CreateCollectionApiKeyRequestSchema: GenMessage<CreateCollectionApiKeyRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key, 2);

/**
 * CollectionApiKeyResponse provides the API key after creation
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyResponse
 */
export type CreateCollectionApiKeyResponse = Message<"qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyResponse"> & {
  /**
   * The newly created API key value
   *
   * @generated from field: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey collection_api_key = 1;
   */
  collectionApiKey?: CollectionApiKey;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyResponse.
 * Use `create(CreateCollectionApiKeyResponseSchema)` to create a new message.
 */
export const CreateCollectionApiKeyResponseSchema: GenMessage<CreateCollectionApiKeyResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key, 3);

/**
 * DeleteCollectionApiKeyRequest identifies the API key to delete
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyRequest
 */
export type DeleteCollectionApiKeyRequest = Message<"qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * Collection the key belongs to (in Guid format).
   * This is a required field.
   *
   * @generated from field: string collection_id = 2;
   */
  collectionId: string;

  /**
   * ID of the key to delete (in Guid format).
   * This is a required field.
   *
   * @generated from field: string collection_api_key_id = 3;
   */
  collectionApiKeyId: string;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyRequest.
 * Use `create(DeleteCollectionApiKeyRequestSchema)` to create a new message.
 */
export const DeleteCollectionApiKeyRequestSchema: GenMessage<DeleteCollectionApiKeyRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key, 4);

/**
 * DeleteCollectionApiKeyResponse is an empty response for deletion confirmation
 *
 * Empty
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyResponse
 */
export type DeleteCollectionApiKeyResponse = Message<"qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyResponse"> & {
};

/**
 * Describes the message qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyResponse.
 * Use `create(DeleteCollectionApiKeyResponseSchema)` to create a new message.
 */
export const DeleteCollectionApiKeyResponseSchema: GenMessage<DeleteCollectionApiKeyResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key, 5);

/**
 * A CollectionApiKey represents one collection api key of a Qdrant cloud account.
 * This collection key can grant access to a Qdrant cloud serverless collection.
 *
 * @generated from message qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey
 */
export type CollectionApiKey = Message<"qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey"> & {
  /**
   * Unique identifier for the collection api key (in Guid format).
   * This is a read-only field and will be available after a collection api key is created.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 2;
   */
  accountId: string;

  /**
   * Timestamp when the collection api key was created.
   * This is a read-only field and will be available after a collection api key is created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * The identifier of the collection (in Guid format).
   * This is a required field.
   *
   * @generated from field: string collection_id = 4;
   */
  collectionId: string;

  /**
   * Name of the collection api key.
   * This is a required field.
   * Name can only contain letters, numbers, spaces, underscores and dashes.
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * The expiration time of the collection api key. The key will be invalid after this time.
   * This field is optional, and if not provided, the key does not expire.
   *
   * @generated from field: optional google.protobuf.Timestamp expires_at = 6;
   */
  expiresAt?: Timestamp;

  /**
   * The type of access granted for the collection.
   * - "read-only": Grants access to perform collection-related actions that only read data.
   * - "read-write": Grants access to perform collection-related actions that read or write data (like `upsert points`).
   * For a detailed list of actions allowed for each access type, see:
   * https://qdrant.tech/documentation/guides/security/#table-of-access
   * This is a required field.
   *
   * @generated from field: string access_type = 7;
   */
  accessType: string;

  /**
   * The email of the user who created the collection api key.
   * This is a read-only field and will be available after a collection api key is created.
   *
   * @generated from field: string created_by_email = 8;
   */
  createdByEmail: string;

  /**
   * Postfix for the collection api key, this represents the last bytes of the key.
   * This is a read-only field and will be available after a collection api key is created.
   *
   * @generated from field: string postfix = 9;
   */
  postfix: string;

  /**
   * The key for the collection api key.
   * This is a read-only field and will be available only once in the response of CreateCollectionApiKey.
   * You should securely store this key and it should be handled as a secret.
   *
   * @generated from field: string key = 10;
   */
  key: string;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey.
 * Use `create(CollectionApiKeySchema)` to create a new message.
 */
export const CollectionApiKeySchema: GenMessage<CollectionApiKey> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key, 6);

/**
 * Service for managing API keys for a serverless collection
 *
 * @generated from service qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService
 */
export const CollectionApiKeyService: GenService<{
  /**
   * ListCollectionApiKeys returns all API keys for a collection
   * Required Permissions:
   * - read:serverless_api_keys
   *
   * @generated from rpc qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService.ListCollectionApiKeys
   */
  listCollectionApiKeys: {
    methodKind: "unary";
    input: typeof ListCollectionApiKeysRequestSchema;
    output: typeof ListCollectionApiKeysResponseSchema;
  },
  /**
   * CreateCollectionApiKey creates a new API key for a collection
   * Required Permissions:
   * - write:serverless_api_keys
   *
   * @generated from rpc qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService.CreateCollectionApiKey
   */
  createCollectionApiKey: {
    methodKind: "unary";
    input: typeof CreateCollectionApiKeyRequestSchema;
    output: typeof CreateCollectionApiKeyResponseSchema;
  },
  /**
   * DeleteCollectionApiKey removes an API key from a collection
   * Required Permissions:
   * - write:serverless_api_keys
   *
   * @generated from rpc qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService.DeleteCollectionApiKey
   */
  deleteCollectionApiKey: {
    methodKind: "unary";
    input: typeof DeleteCollectionApiKeyRequestSchema;
    output: typeof DeleteCollectionApiKeyResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key, 0);

