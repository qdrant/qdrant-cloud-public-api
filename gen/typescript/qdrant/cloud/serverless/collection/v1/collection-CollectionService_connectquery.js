// @generated by protoc-gen-connect-query v0.4.1
// @generated from file qdrant/cloud/serverless/collection/v1/collection.proto (package qdrant.cloud.serverless.collection.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { createQueryService } from "@bufbuild/connect-query";
import { MethodKind } from "@bufbuild/protobuf";
import { CreateCollectionRequest, CreateCollectionResponse, DeleteCollectionRequest, DeleteCollectionResponse, ListCollectionsRequest, ListCollectionsResponse, UpgradeCollectionRequest, UpgradeCollectionResponse } from "./collection_pb.js";

export const typeName = "qdrant.cloud.serverless.collection.v1.CollectionService";

/**
 * ListCollections returns all collections for the authenticated user
 * Required Permissions:
 * - write:serverless
 *
 * @generated from rpc qdrant.cloud.serverless.collection.v1.CollectionService.ListCollections
 */
export const listCollections = createQueryService({
  service: {
    methods: {
      listCollections: {
        name: "ListCollections",
        kind: MethodKind.Unary,
        I: ListCollectionsRequest,
        O: ListCollectionsResponse,
      },
    },
    typeName: "qdrant.cloud.serverless.collection.v1.CollectionService",
  },
}).listCollections;

/**
 * CreateCollection creates a new collection with the specified configuration
 * Required Permissions:
 * - write:serverless
 *
 * @generated from rpc qdrant.cloud.serverless.collection.v1.CollectionService.CreateCollection
 */
export const createCollection = createQueryService({
  service: {
    methods: {
      createCollection: {
        name: "CreateCollection",
        kind: MethodKind.Unary,
        I: CreateCollectionRequest,
        O: CreateCollectionResponse,
      },
    },
    typeName: "qdrant.cloud.serverless.collection.v1.CollectionService",
  },
}).createCollection;

/**
 * Upgrade collection: If current user have paid account, this API will lift the limit of the collection
 * Required Permissions:
 * - write:serverless
 *
 * @generated from rpc qdrant.cloud.serverless.collection.v1.CollectionService.UpgradeCollection
 */
export const upgradeCollection = createQueryService({
  service: {
    methods: {
      upgradeCollection: {
        name: "UpgradeCollection",
        kind: MethodKind.Unary,
        I: UpgradeCollectionRequest,
        O: UpgradeCollectionResponse,
      },
    },
    typeName: "qdrant.cloud.serverless.collection.v1.CollectionService",
  },
}).upgradeCollection;

/**
 * DeleteCollection removes a collection by ID
 * Required Permissions:
 * - write:serverless
 *
 * @generated from rpc qdrant.cloud.serverless.collection.v1.CollectionService.DeleteCollection
 */
export const deleteCollection = createQueryService({
  service: {
    methods: {
      deleteCollection: {
        name: "DeleteCollection",
        kind: MethodKind.Unary,
        I: DeleteCollectionRequest,
        O: DeleteCollectionResponse,
      },
    },
    typeName: "qdrant.cloud.serverless.collection.v1.CollectionService",
  },
}).deleteCollection;
