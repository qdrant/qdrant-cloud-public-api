// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file qdrant/cloud/serverless/collection/v1/collection.proto (package qdrant.cloud.serverless.collection.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../../../google/api/annotations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../../common/v1/common_pb";
import type { CollectionConfiguration } from "./collection_config_pb";
import { file_qdrant_cloud_serverless_collection_v1_collection_config } from "./collection_config_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file qdrant/cloud/serverless/collection/v1/collection.proto.
 */
export const file_qdrant_cloud_serverless_collection_v1_collection: GenFile = /*@__PURE__*/
  fileDesc("CjZxZHJhbnQvY2xvdWQvc2VydmVybGVzcy9jb2xsZWN0aW9uL3YxL2NvbGxlY3Rpb24ucHJvdG8SJXFkcmFudC5jbG91ZC5zZXJ2ZXJsZXNzLmNvbGxlY3Rpb24udjEiNgoWTGlzdENvbGxlY3Rpb25zUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABASJhChdMaXN0Q29sbGVjdGlvbnNSZXNwb25zZRJGCgtjb2xsZWN0aW9ucxgBIAMoCzIxLnFkcmFudC5jbG91ZC5zZXJ2ZXJsZXNzLmNvbGxlY3Rpb24udjEuQ29sbGVjdGlvbiJgChdDcmVhdGVDb2xsZWN0aW9uUmVxdWVzdBJFCgpjb2xsZWN0aW9uGAEgASgLMjEucWRyYW50LmNsb3VkLnNlcnZlcmxlc3MuY29sbGVjdGlvbi52MS5Db2xsZWN0aW9uImEKGENyZWF0ZUNvbGxlY3Rpb25SZXNwb25zZRJFCgpjb2xsZWN0aW9uGAEgASgLMjEucWRyYW50LmNsb3VkLnNlcnZlcmxlc3MuY29sbGVjdGlvbi52MS5Db2xsZWN0aW9uIlkKGFVwZ3JhZGVDb2xsZWN0aW9uUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIfCg1jb2xsZWN0aW9uX2lkGAIgASgJQgi6SAVyA7ABASIbChlVcGdyYWRlQ29sbGVjdGlvblJlc3BvbnNlIlgKF0RlbGV0ZUNvbGxlY3Rpb25SZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEh8KDWNvbGxlY3Rpb25faWQYAiABKAlCCLpIBXIDsAEBIhoKGERlbGV0ZUNvbGxlY3Rpb25SZXNwb25zZSKDBQoKQ29sbGVjdGlvbhIKCgJpZBgBIAEoCRIuCgpjcmVhdGVkX2F0GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIcCgphY2NvdW50X2lkGAMgASgJQgi6SAVyA7ABARIpCgRuYW1lGAQgASgJQhu6SBhyFhAEGEAyEF5bYS16QS1aMC05LV9dKyQSLgoKZGVsZXRlZF9hdBgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMwoOY2xvdWRfcHJvdmlkZXIYCiABKAlCFrpIE3IRUgNhd3NSA2djcFIFYXp1cmVIAIgBARIZCgxjbG91ZF9yZWdpb24YCyABKAlIAYgBARJVCg1jb25maWd1cmF0aW9uGBQgASgLMj4ucWRyYW50LmNsb3VkLnNlcnZlcmxlc3MuY29sbGVjdGlvbi52MS5Db2xsZWN0aW9uQ29uZmlndXJhdGlvbhJFCgVzdGF0ZRhkIAEoCzI2LnFkcmFudC5jbG91ZC5zZXJ2ZXJsZXNzLmNvbGxlY3Rpb24udjEuQ29sbGVjdGlvblN0YXRlOq0BukipARqmAQoNY29sbGVjdGlvbi5pZBIadmFsdWUgbXVzdCBiZSBhIHZhbGlkIFVVSUQaeXRoaXMuaWQubWF0Y2hlcygnXlswLTlhLWZBLUZdezh9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezEyfSQnKSB8fCAhaGFzKHRoaXMuY3JlYXRlZF9hdClCEQoPX2Nsb3VkX3Byb3ZpZGVyQg8KDV9jbG91ZF9yZWdpb24isAEKD0NvbGxlY3Rpb25TdGF0ZRIxCgVwaGFzZRgBIAEoCUIiukgfch1SBXJlYWR5Ugpwcm9jZXNzaW5nUghkaXNhYmxlZBIOCgZyZWFzb24YAiABKAkSTQoIZW5kcG9pbnQYByABKAsyNi5xZHJhbnQuY2xvdWQuc2VydmVybGVzcy5jb2xsZWN0aW9uLnYxLkNsdXN0ZXJFbmRwb2ludEgAiAEBQgsKCV9lbmRwb2ludCJOCg9DbHVzdGVyRW5kcG9pbnQSFQoDdXJsGAEgASgJQgi6SAVyA6gBARIRCglyZXN0X3BvcnQYAiABKAUSEQoJZ3JwY19wb3J0GAMgASgFMv0HChFDb2xsZWN0aW9uU2VydmljZRLiAQoPTGlzdENvbGxlY3Rpb25zEj0ucWRyYW50LmNsb3VkLnNlcnZlcmxlc3MuY29sbGVjdGlvbi52MS5MaXN0Q29sbGVjdGlvbnNSZXF1ZXN0Gj4ucWRyYW50LmNsb3VkLnNlcnZlcmxlc3MuY29sbGVjdGlvbi52MS5MaXN0Q29sbGVjdGlvbnNSZXNwb25zZSJQirUYEHdyaXRlOnNlcnZlcmxlc3OC0+STAjYSNC9hcGkvc2VydmVybGVzcy92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vY29sbGVjdGlvbnMSjAIKEENyZWF0ZUNvbGxlY3Rpb24SPi5xZHJhbnQuY2xvdWQuc2VydmVybGVzcy5jb2xsZWN0aW9uLnYxLkNyZWF0ZUNvbGxlY3Rpb25SZXF1ZXN0Gj8ucWRyYW50LmNsb3VkLnNlcnZlcmxlc3MuY29sbGVjdGlvbi52MS5DcmVhdGVDb2xsZWN0aW9uUmVzcG9uc2Uid4q1GBB3cml0ZTpzZXJ2ZXJsZXNzkrUYFWNvbGxlY3Rpb24uYWNjb3VudF9pZILT5JMCRDoBKiI/L2FwaS9zZXJ2ZXJsZXNzL3YxL2FjY291bnRzL3tjb2xsZWN0aW9uLmFjY291bnRfaWR9L2NvbGxlY3Rpb25zEvsBChFVcGdyYWRlQ29sbGVjdGlvbhI/LnFkcmFudC5jbG91ZC5zZXJ2ZXJsZXNzLmNvbGxlY3Rpb24udjEuVXBncmFkZUNvbGxlY3Rpb25SZXF1ZXN0GkAucWRyYW50LmNsb3VkLnNlcnZlcmxlc3MuY29sbGVjdGlvbi52MS5VcGdyYWRlQ29sbGVjdGlvblJlc3BvbnNlImOKtRgQd3JpdGU6c2VydmVybGVzc4LT5JMCSToBKhpEL2FwaS9zZXJ2ZXJsZXNzL3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9jb2xsZWN0aW9ucy97Y29sbGVjdGlvbl9pZH0S9QEKEERlbGV0ZUNvbGxlY3Rpb24SPi5xZHJhbnQuY2xvdWQuc2VydmVybGVzcy5jb2xsZWN0aW9uLnYxLkRlbGV0ZUNvbGxlY3Rpb25SZXF1ZXN0Gj8ucWRyYW50LmNsb3VkLnNlcnZlcmxlc3MuY29sbGVjdGlvbi52MS5EZWxldGVDb2xsZWN0aW9uUmVzcG9uc2UiYIq1GBB3cml0ZTpzZXJ2ZXJsZXNzgtPkkwJGKkQvYXBpL3NlcnZlcmxlc3MvdjEvYWNjb3VudHMve2FjY291bnRfaWR9L2NvbGxlY3Rpb25zL3tjb2xsZWN0aW9uX2lkfULaAgopY29tLnFkcmFudC5jbG91ZC5zZXJ2ZXJsZXNzLmNvbGxlY3Rpb24udjFCD0NvbGxlY3Rpb25Qcm90b1ABWmNnaXRodWIuY29tL3FkcmFudC9xZHJhbnQtY2xvdWQtcHVibGljLWFwaS9nZW4vZ28vcWRyYW50L2Nsb3VkL3NlcnZlcmxlc3MvY29sbGVjdGlvbi92MTtjb2xsZWN0aW9udjGiAgRRQ1NDqgIlUWRyYW50LkNsb3VkLlNlcnZlcmxlc3MuQ29sbGVjdGlvbi5WMcoCJVFkcmFudFxDbG91ZFxTZXJ2ZXJsZXNzXENvbGxlY3Rpb25cVjHiAjFRZHJhbnRcQ2xvdWRcU2VydmVybGVzc1xDb2xsZWN0aW9uXFYxXEdQQk1ldGFkYXRh6gIpUWRyYW50OjpDbG91ZDo6U2VydmVybGVzczo6Q29sbGVjdGlvbjo6VjFiBnByb3RvMw", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common, file_qdrant_cloud_serverless_collection_v1_collection_config]);

/**
 * ListCollectionsRequest is an empty request to list collections
 *
 * @generated from message qdrant.cloud.serverless.collection.v1.ListCollectionsRequest
 */
export type ListCollectionsRequest = Message<"qdrant.cloud.serverless.collection.v1.ListCollectionsRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.v1.ListCollectionsRequest.
 * Use `create(ListCollectionsRequestSchema)` to create a new message.
 */
export const ListCollectionsRequestSchema: GenMessage<ListCollectionsRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_v1_collection, 0);

/**
 * ListCollectionsResponse contains the list of collections
 *
 * @generated from message qdrant.cloud.serverless.collection.v1.ListCollectionsResponse
 */
export type ListCollectionsResponse = Message<"qdrant.cloud.serverless.collection.v1.ListCollectionsResponse"> & {
  /**
   * List of collections with their details
   *
   * @generated from field: repeated qdrant.cloud.serverless.collection.v1.Collection collections = 1;
   */
  collections: Collection[];
};

/**
 * Describes the message qdrant.cloud.serverless.collection.v1.ListCollectionsResponse.
 * Use `create(ListCollectionsResponseSchema)` to create a new message.
 */
export const ListCollectionsResponseSchema: GenMessage<ListCollectionsResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_v1_collection, 1);

/**
 * CreateCollectionRequest defines parameters for creating a new collection
 *
 * @generated from message qdrant.cloud.serverless.collection.v1.CreateCollectionRequest
 */
export type CreateCollectionRequest = Message<"qdrant.cloud.serverless.collection.v1.CreateCollectionRequest"> & {
  /**
   * Collection represents a vector search collection in the Qdrant serverless environment
   *
   * @generated from field: qdrant.cloud.serverless.collection.v1.Collection collection = 1;
   */
  collection?: Collection;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.v1.CreateCollectionRequest.
 * Use `create(CreateCollectionRequestSchema)` to create a new message.
 */
export const CreateCollectionRequestSchema: GenMessage<CreateCollectionRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_v1_collection, 2);

/**
 * CollectionResponse provides details about a created collection
 *
 * @generated from message qdrant.cloud.serverless.collection.v1.CreateCollectionResponse
 */
export type CreateCollectionResponse = Message<"qdrant.cloud.serverless.collection.v1.CreateCollectionResponse"> & {
  /**
   * Collection represents a vector search collection in the Qdrant serverless environment
   *
   * @generated from field: qdrant.cloud.serverless.collection.v1.Collection collection = 1;
   */
  collection?: Collection;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.v1.CreateCollectionResponse.
 * Use `create(CreateCollectionResponseSchema)` to create a new message.
 */
export const CreateCollectionResponseSchema: GenMessage<CreateCollectionResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_v1_collection, 3);

/**
 * Upgrade limits of the specified collection
 *
 * @generated from message qdrant.cloud.serverless.collection.v1.UpgradeCollectionRequest
 */
export type UpgradeCollectionRequest = Message<"qdrant.cloud.serverless.collection.v1.UpgradeCollectionRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * ID of the collection to upgrade
   *
   * @generated from field: string collection_id = 2;
   */
  collectionId: string;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.v1.UpgradeCollectionRequest.
 * Use `create(UpgradeCollectionRequestSchema)` to create a new message.
 */
export const UpgradeCollectionRequestSchema: GenMessage<UpgradeCollectionRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_v1_collection, 4);

/**
 * Response for upgrading collection
 *
 * Empty
 *
 * @generated from message qdrant.cloud.serverless.collection.v1.UpgradeCollectionResponse
 */
export type UpgradeCollectionResponse = Message<"qdrant.cloud.serverless.collection.v1.UpgradeCollectionResponse"> & {
};

/**
 * Describes the message qdrant.cloud.serverless.collection.v1.UpgradeCollectionResponse.
 * Use `create(UpgradeCollectionResponseSchema)` to create a new message.
 */
export const UpgradeCollectionResponseSchema: GenMessage<UpgradeCollectionResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_v1_collection, 5);

/**
 * DeleteCollectionRequest identifies the collection to delete
 *
 * @generated from message qdrant.cloud.serverless.collection.v1.DeleteCollectionRequest
 */
export type DeleteCollectionRequest = Message<"qdrant.cloud.serverless.collection.v1.DeleteCollectionRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * ID of the collection to delete
   *
   * @generated from field: string collection_id = 2;
   */
  collectionId: string;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.v1.DeleteCollectionRequest.
 * Use `create(DeleteCollectionRequestSchema)` to create a new message.
 */
export const DeleteCollectionRequestSchema: GenMessage<DeleteCollectionRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_v1_collection, 6);

/**
 * DeleteCollectionResponse is an empty response for deletion confirmation
 *
 * Empty
 *
 * @generated from message qdrant.cloud.serverless.collection.v1.DeleteCollectionResponse
 */
export type DeleteCollectionResponse = Message<"qdrant.cloud.serverless.collection.v1.DeleteCollectionResponse"> & {
};

/**
 * Describes the message qdrant.cloud.serverless.collection.v1.DeleteCollectionResponse.
 * Use `create(DeleteCollectionResponseSchema)` to create a new message.
 */
export const DeleteCollectionResponseSchema: GenMessage<DeleteCollectionResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_v1_collection, 7);

/**
 * Collection represents a vector search collection in the Qdrant serverless environment
 *
 * @generated from message qdrant.cloud.serverless.collection.v1.Collection
 */
export type Collection = Message<"qdrant.cloud.serverless.collection.v1.Collection"> & {
  /**
   * Unique identifier for the collection (in Guid format).
   * This is a read-only field and will be available after a collection is created.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Timestamp when the collection was created.
   * This is a read-only field and will be available after a collection is created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * Identifier of the account associated with the collection (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 3;
   */
  accountId: string;

  /**
   * Name of the collection.
   * This is a required field.
   * Name can only contain letters, numbers, underscores and dashes
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * Timestamp when the collection was deleted (or is started to be deleting).
   * This is a read-only field and will be set after DeleteCollection is called.
   *
   * @generated from field: google.protobuf.Timestamp deleted_at = 5;
   */
  deletedAt?: Timestamp;

  /**
   * Cloud provider where the collection is hosted.
   * This is a optional field (one of the following: aws, gcp, azure).
   * After creation, this field cannot be changed.
   * If not specified - use default provider
   *
   * @generated from field: optional string cloud_provider = 10;
   */
  cloudProvider?: string;

  /**
   * In which region the collection is hosted
   * After creation, this field cannot be changed.
   * Example: us-west1
   * If not specified - use default region for the selected provider (or default provider if not specified)
   *
   * @generated from field: optional string cloud_region = 11;
   */
  cloudRegion?: string;

  /**
   * Configuration parameters
   *
   * @generated from field: qdrant.cloud.serverless.collection.v1.CollectionConfiguration configuration = 20;
   */
  configuration?: CollectionConfiguration;

  /**
   * Status of the collection
   *
   * @generated from field: qdrant.cloud.serverless.collection.v1.CollectionState state = 100;
   */
  state?: CollectionState;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.v1.Collection.
 * Use `create(CollectionSchema)` to create a new message.
 */
export const CollectionSchema: GenMessage<Collection> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_v1_collection, 8);

/**
 * CollectionState represents the operational state of a collection in the Qdrant serverless environment.
 * It provides status information, error details (if any), and endpoint access information.
 *
 * @generated from message qdrant.cloud.serverless.collection.v1.CollectionState
 */
export type CollectionState = Message<"qdrant.cloud.serverless.collection.v1.CollectionState"> & {
  /**
   * The current operational status of the collection.
   * - ready: Collection is fully operational and available for use
   * - processing: Collection is being created, updated, or undergoing maintenance
   * - disabled: Collection has been temporarily or permanently disabled
   *
   * @generated from field: string phase = 1;
   */
  phase: string;

  /**
   * Descriptive message explaining any errors or issues with the collection.
   * Empty when the collection is operating normally.
   *
   * @generated from field: string reason = 2;
   */
  reason: string;

  /**
   * The URL endpoint where clients can connect to and interact with the collection.
   * Not set if the collection is not yet ready or is disabled.
   *
   * @generated from field: optional qdrant.cloud.serverless.collection.v1.ClusterEndpoint endpoint = 7;
   */
  endpoint?: ClusterEndpoint;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.v1.CollectionState.
 * Use `create(CollectionStateSchema)` to create a new message.
 */
export const CollectionStateSchema: GenMessage<CollectionState> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_v1_collection, 9);

/**
 * Endpoint information to access the qdrant collection (aka serverless database).
 * All fields in this message are a read-only field.
 *
 * @generated from message qdrant.cloud.serverless.collection.v1.ClusterEndpoint
 */
export type ClusterEndpoint = Message<"qdrant.cloud.serverless.collection.v1.ClusterEndpoint"> & {
  /**
   * URL to access the qdrant collection (aka serverless database) without port
   *
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * The port to use for HTTP REST calls (6333)
   *
   * @generated from field: int32 rest_port = 2;
   */
  restPort: number;

  /**
   * The port to use for gRPC calls (6334)
   *
   * @generated from field: int32 grpc_port = 3;
   */
  grpcPort: number;
};

/**
 * Describes the message qdrant.cloud.serverless.collection.v1.ClusterEndpoint.
 * Use `create(ClusterEndpointSchema)` to create a new message.
 */
export const ClusterEndpointSchema: GenMessage<ClusterEndpoint> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_serverless_collection_v1_collection, 10);

/**
 * CollectionService provides operations for managing collections
 *
 * @generated from service qdrant.cloud.serverless.collection.v1.CollectionService
 */
export const CollectionService: GenService<{
  /**
   * ListCollections returns all collections for the authenticated user
   * Required Permissions:
   * - write:serverless
   *
   * @generated from rpc qdrant.cloud.serverless.collection.v1.CollectionService.ListCollections
   */
  listCollections: {
    methodKind: "unary";
    input: typeof ListCollectionsRequestSchema;
    output: typeof ListCollectionsResponseSchema;
  },
  /**
   * CreateCollection creates a new collection with the specified configuration
   * Required Permissions:
   * - write:serverless
   *
   * @generated from rpc qdrant.cloud.serverless.collection.v1.CollectionService.CreateCollection
   */
  createCollection: {
    methodKind: "unary";
    input: typeof CreateCollectionRequestSchema;
    output: typeof CreateCollectionResponseSchema;
  },
  /**
   * Upgrade collection: If current user have paid account, this API will lift the limit of the collection
   * Required Permissions:
   * - write:serverless
   *
   * @generated from rpc qdrant.cloud.serverless.collection.v1.CollectionService.UpgradeCollection
   */
  upgradeCollection: {
    methodKind: "unary";
    input: typeof UpgradeCollectionRequestSchema;
    output: typeof UpgradeCollectionResponseSchema;
  },
  /**
   * DeleteCollection removes a collection by ID
   * Required Permissions:
   * - write:serverless
   *
   * @generated from rpc qdrant.cloud.serverless.collection.v1.CollectionService.DeleteCollection
   */
  deleteCollection: {
    methodKind: "unary";
    input: typeof DeleteCollectionRequestSchema;
    output: typeof DeleteCollectionResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_serverless_collection_v1_collection, 0);

