// @generated by protoc-gen-es v2.2.3 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/hybrid/v1/hybrid_cloud.proto (package qdrant.cloud.hybrid.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import type { NetworkPolicyEgressRule, NetworkPolicyIngressRule } from "../../../../k8s.io/api/networking/v1/generated_pb.js";
import type { Toleration } from "../../cluster/v1/cluster_pb.js";
import type { KeyValue } from "../../common/v1/common_pb.js";

/**
 * Describes the file qdrant/cloud/hybrid/v1/hybrid_cloud.proto.
 */
export declare const file_qdrant_cloud_hybrid_v1_hybrid_cloud: GenFile;

/**
 * GetBootstrapCommandsRequest is the request for GetBootstrapCommands function
 *
 * @generated from message qdrant.cloud.hybrid.v1.GetBootstrapCommandsRequest
 */
export declare type GetBootstrapCommandsRequest = Message<"qdrant.cloud.hybrid.v1.GetBootstrapCommandsRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier for the hybrid cloud environment (in GUID format).
   * It should be part of the provided account.
   * This is a required field.
   *
   * @generated from field: string hybrid_cloud_environment_id = 2;
   */
  hybridCloudEnvironmentId: string;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.GetBootstrapCommandsRequest.
 * Use `create(GetBootstrapCommandsRequestSchema)` to create a new message.
 */
export declare const GetBootstrapCommandsRequestSchema: GenMessage<GetBootstrapCommandsRequest>;

/**
 * GetBootstrapCommandsResponse is the response for GetBootstrapCommands function
 *
 * @generated from message qdrant.cloud.hybrid.v1.GetBootstrapCommandsResponse
 */
export declare type GetBootstrapCommandsResponse = Message<"qdrant.cloud.hybrid.v1.GetBootstrapCommandsResponse"> & {
  /**
   * Commands to execute for bootstrapping a kubernetes cluster into hybrid cloud environment
   * `kubectl` and `helm` CLIs are required for execution.
   *
   * @generated from field: repeated string commands = 1;
   */
  commands: string[];
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.GetBootstrapCommandsResponse.
 * Use `create(GetBootstrapCommandsResponseSchema)` to create a new message.
 */
export declare const GetBootstrapCommandsResponseSchema: GenMessage<GetBootstrapCommandsResponse>;

/**
 * DeleteHybridCloudEnvironmentRequest is the request for DeleteHybridCloudEnvironment function
 *
 * @generated from message qdrant.cloud.hybrid.v1.DeleteHybridCloudEnvironmentRequest
 */
export declare type DeleteHybridCloudEnvironmentRequest = Message<"qdrant.cloud.hybrid.v1.DeleteHybridCloudEnvironmentRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier for the hybrid cloud environment (in GUID format).
   * It should be part of the provided account.
   * This is a required field.
   *
   * @generated from field: string hybrid_cloud_environment_id = 2;
   */
  hybridCloudEnvironmentId: string;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.DeleteHybridCloudEnvironmentRequest.
 * Use `create(DeleteHybridCloudEnvironmentRequestSchema)` to create a new message.
 */
export declare const DeleteHybridCloudEnvironmentRequestSchema: GenMessage<DeleteHybridCloudEnvironmentRequest>;

/**
 * DeleteHybridCloudEnvironmentResponse is the response for DeleteHybridCloudEnvironment function
 *
 * Empty
 *
 * @generated from message qdrant.cloud.hybrid.v1.DeleteHybridCloudEnvironmentResponse
 */
export declare type DeleteHybridCloudEnvironmentResponse = Message<"qdrant.cloud.hybrid.v1.DeleteHybridCloudEnvironmentResponse"> & {
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.DeleteHybridCloudEnvironmentResponse.
 * Use `create(DeleteHybridCloudEnvironmentResponseSchema)` to create a new message.
 */
export declare const DeleteHybridCloudEnvironmentResponseSchema: GenMessage<DeleteHybridCloudEnvironmentResponse>;

/**
 * UpdateHybridCloudEnvironmentRequest is the request for UpdateHybridCloudEnvironment function
 *
 * @generated from message qdrant.cloud.hybrid.v1.UpdateHybridCloudEnvironmentRequest
 */
export declare type UpdateHybridCloudEnvironmentRequest = Message<"qdrant.cloud.hybrid.v1.UpdateHybridCloudEnvironmentRequest"> & {
  /**
   * The actual hybrid cloud environment
   *
   * @generated from field: qdrant.cloud.hybrid.v1.HybridCloudEnvironment hybrid_cloud_environment = 1;
   */
  hybridCloudEnvironment?: HybridCloudEnvironment;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.UpdateHybridCloudEnvironmentRequest.
 * Use `create(UpdateHybridCloudEnvironmentRequestSchema)` to create a new message.
 */
export declare const UpdateHybridCloudEnvironmentRequestSchema: GenMessage<UpdateHybridCloudEnvironmentRequest>;

/**
 * UpdateHybridCloudEnvironmentResponse is the response for UpdateHybridCloudEnvironment function
 *
 * @generated from message qdrant.cloud.hybrid.v1.UpdateHybridCloudEnvironmentResponse
 */
export declare type UpdateHybridCloudEnvironmentResponse = Message<"qdrant.cloud.hybrid.v1.UpdateHybridCloudEnvironmentResponse"> & {
  /**
   * The actual hybrid cloud environment
   *
   * @generated from field: qdrant.cloud.hybrid.v1.HybridCloudEnvironment hybrid_cloud_environment = 1;
   */
  hybridCloudEnvironment?: HybridCloudEnvironment;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.UpdateHybridCloudEnvironmentResponse.
 * Use `create(UpdateHybridCloudEnvironmentResponseSchema)` to create a new message.
 */
export declare const UpdateHybridCloudEnvironmentResponseSchema: GenMessage<UpdateHybridCloudEnvironmentResponse>;

/**
 * CreateHybridCloudEnvironmentRequest is the request for CreateHybridCloudEnvironment function
 *
 * @generated from message qdrant.cloud.hybrid.v1.CreateHybridCloudEnvironmentRequest
 */
export declare type CreateHybridCloudEnvironmentRequest = Message<"qdrant.cloud.hybrid.v1.CreateHybridCloudEnvironmentRequest"> & {
  /**
   * The actual hybrid cloud environment
   *
   * @generated from field: qdrant.cloud.hybrid.v1.HybridCloudEnvironment hybrid_cloud_environment = 1;
   */
  hybridCloudEnvironment?: HybridCloudEnvironment;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.CreateHybridCloudEnvironmentRequest.
 * Use `create(CreateHybridCloudEnvironmentRequestSchema)` to create a new message.
 */
export declare const CreateHybridCloudEnvironmentRequestSchema: GenMessage<CreateHybridCloudEnvironmentRequest>;

/**
 * CreateHybridCloudEnvironmentResponse is the response for CreateHybridCloudEnvironment function
 *
 * @generated from message qdrant.cloud.hybrid.v1.CreateHybridCloudEnvironmentResponse
 */
export declare type CreateHybridCloudEnvironmentResponse = Message<"qdrant.cloud.hybrid.v1.CreateHybridCloudEnvironmentResponse"> & {
  /**
   * The actual hybrid cloud environment
   *
   * @generated from field: qdrant.cloud.hybrid.v1.HybridCloudEnvironment hybrid_cloud_environment = 1;
   */
  hybridCloudEnvironment?: HybridCloudEnvironment;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.CreateHybridCloudEnvironmentResponse.
 * Use `create(CreateHybridCloudEnvironmentResponseSchema)` to create a new message.
 */
export declare const CreateHybridCloudEnvironmentResponseSchema: GenMessage<CreateHybridCloudEnvironmentResponse>;

/**
 * GetHybridCloudEnvironmentRequest is the request for GetHybridCloudEnvironment function
 *
 * @generated from message qdrant.cloud.hybrid.v1.GetHybridCloudEnvironmentRequest
 */
export declare type GetHybridCloudEnvironmentRequest = Message<"qdrant.cloud.hybrid.v1.GetHybridCloudEnvironmentRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier for the hybrid cloud environment (in GUID format).
   * It should be part of the provided account.
   * This is a required field.
   *
   * @generated from field: string hybrid_cloud_environment_id = 2;
   */
  hybridCloudEnvironmentId: string;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.GetHybridCloudEnvironmentRequest.
 * Use `create(GetHybridCloudEnvironmentRequestSchema)` to create a new message.
 */
export declare const GetHybridCloudEnvironmentRequestSchema: GenMessage<GetHybridCloudEnvironmentRequest>;

/**
 * GetHybridCloudEnvironmentResponse is the response for GetHybridCloudEnvironment function
 *
 * @generated from message qdrant.cloud.hybrid.v1.GetHybridCloudEnvironmentResponse
 */
export declare type GetHybridCloudEnvironmentResponse = Message<"qdrant.cloud.hybrid.v1.GetHybridCloudEnvironmentResponse"> & {
  /**
   * The actual hybrid cloud environment
   *
   * @generated from field: qdrant.cloud.hybrid.v1.HybridCloudEnvironment hybrid_cloud_environment = 1;
   */
  hybridCloudEnvironment?: HybridCloudEnvironment;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.GetHybridCloudEnvironmentResponse.
 * Use `create(GetHybridCloudEnvironmentResponseSchema)` to create a new message.
 */
export declare const GetHybridCloudEnvironmentResponseSchema: GenMessage<GetHybridCloudEnvironmentResponse>;

/**
 * ListHybridCloudEnvironmentsRequest is the request for ListHybridCloudEnvironments function
 *
 * @generated from message qdrant.cloud.hybrid.v1.ListHybridCloudEnvironmentsRequest
 */
export declare type ListHybridCloudEnvironmentsRequest = Message<"qdrant.cloud.hybrid.v1.ListHybridCloudEnvironmentsRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.ListHybridCloudEnvironmentsRequest.
 * Use `create(ListHybridCloudEnvironmentsRequestSchema)` to create a new message.
 */
export declare const ListHybridCloudEnvironmentsRequestSchema: GenMessage<ListHybridCloudEnvironmentsRequest>;

/**
 * ListHybridCloudEnvironmentsResponse is the response for ListHybridCloudEnvironments function
 *
 * @generated from message qdrant.cloud.hybrid.v1.ListHybridCloudEnvironmentsResponse
 */
export declare type ListHybridCloudEnvironmentsResponse = Message<"qdrant.cloud.hybrid.v1.ListHybridCloudEnvironmentsResponse"> & {
  /**
   * The actual hybrid cloud environments in this list
   *
   * @generated from field: repeated qdrant.cloud.hybrid.v1.HybridCloudEnvironment items = 1;
   */
  items: HybridCloudEnvironment[];
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.ListHybridCloudEnvironmentsResponse.
 * Use `create(ListHybridCloudEnvironmentsResponseSchema)` to create a new message.
 */
export declare const ListHybridCloudEnvironmentsResponseSchema: GenMessage<ListHybridCloudEnvironmentsResponse>;

/**
 * HybridCloudEnvironment represents a hybrid cloud environment
 *
 * @generated from message qdrant.cloud.hybrid.v1.HybridCloudEnvironment
 */
export declare type HybridCloudEnvironment = Message<"qdrant.cloud.hybrid.v1.HybridCloudEnvironment"> & {
  /**
   * Identifier of the account associated with the cluster (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * Unique identifier for the hybrid cloud environment (in GUID format).
   * This is a read-only field and will be available after it is created.
   *
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * Timestamp when the hybrid cloud environment was created.
   * This is a read-only field and will be available after it is created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * Timestamp when the hybrid cloud environment was modified the last time.
   *
   * @generated from field: google.protobuf.Timestamp last_modified_at = 4;
   */
  lastModifiedAt?: Timestamp;

  /**
   * Name of the hybrid cloud environment
   * This is a required field.
   * Name can only contain letters, numbers, underscores and dashes
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * Configuration of the environment
   *
   * @generated from field: optional qdrant.cloud.hybrid.v1.HybridCloudEnvironmentConfiguration configuration = 20;
   */
  configuration?: HybridCloudEnvironmentConfiguration;

  /**
   * Status of the environment, readonly
   *
   * @generated from field: optional qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStatus status = 21;
   */
  status?: HybridCloudEnvironmentStatus;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironment.
 * Use `create(HybridCloudEnvironmentSchema)` to create a new message.
 */
export declare const HybridCloudEnvironmentSchema: GenMessage<HybridCloudEnvironment>;

/**
 * A HybridCloudEnvironmentConfiguration represents a configuration of hybrid cloud environment
 *
 * @generated from message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentConfiguration
 */
export declare type HybridCloudEnvironmentConfiguration = Message<"qdrant.cloud.hybrid.v1.HybridCloudEnvironmentConfiguration"> & {
  /**
   * Timestamp when the configuration was last updated.
   * This is a read-only field and will be available after it is created.
   *
   * @generated from field: google.protobuf.Timestamp last_modified_at = 1;
   */
  lastModifiedAt?: Timestamp;

  /**
   * Namespace where qdrant components are deployed, readonly after bootstrapping
   *
   * @generated from field: string namespace = 4;
   */
  namespace: string;

  /**
   * optional HTTP proxy URL
   *
   * @generated from field: optional string http_proxy_url = 5;
   */
  httpProxyUrl?: string;

  /**
   * optional HTTPS proxy URL
   *
   * @generated from field: optional string https_proxy_url = 6;
   */
  httpsProxyUrl?: string;

  /**
   * no proxy config
   *
   * @generated from field: repeated string no_proxy_configs = 7;
   */
  noProxyConfigs: string[];

  /**
   * Container registry URL
   *
   * @generated from field: optional string container_registry_url = 8;
   */
  containerRegistryUrl?: string;

  /**
   * Chart registry URL
   *
   * @generated from field: optional string chart_repository_url = 9;
   */
  chartRepositoryUrl?: string;

  /**
   * k8s secret name containing registry credentials for accessing container and helm repositories
   *
   * @generated from field: optional string registry_secret_name = 10;
   */
  registrySecretName?: string;

  /**
   * CA certificates
   *
   * @generated from field: optional string ca_certificates = 11;
   */
  caCertificates?: string;

  /**
   * Default database storage class, if omitted
   * kubernetes cluster default is used
   *
   * @generated from field: optional string database_storage_class = 12;
   */
  databaseStorageClass?: string;

  /**
   * Default snapshot storage class, if omitted
   * kubernetes cluster default is used
   *
   * @generated from field: optional string snapshot_storage_class = 13;
   */
  snapshotStorageClass?: string;

  /**
   * Default volume snapshot storage class, if omitted
   * csi-snapclass is used
   *
   * @generated from field: optional string volume_snapshot_storage_class = 14;
   */
  volumeSnapshotStorageClass?: string;

  /**
   * Optional Ingress rules for Qdrant databases
   *
   * @generated from field: repeated k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 15;
   */
  ingress: NetworkPolicyIngressRule[];

  /**
   * Optional Egress rules for Qdrant databases
   *
   * @generated from field: repeated k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 16;
   */
  egress: NetworkPolicyEgressRule[];

  /**
   * Log level for deployed components
   *
   * @generated from field: optional qdrant.cloud.hybrid.v1.HybridCloudEnvironmentConfigurationLogLevel log_level = 21;
   */
  logLevel?: HybridCloudEnvironmentConfigurationLogLevel;

  /**
   * List of tolerations for clusters in this hybrid cloud environment
   *
   * @generated from field: repeated qdrant.cloud.cluster.v1.Toleration tolerations = 22;
   */
  tolerations: Toleration[];

  /**
   * Node selector for Qdrant nodes in this hybrid cloud environment
   *
   * @generated from field: repeated qdrant.cloud.common.v1.KeyValue node_selector = 23;
   */
  nodeSelector: KeyValue[];
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentConfiguration.
 * Use `create(HybridCloudEnvironmentConfigurationSchema)` to create a new message.
 */
export declare const HybridCloudEnvironmentConfigurationSchema: GenMessage<HybridCloudEnvironmentConfiguration>;

/**
 * Status of a hybrid cloud environment, read only
 *
 * @generated from message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStatus
 */
export declare type HybridCloudEnvironmentStatus = Message<"qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStatus"> & {
  /**
   * Timestamp when the hybrid cloud environment status was modified the last time.
   *
   * @generated from field: optional google.protobuf.Timestamp last_modified_at = 1;
   */
  lastModifiedAt?: Timestamp;

  /**
   * Phase
   *
   * @generated from field: qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStatusPhase phase = 3;
   */
  phase: HybridCloudEnvironmentStatusPhase;

  /**
   * Kubernetes version
   *
   * @generated from field: string kubernetes_version = 4;
   */
  kubernetesVersion: string;

  /**
   * Kubernetes distribution
   *
   * @generated from field: optional qdrant.cloud.hybrid.v1.KubernetesDistribution kubernetes_distribution = 10;
   */
  kubernetesDistribution?: KubernetesDistribution;

  /**
   * Number of kubernetes nodes
   *
   * @generated from field: uint32 number_of_nodes = 5;
   */
  numberOfNodes: number;

  /**
   * Capabilities of hybrid cloud environment
   *
   * @generated from field: qdrant.cloud.hybrid.v1.HybridCloudEnvironmentCapabilities capabilities = 6;
   */
  capabilities?: HybridCloudEnvironmentCapabilities;

  /**
   * Status of deployed component
   *
   * @generated from field: repeated qdrant.cloud.hybrid.v1.HybridCloudEnvironmentComponentStatus component_statuses = 7;
   */
  componentStatuses: HybridCloudEnvironmentComponentStatus[];

  /**
   * Report if the hybrid cloud environment is ready for Qdrant cluster creation
   *
   * @generated from field: qdrant.cloud.hybrid.v1.QdrantClusterCreationStatus cluster_creation_readiness = 9;
   */
  clusterCreationReadiness: QdrantClusterCreationStatus;

  /**
   * Status message
   *
   * @generated from field: optional string message = 11;
   */
  message?: string;

  /**
   * Storage classes available in the hybrid cloud environment
   *
   * @generated from field: repeated qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStorageClass storage_classes = 12;
   */
  storageClasses: HybridCloudEnvironmentStorageClass[];

  /**
   * Volume snapshot classes available in the hybrid cloud environment
   *
   * @generated from field: repeated qdrant.cloud.hybrid.v1.HybridCloudEnvironmentVolumeSnapshotClass volume_snapshot_classes = 13;
   */
  volumeSnapshotClasses: HybridCloudEnvironmentVolumeSnapshotClass[];
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStatus.
 * Use `create(HybridCloudEnvironmentStatusSchema)` to create a new message.
 */
export declare const HybridCloudEnvironmentStatusSchema: GenMessage<HybridCloudEnvironmentStatus>;

/**
 * Capabilities of hybrid cloud environment
 *
 * @generated from message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentCapabilities
 */
export declare type HybridCloudEnvironmentCapabilities = Message<"qdrant.cloud.hybrid.v1.HybridCloudEnvironmentCapabilities"> & {
  /**
   * True if volume snapshotting is available
   *
   * @generated from field: bool volume_snapshot = 1;
   */
  volumeSnapshot: boolean;

  /**
   * True if volume expansion is available
   *
   * @generated from field: bool volume_expansion = 2;
   */
  volumeExpansion: boolean;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentCapabilities.
 * Use `create(HybridCloudEnvironmentCapabilitiesSchema)` to create a new message.
 */
export declare const HybridCloudEnvironmentCapabilitiesSchema: GenMessage<HybridCloudEnvironmentCapabilities>;

/**
 * Status of a component deployed in the hybrid cloud environment
 *
 * @generated from message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentComponentStatus
 */
export declare type HybridCloudEnvironmentComponentStatus = Message<"qdrant.cloud.hybrid.v1.HybridCloudEnvironmentComponentStatus"> & {
  /**
   * Component name
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Component namespace
   *
   * @generated from field: string namespace = 2;
   */
  namespace: string;

  /**
   * Component version
   *
   * @generated from field: optional string version = 3;
   */
  version?: string;

  /**
   * Phase
   *
   * @generated from field: qdrant.cloud.hybrid.v1.HybridCloudEnvironmentComponentStatusPhase phase = 4;
   */
  phase: HybridCloudEnvironmentComponentStatusPhase;

  /**
   * Status message
   *
   * @generated from field: optional string message = 5;
   */
  message?: string;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentComponentStatus.
 * Use `create(HybridCloudEnvironmentComponentStatusSchema)` to create a new message.
 */
export declare const HybridCloudEnvironmentComponentStatusSchema: GenMessage<HybridCloudEnvironmentComponentStatus>;

/**
 * A storage class available in hybrid cloud environment
 *
 * @generated from message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStorageClass
 */
export declare type HybridCloudEnvironmentStorageClass = Message<"qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStorageClass"> & {
  /**
   * Name specifies the name of the storage class
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Default specifies whether the storage class is the default storage class
   *
   * @generated from field: bool default = 2;
   */
  default: boolean;

  /**
   * Provisioner specifies the provisioner of the storage class
   *
   * @generated from field: string provisioner = 3;
   */
  provisioner: string;

  /**
   * It specifies whether the storage class allows volume expansion
   *
   * @generated from field: bool allow_volume_expansion = 4;
   */
  allowVolumeExpansion: boolean;

  /**
   * Specifies the reclaim policy of the storage class
   *
   * @generated from field: string reclaim_policy = 5;
   */
  reclaimPolicy: string;

  /**
   * parameters of the storage class
   *
   * @generated from field: repeated qdrant.cloud.common.v1.KeyValue parameters = 6;
   */
  parameters: KeyValue[];
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStorageClass.
 * Use `create(HybridCloudEnvironmentStorageClassSchema)` to create a new message.
 */
export declare const HybridCloudEnvironmentStorageClassSchema: GenMessage<HybridCloudEnvironmentStorageClass>;

/**
 * Volume snapshot class available in the hybrid cloud environment
 *
 * @generated from message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentVolumeSnapshotClass
 */
export declare type HybridCloudEnvironmentVolumeSnapshotClass = Message<"qdrant.cloud.hybrid.v1.HybridCloudEnvironmentVolumeSnapshotClass"> & {
  /**
   * Name of the volume snapshot class
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Driver of the volume snapshot class
   *
   * @generated from field: string driver = 2;
   */
  driver: string;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentVolumeSnapshotClass.
 * Use `create(HybridCloudEnvironmentVolumeSnapshotClassSchema)` to create a new message.
 */
export declare const HybridCloudEnvironmentVolumeSnapshotClassSchema: GenMessage<HybridCloudEnvironmentVolumeSnapshotClass>;

/**
 * Info about a node of a hybrid cloud environment
 *
 * @generated from message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentNodeInfo
 */
export declare type HybridCloudEnvironmentNodeInfo = Message<"qdrant.cloud.hybrid.v1.HybridCloudEnvironmentNodeInfo"> & {
  /**
   * Name of the node
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Region of the node
   *
   * @generated from field: optional string region = 2;
   */
  region?: string;

  /**
   * Zone of the node
   *
   * @generated from field: optional string zone = 3;
   */
  zone?: string;

  /**
   * Instance type of the node
   *
   * @generated from field: optional string instance_type = 4;
   */
  instanceType?: string;

  /**
   * CPU architecture of the node
   *
   * @generated from field: optional string arch = 5;
   */
  arch?: string;

  /**
   * Capacity of the node
   *
   * @generated from field: qdrant.cloud.hybrid.v1.HybridCloudEnvironmentNodeResourceInfo capacity = 6;
   */
  capacity?: HybridCloudEnvironmentNodeResourceInfo;

  /**
   * The allocatable resources of the node
   *
   * @generated from field: qdrant.cloud.hybrid.v1.HybridCloudEnvironmentNodeResourceInfo allocatable = 7;
   */
  allocatable?: HybridCloudEnvironmentNodeResourceInfo;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentNodeInfo.
 * Use `create(HybridCloudEnvironmentNodeInfoSchema)` to create a new message.
 */
export declare const HybridCloudEnvironmentNodeInfoSchema: GenMessage<HybridCloudEnvironmentNodeInfo>;

/**
 * Node resource infos
 *
 * @generated from message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentNodeResourceInfo
 */
export declare type HybridCloudEnvironmentNodeResourceInfo = Message<"qdrant.cloud.hybrid.v1.HybridCloudEnvironmentNodeResourceInfo"> & {
  /**
   * CPU resources of the node
   *
   * @generated from field: string cpu = 1;
   */
  cpu: string;

  /**
   * Memory resources of the node
   *
   * @generated from field: string memory = 2;
   */
  memory: string;

  /**
   * Pods resources of the node
   *
   * @generated from field: string pods = 3;
   */
  pods: string;

  /**
   * Ephemeral storage resources of the node
   *
   * @generated from field: string ephemeral_storage = 4;
   */
  ephemeralStorage: string;
};

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentNodeResourceInfo.
 * Use `create(HybridCloudEnvironmentNodeResourceInfoSchema)` to create a new message.
 */
export declare const HybridCloudEnvironmentNodeResourceInfoSchema: GenMessage<HybridCloudEnvironmentNodeResourceInfo>;

/**
 * HybridCloudEnvironmentConfigurationLogLevel represents the log level applied to the hybrid cloud environment components
 *
 * @generated from enum qdrant.cloud.hybrid.v1.HybridCloudEnvironmentConfigurationLogLevel
 */
export enum HybridCloudEnvironmentConfigurationLogLevel {
  /**
   * UNSPECIFIED
   *
   * @generated from enum value: HYBRID_CLOUD_ENVIRONMENT_CONFIGURATION_LOG_LEVEL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * DEBUG
   *
   * @generated from enum value: HYBRID_CLOUD_ENVIRONMENT_CONFIGURATION_LOG_LEVEL_DEBUG = 1;
   */
  DEBUG = 1,

  /**
   * INFO
   *
   * @generated from enum value: HYBRID_CLOUD_ENVIRONMENT_CONFIGURATION_LOG_LEVEL_INFO = 2;
   */
  INFO = 2,

  /**
   * WARNING
   *
   * @generated from enum value: HYBRID_CLOUD_ENVIRONMENT_CONFIGURATION_LOG_LEVEL_WARN = 3;
   */
  WARN = 3,

  /**
   * ERROR
   *
   * @generated from enum value: HYBRID_CLOUD_ENVIRONMENT_CONFIGURATION_LOG_LEVEL_ERROR = 4;
   */
  ERROR = 4,
}

/**
 * Describes the enum qdrant.cloud.hybrid.v1.HybridCloudEnvironmentConfigurationLogLevel.
 */
export declare const HybridCloudEnvironmentConfigurationLogLevelSchema: GenEnum<HybridCloudEnvironmentConfigurationLogLevel>;

/**
 * QdrantClusterCreationStatus indicates if Qdrant clusters can be created in the environment
 *
 * @generated from enum qdrant.cloud.hybrid.v1.QdrantClusterCreationStatus
 */
export enum QdrantClusterCreationStatus {
  /**
   * Unspecified
   *
   * @generated from enum value: QDRANT_CLUSTER_CREATION_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Clusters can be created
   *
   * @generated from enum value: QDRANT_CLUSTER_CREATION_STATUS_READY = 1;
   */
  READY = 1,

  /**
   * Clusters cannot be created
   *
   * @generated from enum value: QDRANT_CLUSTER_CREATION_STATUS_NOT_READY = 2;
   */
  NOT_READY = 2,
}

/**
 * Describes the enum qdrant.cloud.hybrid.v1.QdrantClusterCreationStatus.
 */
export declare const QdrantClusterCreationStatusSchema: GenEnum<QdrantClusterCreationStatus>;

/**
 * Status phase of hybrid cloud environment
 *
 * @generated from enum qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStatusPhase
 */
export enum HybridCloudEnvironmentStatusPhase {
  /**
   * Unspecified
   *
   * @generated from enum value: HYBRID_CLOUD_ENVIRONMENT_STATUS_PHASE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Ready
   *
   * @generated from enum value: HYBRID_CLOUD_ENVIRONMENT_STATUS_PHASE_READY = 1;
   */
  READY = 1,

  /**
   * Not ready
   *
   * @generated from enum value: HYBRID_CLOUD_ENVIRONMENT_STATUS_PHASE_NOT_READY = 2;
   */
  NOT_READY = 2,

  /**
   * Failed to sync
   *
   * @generated from enum value: HYBRID_CLOUD_ENVIRONMENT_STATUS_PHASE_FAILED_TO_SYNC = 3;
   */
  FAILED_TO_SYNC = 3,
}

/**
 * Describes the enum qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStatusPhase.
 */
export declare const HybridCloudEnvironmentStatusPhaseSchema: GenEnum<HybridCloudEnvironmentStatusPhase>;

/**
 * Component status phase
 *
 * @generated from enum qdrant.cloud.hybrid.v1.HybridCloudEnvironmentComponentStatusPhase
 */
export enum HybridCloudEnvironmentComponentStatusPhase {
  /**
   * Unspecified
   *
   * @generated from enum value: HYBRID_CLOUD_ENVIRONMENT_COMPONENT_STATUS_PHASE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Ready
   *
   * @generated from enum value: HYBRID_CLOUD_ENVIRONMENT_COMPONENT_STATUS_PHASE_READY = 1;
   */
  READY = 1,

  /**
   * Not ready
   *
   * @generated from enum value: HYBRID_CLOUD_ENVIRONMENT_COMPONENT_STATUS_PHASE_NOT_READY = 2;
   */
  NOT_READY = 2,

  /**
   * Not found
   *
   * @generated from enum value: HYBRID_CLOUD_ENVIRONMENT_COMPONENT_STATUS_PHASE_NOT_FOUND = 3;
   */
  NOT_FOUND = 3,
}

/**
 * Describes the enum qdrant.cloud.hybrid.v1.HybridCloudEnvironmentComponentStatusPhase.
 */
export declare const HybridCloudEnvironmentComponentStatusPhaseSchema: GenEnum<HybridCloudEnvironmentComponentStatusPhase>;

/**
 * Kubernetes distributions
 *
 * @generated from enum qdrant.cloud.hybrid.v1.KubernetesDistribution
 */
export enum KubernetesDistribution {
  /**
   * Unspecified
   *
   * @generated from enum value: KUBERNETES_DISTRIBUTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * AWS
   *
   * @generated from enum value: KUBERNETES_DISTRIBUTION_AWS = 1;
   */
  AWS = 1,

  /**
   * GCP
   *
   * @generated from enum value: KUBERNETES_DISTRIBUTION_GCP = 2;
   */
  GCP = 2,

  /**
   * Azure
   *
   * @generated from enum value: KUBERNETES_DISTRIBUTION_AZURE = 3;
   */
  AZURE = 3,

  /**
   * DigitalOcean
   *
   * @generated from enum value: KUBERNETES_DISTRIBUTION_DO = 4;
   */
  DO = 4,

  /**
   * Scaleway
   *
   * @generated from enum value: KUBERNETES_DISTRIBUTION_SCALEWAY = 5;
   */
  SCALEWAY = 5,

  /**
   * Openshift
   *
   * @generated from enum value: KUBERNETES_DISTRIBUTION_OPENSHIFT = 6;
   */
  OPENSHIFT = 6,

  /**
   * Linode
   *
   * @generated from enum value: KUBERNETES_DISTRIBUTION_LINODE = 7;
   */
  LINODE = 7,

  /**
   * Civo
   *
   * @generated from enum value: KUBERNETES_DISTRIBUTION_CIVO = 8;
   */
  CIVO = 8,

  /**
   * OracleCloud
   *
   * @generated from enum value: KUBERNETES_DISTRIBUTION_OCI = 9;
   */
  OCI = 9,

  /**
   * OVHcloud
   *
   * @generated from enum value: KUBERNETES_DISTRIBUTION_OVHCLOUD = 10;
   */
  OVHCLOUD = 10,

  /**
   * Stackit
   *
   * @generated from enum value: KUBERNETES_DISTRIBUTION_STACKIT = 11;
   */
  STACKIT = 11,

  /**
   * Vultr
   *
   * @generated from enum value: KUBERNETES_DISTRIBUTION_VULTR = 12;
   */
  VULTR = 12,

  /**
   * K3S
   *
   * @generated from enum value: KUBERNETES_DISTRIBUTION_K3S = 13;
   */
  K3S = 13,
}

/**
 * Describes the enum qdrant.cloud.hybrid.v1.KubernetesDistribution.
 */
export declare const KubernetesDistributionSchema: GenEnum<KubernetesDistribution>;

/**
 * HybridCloudService is the API used for configuring hybrid cloud environments.
 *
 * @generated from service qdrant.cloud.hybrid.v1.HybridCloudService
 */
export declare const HybridCloudService: GenService<{
  /**
   * Fetch all hybrid cloud environments in the account identified by the given ID.
   * Required permissions (any-of):
   * - read:hybrid_cloud_environments
   * - write:clusters
   *
   * @generated from rpc qdrant.cloud.hybrid.v1.HybridCloudService.ListHybridCloudEnvironments
   */
  listHybridCloudEnvironments: {
    methodKind: "unary";
    input: typeof ListHybridCloudEnvironmentsRequestSchema;
    output: typeof ListHybridCloudEnvironmentsResponseSchema;
  },
  /**
   * Fetch a hybrid cloud environment in the account identified by the given ID.
   * Required permissions (any-of):
   * - read:hybrid_cloud_environments
   * - write:clusters
   *
   * @generated from rpc qdrant.cloud.hybrid.v1.HybridCloudService.GetHybridCloudEnvironment
   */
  getHybridCloudEnvironment: {
    methodKind: "unary";
    input: typeof GetHybridCloudEnvironmentRequestSchema;
    output: typeof GetHybridCloudEnvironmentResponseSchema;
  },
  /**
   * Creates a hybrid cloud environment in the account identified by the given ID.
   * Required permissions:
   * - write:hybrid_cloud_environments
   *
   * @generated from rpc qdrant.cloud.hybrid.v1.HybridCloudService.CreateHybridCloudEnvironment
   */
  createHybridCloudEnvironment: {
    methodKind: "unary";
    input: typeof CreateHybridCloudEnvironmentRequestSchema;
    output: typeof CreateHybridCloudEnvironmentResponseSchema;
  },
  /**
   * Updates a hybrid cloud environment in the account identified by the given ID.
   * Required permissions:
   * - write:hybrid_cloud_environments
   *
   * @generated from rpc qdrant.cloud.hybrid.v1.HybridCloudService.UpdateHybridCloudEnvironment
   */
  updateHybridCloudEnvironment: {
    methodKind: "unary";
    input: typeof UpdateHybridCloudEnvironmentRequestSchema;
    output: typeof UpdateHybridCloudEnvironmentResponseSchema;
  },
  /**
   * Deletes a hybrid cloud environment in the account identified by the given ID.
   * Required permissions:
   * - delete:hybrid_cloud_environments
   *
   * @generated from rpc qdrant.cloud.hybrid.v1.HybridCloudService.DeleteHybridCloudEnvironment
   */
  deleteHybridCloudEnvironment: {
    methodKind: "unary";
    input: typeof DeleteHybridCloudEnvironmentRequestSchema;
    output: typeof DeleteHybridCloudEnvironmentResponseSchema;
  },
  /**
   * Fetch the commands that should be executed against a kubernetes cluster to
   * bootstrap it to the hybrid cloud environment. The operation can be invoked multiple times,
   * but be aware that each invocation is going to create new Qdrant cloud access token and the registry credentials.
   * Thus, it make sense to call it only if a kubernetes cluster is not yet registered to the given hybrid environment.
   * Required permission:
   * - write:hybrid_cloud_environments
   *
   * @generated from rpc qdrant.cloud.hybrid.v1.HybridCloudService.GetBootstrapCommands
   */
  getBootstrapCommands: {
    methodKind: "unary";
    input: typeof GetBootstrapCommandsRequestSchema;
    output: typeof GetBootstrapCommandsResponseSchema;
  },
}>;

