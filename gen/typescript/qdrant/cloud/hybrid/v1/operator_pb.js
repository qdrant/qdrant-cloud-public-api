// @generated by protoc-gen-es v2.2.3 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/hybrid/v1/operator.proto (package qdrant.cloud.hybrid.v1, syntax proto3)
/* eslint-disable */

import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_k8s_io_api_core_v1_generated } from "../../../../k8s.io/api/core/v1/generated_pb.js";
import { file_k8s_io_api_networking_v1_generated } from "../../../../k8s.io/api/networking/v1/generated_pb.js";
import { file_k8s_io_api_policy_v1_generated } from "../../../../k8s.io/api/policy/v1/generated_pb.js";
import { file_qdrant_cloud_cluster_v1_cluster } from "../../cluster/v1/cluster_pb.js";

/**
 * Describes the file qdrant/cloud/hybrid/v1/operator.proto.
 */
export const file_qdrant_cloud_hybrid_v1_operator = /*@__PURE__*/
  fileDesc("CiVxZHJhbnQvY2xvdWQvaHlicmlkL3YxL29wZXJhdG9yLnByb3RvEhZxZHJhbnQuY2xvdWQuaHlicmlkLnYxIosBChVPcGVyYXRvckNvbmZpZ3VyYXRpb24SFgoJbG9nX2xldmVsGAEgASgJSACIAQESPwoIZmVhdHVyZXMYAiABKAsyKC5xZHJhbnQuY2xvdWQuaHlicmlkLnYxLk9wZXJhdG9yRmVhdHVyZXNIAYgBAUIMCgpfbG9nX2xldmVsQgsKCV9mZWF0dXJlcyLlAQoQT3BlcmF0b3JGZWF0dXJlcxJSChJjbHVzdGVyX21hbmFnZW1lbnQYASABKAsyMS5xZHJhbnQuY2xvdWQuaHlicmlkLnYxLk9wZXJhdG9yQ2x1c3Rlck1hbmFnZW1lbnRIAIgBARJQChFiYWNrdXBfbWFuYWdlbWVudBgCIAEoCzIwLnFkcmFudC5jbG91ZC5oeWJyaWQudjEuT3BlcmF0b3JCYWNrdXBNYW5hZ2VtZW50SAGIAQFCFQoTX2NsdXN0ZXJfbWFuYWdlbWVudEIUChJfYmFja3VwX21hbmFnZW1lbnQiyQIKGE9wZXJhdG9yQmFja3VwTWFuYWdlbWVudBIUCgdlbmFibGVkGAEgASgISACIAQESQQoJc25hcHNob3RzGAIgASgLMikucWRyYW50LmNsb3VkLmh5YnJpZC52MS5PcGVyYXRvclNuYXBzaG90c0gBiAEBElQKE3NjaGVkdWxlZF9zbmFwc2hvdHMYAyABKAsyMi5xZHJhbnQuY2xvdWQuaHlicmlkLnYxLk9wZXJhdG9yU2NoZWR1bGVkU25hcHNob3RzSAKIAQESPwoIcmVzdG9yZXMYBCABKAsyKC5xZHJhbnQuY2xvdWQuaHlicmlkLnYxLk9wZXJhdG9yUmVzdG9yZXNIA4gBAUIKCghfZW5hYmxlZEIMCgpfc25hcHNob3RzQhYKFF9zY2hlZHVsZWRfc25hcHNob3RzQgsKCV9yZXN0b3JlcyLzAQoRT3BlcmF0b3JTbmFwc2hvdHMSFAoHZW5hYmxlZBgBIAEoCEgAiAEBEiIKFXZvbHVtZV9zbmFwc2hvdF9jbGFzcxgCIAEoCUgBiAEBEiAKE3JldGFpbl91bnN1Y2Nlc3NmdWwYAyABKAlIAogBARImChltYXhfY29uY3VycmVudF9yZWNvbmNpbGVzGAQgASgNSAOIAQFCCgoIX2VuYWJsZWRCGAoWX3ZvbHVtZV9zbmFwc2hvdF9jbGFzc0IWChRfcmV0YWluX3Vuc3VjY2Vzc2Z1bEIcChpfbWF4X2NvbmN1cnJlbnRfcmVjb25jaWxlcyKCAQoaT3BlcmF0b3JTY2hlZHVsZWRTbmFwc2hvdHMSEwoGZW5hYmxlGAEgASgISACIAQESJgoZbWF4X2NvbmN1cnJlbnRfcmVjb25jaWxlcxgDIAEoBUgBiAEBQgkKB19lbmFibGVCHAoaX21heF9jb25jdXJyZW50X3JlY29uY2lsZXMieAoQT3BlcmF0b3JSZXN0b3JlcxITCgZlbmFibGUYASABKAhIAIgBARImChltYXhfY29uY3VycmVudF9yZWNvbmNpbGVzGAIgASgFSAGIAQFCCQoHX2VuYWJsZUIcChpfbWF4X2NvbmN1cnJlbnRfcmVjb25jaWxlcyKcBQoZT3BlcmF0b3JDbHVzdGVyTWFuYWdlbWVudBIUCgdlbmFibGVkGAEgASgISACIAQESSAoNc3RvcmFnZV9jbGFzcxgCIAEoCzIsLnFkcmFudC5jbG91ZC5oeWJyaWQudjEuT3BlcmF0b3JTdG9yYWdlQ2xhc3NIAYgBARI7CgZxZHJhbnQYAyABKAsyJi5xZHJhbnQuY2xvdWQuaHlicmlkLnYxLk9wZXJhdG9yUWRyYW50SAKIAQESQwoKc2NoZWR1bGluZxgEIAEoCzIqLnFkcmFudC5jbG91ZC5oeWJyaWQudjEuT3BlcmF0b3JTY2hlZHVsaW5nSAOIAQESTAoPY2x1c3Rlcl9tYW5hZ2VyGAUgASgLMi4ucWRyYW50LmNsb3VkLmh5YnJpZC52MS5PcGVyYXRvckNsdXN0ZXJNYW5hZ2VySASIAQESPQoHaW5ncmVzcxgGIAEoCzInLnFkcmFudC5jbG91ZC5oeWJyaWQudjEuT3BlcmF0b3JJbmdyZXNzSAWIAQESHgoRdGVsZW1ldHJ5X3RpbWVvdXQYByABKAlIBogBARImChltYXhfY29uY3VycmVudF9yZWNvbmNpbGVzGAggASgNSAeIAQESIgoVdm9sdW1lX2V4cGFuc2lvbl9tb2RlGAkgASgJSAiIAQFCCgoIX2VuYWJsZWRCEAoOX3N0b3JhZ2VfY2xhc3NCCQoHX3FkcmFudEINCgtfc2NoZWR1bGluZ0ISChBfY2x1c3Rlcl9tYW5hZ2VyQgoKCF9pbmdyZXNzQhQKEl90ZWxlbWV0cnlfdGltZW91dEIcChpfbWF4X2NvbmN1cnJlbnRfcmVjb25jaWxlc0IYChZfdm9sdW1lX2V4cGFuc2lvbl9tb2RlIrEBChJPcGVyYXRvclNjaGVkdWxpbmcSUQobdG9wb2xvZ3lfc3ByZWFkX2NvbnN0cmFpbnRzGAEgAygLMiwuazhzLmlvLmFwaS5jb3JlLnYxLlRvcG9sb2d5U3ByZWFkQ29uc3RyYWludBJIChVwb2RfZGlzcnVwdGlvbl9idWRnZXQYAiADKAsyKS5rOHMuaW8uYXBpLnBvbGljeS52MS5Qb2REaXNydXB0aW9uQnVkZ2V0IsECChZPcGVyYXRvckNsdXN0ZXJNYW5hZ2VyEhMKBmVuYWJsZRgBIAEoCEgAiAEBEh0KEGVuZHBvaW50X2FkZHJlc3MYAiABKAlIAYgBARIgChNpbnZvY2F0aW9uX2ludGVydmFsGAMgASgJSAKIAQESFAoHdGltZW91dBgEIAEoCUgDiAEBElwKFm1hbmFnZV9ydWxlc19vdmVycmlkZXMYBSABKAsyNy5xZHJhbnQuY2xvdWQuaHlicmlkLnYxLk9wZXJhdG9yQ2x1c3Rlck1hbmFnZXJPdmVycmlkZXNIBIgBAUIJCgdfZW5hYmxlQhMKEV9lbmRwb2ludF9hZGRyZXNzQhYKFF9pbnZvY2F0aW9uX2ludGVydmFsQgoKCF90aW1lb3V0QhkKF19tYW5hZ2VfcnVsZXNfb3ZlcnJpZGVzIsABCg9PcGVyYXRvckluZ3Jlc3MSEwoGZW5hYmxlGAEgASgISACIAQESFQoIcHJvdmlkZXIYAiABKAlIAYgBARJSChJrdWJlcm5ldGVzX2luZ3Jlc3MYAyABKAsyMS5xZHJhbnQuY2xvdWQuaHlicmlkLnYxLk9wZXJhdG9yS3ViZXJuZXRlc0luZ3Jlc3NIAogBAUIJCgdfZW5hYmxlQgsKCV9wcm92aWRlckIVChNfa3ViZXJuZXRlc19pbmdyZXNzIlMKGU9wZXJhdG9yS3ViZXJuZXRlc0luZ3Jlc3MSHwoSaW5ncmVzc19jbGFzc19uYW1lGAEgASgJSACIAQFCFQoTX2luZ3Jlc3NfY2xhc3NfbmFtZSKJAgofT3BlcmF0b3JDbHVzdGVyTWFuYWdlck92ZXJyaWRlcxIUCgdkcnlfcnVuGAEgASgISACIAQESGgoNbWF4X3RyYW5zZmVycxgCIAEoBUgBiAEBEikKHG1heF90cmFuc2ZlcnNfcGVyX2NvbGxlY3Rpb24YAyABKAVIAogBARIWCglyZWJhbGFuY2UYBCABKAlIA4gBARIWCglyZXBsaWNhdGUYBSABKAlIBIgBAUIKCghfZHJ5X3J1bkIQCg5fbWF4X3RyYW5zZmVyc0IfCh1fbWF4X3RyYW5zZmVyc19wZXJfY29sbGVjdGlvbkIMCgpfcmViYWxhbmNlQgwKCl9yZXBsaWNhdGUiXgoUT3BlcmF0b3JTdG9yYWdlQ2xhc3MSFQoIZGF0YWJhc2UYAiABKAlIAIgBARIVCghzbmFwc2hvdBgDIAEoCUgBiAEBQgsKCV9kYXRhYmFzZUILCglfc25hcHNob3Qi0gMKDk9wZXJhdG9yUWRyYW50Ej8KBWltYWdlGAEgASgLMisucWRyYW50LmNsb3VkLmh5YnJpZC52MS5PcGVyYXRvclFkcmFudEltYWdlSACIAQESQwoHc3RvcmFnZRgCIAEoCzItLnFkcmFudC5jbG91ZC5oeWJyaWQudjEuT3BlcmF0b3JRZHJhbnRTdG9yYWdlSAGIAQESTgoJbG9nX2xldmVsGAMgASgOMjYucWRyYW50LmNsb3VkLmNsdXN0ZXIudjEuRGF0YWJhc2VDb25maWd1cmF0aW9uTG9nTGV2ZWxIAogBARJOChBzZWN1cml0eV9jb250ZXh0GAQgASgLMi8ucWRyYW50LmNsb3VkLmh5YnJpZC52MS5PcGVyYXRvclNlY3VyaXR5Q29udGV4dEgDiAEBEkwKEG5ldHdvcmtfcG9saWNpZXMYBSABKAsyLS5xZHJhbnQuY2xvdWQuaHlicmlkLnYxLk9wZXJhdG9yTmV0d29ya1BvbGljeUgEiAEBQggKBl9pbWFnZUIKCghfc3RvcmFnZUIMCgpfbG9nX2xldmVsQhMKEV9zZWN1cml0eV9jb250ZXh0QhMKEV9uZXR3b3JrX3BvbGljaWVzIsEBChVPcGVyYXRvck5ldHdvcmtQb2xpY3kSFAoHZW5hYmxlZBgBIAEoCEgAiAEBEkMKB2luZ3Jlc3MYAiADKAsyMi5rOHMuaW8uYXBpLm5ldHdvcmtpbmcudjEuTmV0d29ya1BvbGljeUluZ3Jlc3NSdWxlEkEKBmVncmVzcxgDIAMoCzIxLms4cy5pby5hcGkubmV0d29ya2luZy52MS5OZXR3b3JrUG9saWN5RWdyZXNzUnVsZUIKCghfZW5hYmxlZCKZAQoXT3BlcmF0b3JTZWN1cml0eUNvbnRleHQSFAoHZW5hYmxlZBgBIAEoCEgAiAEBEhEKBHVzZXIYAiABKAlIAYgBARIVCghmc19ncm91cBgDIAEoCUgCiAEBEhIKBWdyb3VwGAQgASgJSAOIAQFCCgoIX2VuYWJsZWRCBwoFX3VzZXJCCwoJX2ZzX2dyb3VwQggKBl9ncm91cCJ0ChVPcGVyYXRvclFkcmFudFN0b3JhZ2USSwoLcGVyZm9ybWFuY2UYASABKAsyMS5xZHJhbnQuY2xvdWQuaHlicmlkLnYxLk9wZXJhdG9yUWRyYW50UGVyZm9ybWFuY2VIAIgBAUIOCgxfcGVyZm9ybWFuY2UigwEKGU9wZXJhdG9yUWRyYW50UGVyZm9ybWFuY2USIQoUb3B0aW1pemVyX2NwdV9idWRnZXQYASABKAVIAIgBARIZCgxhc3luY19zY29yZXIYAiABKAhIAYgBAUIXChVfb3B0aW1pemVyX2NwdV9idWRnZXRCDwoNX2FzeW5jX3Njb3JlciKbAQoTT3BlcmF0b3JRZHJhbnRJbWFnZRIXCgpyZXBvc2l0b3J5GAEgASgJSACIAQESGAoLcHVsbF9wb2xpY3kYAiABKAlIAYgBARIdChBwdWxsX3NlY3JldF9uYW1lGAMgASgJSAKIAQFCDQoLX3JlcG9zaXRvcnlCDgoMX3B1bGxfcG9saWN5QhMKEV9wdWxsX3NlY3JldF9uYW1lQvgBChpjb20ucWRyYW50LmNsb3VkLmh5YnJpZC52MUINT3BlcmF0b3JQcm90b1ABWlBnaXRodWIuY29tL3FkcmFudC9xZHJhbnQtY2xvdWQtcHVibGljLWFwaS9nZW4vZ28vcWRyYW50L2Nsb3VkL2h5YnJpZC92MTtoeWJyaWR2MaICA1FDSKoCFlFkcmFudC5DbG91ZC5IeWJyaWQuVjHKAhZRZHJhbnRcQ2xvdWRcSHlicmlkXFYx4gIiUWRyYW50XENsb3VkXEh5YnJpZFxWMVxHUEJNZXRhZGF0YeoCGVFkcmFudDo6Q2xvdWQ6Okh5YnJpZDo6VjFiBnByb3RvMw", [file_k8s_io_api_core_v1_generated, file_k8s_io_api_networking_v1_generated, file_k8s_io_api_policy_v1_generated, file_qdrant_cloud_cluster_v1_cluster]);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorConfiguration.
 * Use `create(OperatorConfigurationSchema)` to create a new message.
 */
export const OperatorConfigurationSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 0);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorFeatures.
 * Use `create(OperatorFeaturesSchema)` to create a new message.
 */
export const OperatorFeaturesSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 1);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorBackupManagement.
 * Use `create(OperatorBackupManagementSchema)` to create a new message.
 */
export const OperatorBackupManagementSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 2);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorSnapshots.
 * Use `create(OperatorSnapshotsSchema)` to create a new message.
 */
export const OperatorSnapshotsSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 3);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorScheduledSnapshots.
 * Use `create(OperatorScheduledSnapshotsSchema)` to create a new message.
 */
export const OperatorScheduledSnapshotsSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 4);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorRestores.
 * Use `create(OperatorRestoresSchema)` to create a new message.
 */
export const OperatorRestoresSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 5);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorClusterManagement.
 * Use `create(OperatorClusterManagementSchema)` to create a new message.
 */
export const OperatorClusterManagementSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 6);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorScheduling.
 * Use `create(OperatorSchedulingSchema)` to create a new message.
 */
export const OperatorSchedulingSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 7);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorClusterManager.
 * Use `create(OperatorClusterManagerSchema)` to create a new message.
 */
export const OperatorClusterManagerSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 8);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorIngress.
 * Use `create(OperatorIngressSchema)` to create a new message.
 */
export const OperatorIngressSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 9);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorKubernetesIngress.
 * Use `create(OperatorKubernetesIngressSchema)` to create a new message.
 */
export const OperatorKubernetesIngressSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 10);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorClusterManagerOverrides.
 * Use `create(OperatorClusterManagerOverridesSchema)` to create a new message.
 */
export const OperatorClusterManagerOverridesSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 11);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorStorageClass.
 * Use `create(OperatorStorageClassSchema)` to create a new message.
 */
export const OperatorStorageClassSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 12);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorQdrant.
 * Use `create(OperatorQdrantSchema)` to create a new message.
 */
export const OperatorQdrantSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 13);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorNetworkPolicy.
 * Use `create(OperatorNetworkPolicySchema)` to create a new message.
 */
export const OperatorNetworkPolicySchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 14);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorSecurityContext.
 * Use `create(OperatorSecurityContextSchema)` to create a new message.
 */
export const OperatorSecurityContextSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 15);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorQdrantStorage.
 * Use `create(OperatorQdrantStorageSchema)` to create a new message.
 */
export const OperatorQdrantStorageSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 16);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorQdrantPerformance.
 * Use `create(OperatorQdrantPerformanceSchema)` to create a new message.
 */
export const OperatorQdrantPerformanceSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 17);

/**
 * Describes the message qdrant.cloud.hybrid.v1.OperatorQdrantImage.
 * Use `create(OperatorQdrantImageSchema)` to create a new message.
 */
export const OperatorQdrantImageSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_operator, 18);

