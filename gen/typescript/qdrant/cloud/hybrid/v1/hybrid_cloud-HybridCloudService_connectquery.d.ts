// @generated by protoc-gen-connect-query v2.1.1 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/hybrid/v1/hybrid_cloud.proto (package qdrant.cloud.hybrid.v1, syntax proto3)
/* eslint-disable */

import { HybridCloudService } from "./hybrid_cloud_pb.js";

/**
 * Lists all hybrid cloud environments in the account identified by the given ID.
 * Required permissions (any-of):
 * - read:hybrid_cloud_environments
 * - write:clusters
 *
 * @generated from rpc qdrant.cloud.hybrid.v1.HybridCloudService.ListHybridCloudEnvironments
 */
export const listHybridCloudEnvironments: typeof HybridCloudService["method"]["listHybridCloudEnvironments"];
/**
 * Gets a hybrid cloud environment in the account identified by the given ID.
 * Required permissions (any-of):
 * - read:hybrid_cloud_environments
 * - write:clusters
 *
 * @generated from rpc qdrant.cloud.hybrid.v1.HybridCloudService.GetHybridCloudEnvironment
 */
export const getHybridCloudEnvironment: typeof HybridCloudService["method"]["getHybridCloudEnvironment"];
/**
 * Creates a hybrid cloud environment in the account identified by the given ID.
 * Required permissions:
 * - write:hybrid_cloud_environments
 *
 * @generated from rpc qdrant.cloud.hybrid.v1.HybridCloudService.CreateHybridCloudEnvironment
 */
export const createHybridCloudEnvironment: typeof HybridCloudService["method"]["createHybridCloudEnvironment"];
/**
 * Updates a hybrid cloud environment in the account identified by the given ID.
 * Required permissions:
 * - write:hybrid_cloud_environments
 *
 * @generated from rpc qdrant.cloud.hybrid.v1.HybridCloudService.UpdateHybridCloudEnvironment
 */
export const updateHybridCloudEnvironment: typeof HybridCloudService["method"]["updateHybridCloudEnvironment"];
/**
 * Deletes a hybrid cloud environment in the account identified by the given ID.
 * Required permissions:
 * - delete:hybrid_cloud_environments
 *
 * @generated from rpc qdrant.cloud.hybrid.v1.HybridCloudService.DeleteHybridCloudEnvironment
 */
export const deleteHybridCloudEnvironment: typeof HybridCloudService["method"]["deleteHybridCloudEnvironment"];
/**
 * Generates the commands that should be executed against a kubernetes cluster to
 * bootstrap it to the hybrid cloud environment. The operation can be invoked multiple times,
 * but be aware that each invocation is going to create new Qdrant cloud access token and the registry credentials.
 * Thus, it makes sense to call it only if a kubernetes cluster is not yet registered to the given hybrid environment.
 * Required permission:
 * - write:hybrid_cloud_environments
 *
 * @generated from rpc qdrant.cloud.hybrid.v1.HybridCloudService.GenerateBootstrapCommands
 */
export const generateBootstrapCommands: typeof HybridCloudService["method"]["generateBootstrapCommands"];
