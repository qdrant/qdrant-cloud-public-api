// @generated by protoc-gen-es v2.5.2 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/hybrid/v1/hybrid_cloud.proto (package qdrant.cloud.hybrid.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb.js";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_k8s_io_api_networking_v1_generated } from "../../../../k8s.io/api/networking/v1/generated_pb.js";
import { file_qdrant_cloud_cluster_v1_cluster } from "../../cluster/v1/cluster_pb.js";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb.js";

/**
 * Describes the file qdrant/cloud/hybrid/v1/hybrid_cloud.proto.
 */
export const file_qdrant_cloud_hybrid_v1_hybrid_cloud = /*@__PURE__*/
  fileDesc("", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_k8s_io_api_networking_v1_generated, file_qdrant_cloud_cluster_v1_cluster, file_qdrant_cloud_common_v1_common]);

/**
 * Describes the message qdrant.cloud.hybrid.v1.GetBootstrapCommandsRequest.
 * Use `create(GetBootstrapCommandsRequestSchema)` to create a new message.
 */
export const GetBootstrapCommandsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 0);

/**
 * Describes the message qdrant.cloud.hybrid.v1.GetBootstrapCommandsResponse.
 * Use `create(GetBootstrapCommandsResponseSchema)` to create a new message.
 */
export const GetBootstrapCommandsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 1);

/**
 * Describes the message qdrant.cloud.hybrid.v1.DeleteHybridCloudEnvironmentRequest.
 * Use `create(DeleteHybridCloudEnvironmentRequestSchema)` to create a new message.
 */
export const DeleteHybridCloudEnvironmentRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 2);

/**
 * Describes the message qdrant.cloud.hybrid.v1.DeleteHybridCloudEnvironmentResponse.
 * Use `create(DeleteHybridCloudEnvironmentResponseSchema)` to create a new message.
 */
export const DeleteHybridCloudEnvironmentResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 3);

/**
 * Describes the message qdrant.cloud.hybrid.v1.UpdateHybridCloudEnvironmentRequest.
 * Use `create(UpdateHybridCloudEnvironmentRequestSchema)` to create a new message.
 */
export const UpdateHybridCloudEnvironmentRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 4);

/**
 * Describes the message qdrant.cloud.hybrid.v1.UpdateHybridCloudEnvironmentResponse.
 * Use `create(UpdateHybridCloudEnvironmentResponseSchema)` to create a new message.
 */
export const UpdateHybridCloudEnvironmentResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 5);

/**
 * Describes the message qdrant.cloud.hybrid.v1.CreateHybridCloudEnvironmentRequest.
 * Use `create(CreateHybridCloudEnvironmentRequestSchema)` to create a new message.
 */
export const CreateHybridCloudEnvironmentRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 6);

/**
 * Describes the message qdrant.cloud.hybrid.v1.CreateHybridCloudEnvironmentResponse.
 * Use `create(CreateHybridCloudEnvironmentResponseSchema)` to create a new message.
 */
export const CreateHybridCloudEnvironmentResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 7);

/**
 * Describes the message qdrant.cloud.hybrid.v1.GetHybridCloudEnvironmentRequest.
 * Use `create(GetHybridCloudEnvironmentRequestSchema)` to create a new message.
 */
export const GetHybridCloudEnvironmentRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 8);

/**
 * Describes the message qdrant.cloud.hybrid.v1.GetHybridCloudEnvironmentResponse.
 * Use `create(GetHybridCloudEnvironmentResponseSchema)` to create a new message.
 */
export const GetHybridCloudEnvironmentResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 9);

/**
 * Describes the message qdrant.cloud.hybrid.v1.ListHybridCloudEnvironmentsRequest.
 * Use `create(ListHybridCloudEnvironmentsRequestSchema)` to create a new message.
 */
export const ListHybridCloudEnvironmentsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 10);

/**
 * Describes the message qdrant.cloud.hybrid.v1.ListHybridCloudEnvironmentsResponse.
 * Use `create(ListHybridCloudEnvironmentsResponseSchema)` to create a new message.
 */
export const ListHybridCloudEnvironmentsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 11);

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironment.
 * Use `create(HybridCloudEnvironmentSchema)` to create a new message.
 */
export const HybridCloudEnvironmentSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 12);

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentConfiguration.
 * Use `create(HybridCloudEnvironmentConfigurationSchema)` to create a new message.
 */
export const HybridCloudEnvironmentConfigurationSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 13);

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStatus.
 * Use `create(HybridCloudEnvironmentStatusSchema)` to create a new message.
 */
export const HybridCloudEnvironmentStatusSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 14);

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentCapabilities.
 * Use `create(HybridCloudEnvironmentCapabilitiesSchema)` to create a new message.
 */
export const HybridCloudEnvironmentCapabilitiesSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 15);

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentComponentStatus.
 * Use `create(HybridCloudEnvironmentComponentStatusSchema)` to create a new message.
 */
export const HybridCloudEnvironmentComponentStatusSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 16);

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStorageClass.
 * Use `create(HybridCloudEnvironmentStorageClassSchema)` to create a new message.
 */
export const HybridCloudEnvironmentStorageClassSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 17);

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentVolumeSnapshotClass.
 * Use `create(HybridCloudEnvironmentVolumeSnapshotClassSchema)` to create a new message.
 */
export const HybridCloudEnvironmentVolumeSnapshotClassSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 18);

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentNodeInfo.
 * Use `create(HybridCloudEnvironmentNodeInfoSchema)` to create a new message.
 */
export const HybridCloudEnvironmentNodeInfoSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 19);

/**
 * Describes the message qdrant.cloud.hybrid.v1.HybridCloudEnvironmentNodeResourceInfo.
 * Use `create(HybridCloudEnvironmentNodeResourceInfoSchema)` to create a new message.
 */
export const HybridCloudEnvironmentNodeResourceInfoSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 20);

/**
 * Describes the enum qdrant.cloud.hybrid.v1.HybridCloudEnvironmentConfigurationLogLevel.
 */
export const HybridCloudEnvironmentConfigurationLogLevelSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 0);

/**
 * HybridCloudEnvironmentConfigurationLogLevel represents the log level applied to the hybrid cloud environment components
 *
 * @generated from enum qdrant.cloud.hybrid.v1.HybridCloudEnvironmentConfigurationLogLevel
 */
export const HybridCloudEnvironmentConfigurationLogLevel = /*@__PURE__*/
  tsEnum(HybridCloudEnvironmentConfigurationLogLevelSchema);

/**
 * Describes the enum qdrant.cloud.hybrid.v1.QdrantClusterCreationStatus.
 */
export const QdrantClusterCreationStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 1);

/**
 * QdrantClusterCreationStatus indicates if Qdrant clusters can be created in the environment
 *
 * @generated from enum qdrant.cloud.hybrid.v1.QdrantClusterCreationStatus
 */
export const QdrantClusterCreationStatus = /*@__PURE__*/
  tsEnum(QdrantClusterCreationStatusSchema);

/**
 * Describes the enum qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStatusPhase.
 */
export const HybridCloudEnvironmentStatusPhaseSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 2);

/**
 * Status phase of hybrid cloud environment
 *
 * @generated from enum qdrant.cloud.hybrid.v1.HybridCloudEnvironmentStatusPhase
 */
export const HybridCloudEnvironmentStatusPhase = /*@__PURE__*/
  tsEnum(HybridCloudEnvironmentStatusPhaseSchema);

/**
 * Describes the enum qdrant.cloud.hybrid.v1.HybridCloudEnvironmentComponentStatusPhase.
 */
export const HybridCloudEnvironmentComponentStatusPhaseSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 3);

/**
 * Component status phase
 *
 * @generated from enum qdrant.cloud.hybrid.v1.HybridCloudEnvironmentComponentStatusPhase
 */
export const HybridCloudEnvironmentComponentStatusPhase = /*@__PURE__*/
  tsEnum(HybridCloudEnvironmentComponentStatusPhaseSchema);

/**
 * Describes the enum qdrant.cloud.hybrid.v1.KubernetesDistribution.
 */
export const KubernetesDistributionSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 4);

/**
 * Kubernetes distributions
 *
 * @generated from enum qdrant.cloud.hybrid.v1.KubernetesDistribution
 */
export const KubernetesDistribution = /*@__PURE__*/
  tsEnum(KubernetesDistributionSchema);

/**
 * HybridCloudService is the API used for configuring hybrid cloud environments.
 *
 * @generated from service qdrant.cloud.hybrid.v1.HybridCloudService
 */
export const HybridCloudService = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_hybrid_v1_hybrid_cloud, 0);

