// @generated by protoc-gen-connect-query v2.1.0 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/monitoring/v1/monitoring.proto (package qdrant.cloud.monitoring.v1, syntax proto3)
/* eslint-disable */

import { MonitoringService } from "./monitoring_pb.js";

/**
 * Gets the summary metrics of a cluster in the account identified by the given ID.
 * Required permissions:
 * - read:clusters
 *
 * @generated from rpc qdrant.cloud.monitoring.v1.MonitoringService.GetClusterSummaryMetrics
 */
export const getClusterSummaryMetrics: typeof MonitoringService["method"]["getClusterSummaryMetrics"];
/**
 * Gets the detailed usage metrics (as timeseries) of a cluster in the account identified by the given ID.
 * Required permissions:
 * - read:clusters
 *
 * @generated from rpc qdrant.cloud.monitoring.v1.MonitoringService.GetClusterUsageMetrics
 */
export const getClusterUsageMetrics: typeof MonitoringService["method"]["getClusterUsageMetrics"];
/**
 * Gets the logs of a cluster in the account identified by the given ID.
 * Required permissions:
 * - read:clusters
 *
 * @generated from rpc qdrant.cloud.monitoring.v1.MonitoringService.GetClusterLogs
 */
export const getClusterLogs: typeof MonitoringService["method"]["getClusterLogs"];
/**
 * Gets the events of a cluster in the account identified by the given ID.
 * This method is currently available only for clusters running in hybrid cloud environments.
 * Required permissions:
 * - read:clusters
 *
 * @generated from rpc qdrant.cloud.monitoring.v1.MonitoringService.GetClusterEvents
 */
export const getClusterEvents: typeof MonitoringService["method"]["getClusterEvents"];
