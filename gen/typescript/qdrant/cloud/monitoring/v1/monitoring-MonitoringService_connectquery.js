// @generated by protoc-gen-connect-query v0.4.1
// @generated from file qdrant/cloud/monitoring/v1/monitoring.proto (package qdrant.cloud.monitoring.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { createQueryService } from "@bufbuild/connect-query";
import { MethodKind } from "@bufbuild/protobuf";
import { GetClusterEventsRequest, GetClusterEventsResponse, GetClusterLogsRequest, GetClusterLogsResponse, GetClusterSummaryMetricsRequest, GetClusterSummaryMetricsResponse, GetClusterUsageMetricsRequest, GetClusterUsageMetricsResponse } from "./monitoring_pb.js";

export const typeName = "qdrant.cloud.monitoring.v1.MonitoringService";

/**
 * Gets the summary metrics of a cluster in the account identified by the given ID.
 * Required permissions:
 * - read:clusters
 *
 * @generated from rpc qdrant.cloud.monitoring.v1.MonitoringService.GetClusterSummaryMetrics
 */
export const getClusterSummaryMetrics = createQueryService({
  service: {
    methods: {
      getClusterSummaryMetrics: {
        name: "GetClusterSummaryMetrics",
        kind: MethodKind.Unary,
        I: GetClusterSummaryMetricsRequest,
        O: GetClusterSummaryMetricsResponse,
      },
    },
    typeName: "qdrant.cloud.monitoring.v1.MonitoringService",
  },
}).getClusterSummaryMetrics;

/**
 * Gets the detailed usage metrics (as timeseries) of a cluster in the account identified by the given ID.
 * Required permissions:
 * - read:clusters
 *
 * @generated from rpc qdrant.cloud.monitoring.v1.MonitoringService.GetClusterUsageMetrics
 */
export const getClusterUsageMetrics = createQueryService({
  service: {
    methods: {
      getClusterUsageMetrics: {
        name: "GetClusterUsageMetrics",
        kind: MethodKind.Unary,
        I: GetClusterUsageMetricsRequest,
        O: GetClusterUsageMetricsResponse,
      },
    },
    typeName: "qdrant.cloud.monitoring.v1.MonitoringService",
  },
}).getClusterUsageMetrics;

/**
 * Gets the logs of a cluster in the account identified by the given ID.
 * Required permissions:
 * - read:clusters
 *
 * @generated from rpc qdrant.cloud.monitoring.v1.MonitoringService.GetClusterLogs
 */
export const getClusterLogs = createQueryService({
  service: {
    methods: {
      getClusterLogs: {
        name: "GetClusterLogs",
        kind: MethodKind.Unary,
        I: GetClusterLogsRequest,
        O: GetClusterLogsResponse,
      },
    },
    typeName: "qdrant.cloud.monitoring.v1.MonitoringService",
  },
}).getClusterLogs;

/**
 * Gets the events of a cluster in the account identified by the given ID.
 * This method is currently available only for clusters running in hybrid cloud environments.
 * Required permissions:
 * - read:clusters
 *
 * @generated from rpc qdrant.cloud.monitoring.v1.MonitoringService.GetClusterEvents
 */
export const getClusterEvents = createQueryService({
  service: {
    methods: {
      getClusterEvents: {
        name: "GetClusterEvents",
        kind: MethodKind.Unary,
        I: GetClusterEventsRequest,
        O: GetClusterEventsResponse,
      },
    },
    typeName: "qdrant.cloud.monitoring.v1.MonitoringService",
  },
}).getClusterEvents;
