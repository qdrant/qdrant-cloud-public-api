// @generated by protoc-gen-es v2.2.3 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/monitoring/v1/monitoring.proto (package qdrant.cloud.monitoring.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb.js";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb.js";

/**
 * Describes the file qdrant/cloud/monitoring/v1/monitoring.proto.
 */
export const file_qdrant_cloud_monitoring_v1_monitoring = /*@__PURE__*/
  fileDesc("CitxZHJhbnQvY2xvdWQvbW9uaXRvcmluZy92MS9tb25pdG9yaW5nLnByb3RvEhpxZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MSJdCh9HZXRDbHVzdGVyU3VtbWFyeU1ldHJpY3NSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhwKCmNsdXN0ZXJfaWQYAiABKAlCCLpIBXIDsAEBImEKIEdldENsdXN0ZXJTdW1tYXJ5TWV0cmljc1Jlc3BvbnNlEj0KBW5vZGVzGAEgAygLMi4ucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQ2x1c3Rlck5vZGVNZXRyaWNzIp8CCh1HZXRDbHVzdGVyVXNhZ2VNZXRyaWNzUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIcCgpjbHVzdGVyX2lkGAIgASgJQgi6SAVyA7ABARIuCgVzaW5jZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAIgBARIuCgV1bnRpbBgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAYgBARI/CgphZ2dyZWdhdG9yGAUgASgOMiYucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQWdncmVnYXRvckgCiAEBQggKBl9zaW5jZUIICgZfdW50aWxCDQoLX2FnZ3JlZ2F0b3IihgQKHkdldENsdXN0ZXJVc2FnZU1ldHJpY3NSZXNwb25zZRIvCgNjcHUYASADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSLwoDcmFtGAIgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjUKCXJhbV9jYWNoZRgDIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYxIzCgdyYW1fcnNzGAQgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjoKDnJhbV9xZHJhbnRfcnNzGAUgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjAKBGRpc2sYBiADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSLwoDcnBzGAcgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjMKB2xhdGVuY3kYCCADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSQgoFbm9kZXMYCSADKAsyMy5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5DbHVzdGVyTm9kZVVzYWdlTWV0cmljcyJTChVHZXRDbHVzdGVyTG9nc1JlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQESHAoKY2x1c3Rlcl9pZBgCIAEoCUIIukgFcgOwAQEiTQoWR2V0Q2x1c3RlckxvZ3NSZXNwb25zZRIzCgVpdGVtcxgBIAMoCzIkLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkxvZ0VudHJ5IvMBChdHZXRDbHVzdGVyRXZlbnRzUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIcCgpjbHVzdGVyX2lkGAIgASgJQgi6SAVyA7ABARIuCgVzaW5jZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAIgBARIuCgV1bnRpbBgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAYgBARIeCgVsaW1pdBgFIAEoDUIKukgHKgUY6AcoAUgCiAEBQggKBl9zaW5jZUIICgZfdW50aWxCCAoGX2xpbWl0Il8KGEdldENsdXN0ZXJFdmVudHNSZXNwb25zZRIOCgZzdGF0dXMYASABKAkSMwoFaXRlbXMYAiADKAsyJC5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5Mb2dFbnRyeSK7AwoSQ2x1c3Rlck5vZGVNZXRyaWNzEg8KB25vZGVfaWQYASABKAkSPgoDY3B1GAIgASgLMjEucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQ2x1c3Rlck1ldHJpY092ZXJ2aWV3Ej4KA3JhbRgDIAEoCzIxLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkNsdXN0ZXJNZXRyaWNPdmVydmlldxJECglyYW1fY2FjaGUYBCABKAsyMS5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5DbHVzdGVyTWV0cmljT3ZlcnZpZXcSQgoHcmFtX3JzcxgFIAEoCzIxLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkNsdXN0ZXJNZXRyaWNPdmVydmlldxJJCg5yYW1fcWRyYW50X3JzcxgGIAEoCzIxLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkNsdXN0ZXJNZXRyaWNPdmVydmlldxI/CgRkaXNrGAcgASgLMjEucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQ2x1c3Rlck1ldHJpY092ZXJ2aWV3IosBChVDbHVzdGVyTWV0cmljT3ZlcnZpZXcSOAoDYXZnGAEgAygLMisucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuSW50ZXJ2YWxBdmVyYWdlEjgKBXRvdGFsGAIgASgLMikucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuUmVzb3VyY2VWYWx1ZSIyCg9JbnRlcnZhbEF2ZXJhZ2USEAoIaW50ZXJ2YWwYASABKAkSDQoFdmFsdWUYAiABKAEiLAoNUmVzb3VyY2VWYWx1ZRINCgV2YWx1ZRgBIAEoCRIMCgR1bml0GAIgASgJIuYCChdDbHVzdGVyTm9kZVVzYWdlTWV0cmljcxIPCgdub2RlX2lkGAEgASgJEi8KA2NwdRgCIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYxIvCgNyYW0YAyADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSNQoJcmFtX2NhY2hlGAQgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjMKB3JhbV9yc3MYBSADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSOgoOcmFtX3FkcmFudF9yc3MYBiADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSMAoEZGlzaxgHIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYyJGCgZNZXRyaWMSLQoJdGltZXN0YW1wGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBINCgV2YWx1ZRgCIAEoASJKCghMb2dFbnRyeRItCgl0aW1lc3RhbXAYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEg8KB21lc3NhZ2UYAiABKAkqeAoKQWdncmVnYXRvchIaChZBR0dSRUdBVE9SX1VOU1BFQ0lGSUVEEAASEgoOQUdHUkVHQVRPUl9TVU0QARISCg5BR0dSRUdBVE9SX0FWRxACEhIKDkFHR1JFR0FUT1JfTUFYEAMSEgoOQUdHUkVHQVRPUl9NSU4QBDLBBwoRTW9uaXRvcmluZ1NlcnZpY2US/QEKGEdldENsdXN0ZXJTdW1tYXJ5TWV0cmljcxI7LnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkdldENsdXN0ZXJTdW1tYXJ5TWV0cmljc1JlcXVlc3QaPC5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5HZXRDbHVzdGVyU3VtbWFyeU1ldHJpY3NSZXNwb25zZSJmirUYDXJlYWQ6Y2x1c3RlcnOC0+STAk8STS9hcGkvbW9uaXRvcmluZy92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vY2x1c3Rlci97Y2x1c3Rlcl9pZH0vc3VtbWFyeS1tZXRyaWNzEvUBChZHZXRDbHVzdGVyVXNhZ2VNZXRyaWNzEjkucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuR2V0Q2x1c3RlclVzYWdlTWV0cmljc1JlcXVlc3QaOi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5HZXRDbHVzdGVyVXNhZ2VNZXRyaWNzUmVzcG9uc2UiZIq1GA1yZWFkOmNsdXN0ZXJzgtPkkwJNEksvYXBpL21vbml0b3JpbmcvdjEvYWNjb3VudHMve2FjY291bnRfaWR9L2NsdXN0ZXIve2NsdXN0ZXJfaWR9L3VzYWdlLW1ldHJpY3MS1AEKDkdldENsdXN0ZXJMb2dzEjEucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuR2V0Q2x1c3RlckxvZ3NSZXF1ZXN0GjIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuR2V0Q2x1c3RlckxvZ3NSZXNwb25zZSJbirUYDXJlYWQ6Y2x1c3RlcnOC0+STAkQSQi9hcGkvbW9uaXRvcmluZy92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vY2x1c3Rlci97Y2x1c3Rlcl9pZH0vbG9ncxLcAQoQR2V0Q2x1c3RlckV2ZW50cxIzLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkdldENsdXN0ZXJFdmVudHNSZXF1ZXN0GjQucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuR2V0Q2x1c3RlckV2ZW50c1Jlc3BvbnNlIl2KtRgNcmVhZDpjbHVzdGVyc4LT5JMCRhJEL2FwaS9tb25pdG9yaW5nL3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9jbHVzdGVyL3tjbHVzdGVyX2lkfS9ldmVudHNClgIKHmNvbS5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MUIPTW9uaXRvcmluZ1Byb3RvUAFaWGdpdGh1Yi5jb20vcWRyYW50L3FkcmFudC1jbG91ZC1wdWJsaWMtYXBpL2dlbi9nby9xZHJhbnQvY2xvdWQvbW9uaXRvcmluZy92MTttb25pdG9yaW5ndjGiAgNRQ02qAhpRZHJhbnQuQ2xvdWQuTW9uaXRvcmluZy5WMcoCGlFkcmFudFxDbG91ZFxNb25pdG9yaW5nXFYx4gImUWRyYW50XENsb3VkXE1vbml0b3JpbmdcVjFcR1BCTWV0YWRhdGHqAh1RZHJhbnQ6OkNsb3VkOjpNb25pdG9yaW5nOjpWMWIGcHJvdG8z", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common]);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterSummaryMetricsRequest.
 * Use `create(GetClusterSummaryMetricsRequestSchema)` to create a new message.
 */
export const GetClusterSummaryMetricsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 0);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterSummaryMetricsResponse.
 * Use `create(GetClusterSummaryMetricsResponseSchema)` to create a new message.
 */
export const GetClusterSummaryMetricsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 1);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterUsageMetricsRequest.
 * Use `create(GetClusterUsageMetricsRequestSchema)` to create a new message.
 */
export const GetClusterUsageMetricsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 2);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterUsageMetricsResponse.
 * Use `create(GetClusterUsageMetricsResponseSchema)` to create a new message.
 */
export const GetClusterUsageMetricsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 3);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterLogsRequest.
 * Use `create(GetClusterLogsRequestSchema)` to create a new message.
 */
export const GetClusterLogsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 4);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterLogsResponse.
 * Use `create(GetClusterLogsResponseSchema)` to create a new message.
 */
export const GetClusterLogsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 5);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterEventsRequest.
 * Use `create(GetClusterEventsRequestSchema)` to create a new message.
 */
export const GetClusterEventsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 6);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterEventsResponse.
 * Use `create(GetClusterEventsResponseSchema)` to create a new message.
 */
export const GetClusterEventsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 7);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ClusterNodeMetrics.
 * Use `create(ClusterNodeMetricsSchema)` to create a new message.
 */
export const ClusterNodeMetricsSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 8);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ClusterMetricOverview.
 * Use `create(ClusterMetricOverviewSchema)` to create a new message.
 */
export const ClusterMetricOverviewSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 9);

/**
 * Describes the message qdrant.cloud.monitoring.v1.IntervalAverage.
 * Use `create(IntervalAverageSchema)` to create a new message.
 */
export const IntervalAverageSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 10);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ResourceValue.
 * Use `create(ResourceValueSchema)` to create a new message.
 */
export const ResourceValueSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 11);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ClusterNodeUsageMetrics.
 * Use `create(ClusterNodeUsageMetricsSchema)` to create a new message.
 */
export const ClusterNodeUsageMetricsSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 12);

/**
 * Describes the message qdrant.cloud.monitoring.v1.Metric.
 * Use `create(MetricSchema)` to create a new message.
 */
export const MetricSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 13);

/**
 * Describes the message qdrant.cloud.monitoring.v1.LogEntry.
 * Use `create(LogEntrySchema)` to create a new message.
 */
export const LogEntrySchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 14);

/**
 * Describes the enum qdrant.cloud.monitoring.v1.Aggregator.
 */
export const AggregatorSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_monitoring_v1_monitoring, 0);

/**
 * Aggregator defines how metrics should be aggregated over time.
 *
 * @generated from enum qdrant.cloud.monitoring.v1.Aggregator
 */
export const Aggregator = /*@__PURE__*/
  tsEnum(AggregatorSchema);

/**
 * MonitoringService provides access to monitoring data such as cluster metrics, logs, and events.
 *
 * @generated from service qdrant.cloud.monitoring.v1.MonitoringService
 */
export const MonitoringService = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_monitoring_v1_monitoring, 0);

