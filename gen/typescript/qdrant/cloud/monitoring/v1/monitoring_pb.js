// @generated by protoc-gen-es v2.7.0 with parameter "target=js+dts,import_extension=js,valid_types=protovalidate_required"
// @generated from file qdrant/cloud/monitoring/v1/monitoring.proto (package qdrant.cloud.monitoring.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb.js";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb.js";

/**
 * Describes the file qdrant/cloud/monitoring/v1/monitoring.proto.
 */
export const file_qdrant_cloud_monitoring_v1_monitoring = /*@__PURE__*/
  fileDesc("CitxZHJhbnQvY2xvdWQvbW9uaXRvcmluZy92MS9tb25pdG9yaW5nLnByb3RvEhpxZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MSJdCh9HZXRDbHVzdGVyU3VtbWFyeU1ldHJpY3NSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhwKCmNsdXN0ZXJfaWQYAiABKAlCCLpIBXIDsAEBImEKIEdldENsdXN0ZXJTdW1tYXJ5TWV0cmljc1Jlc3BvbnNlEj0KBW5vZGVzGAEgAygLMi4ucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQ2x1c3Rlck5vZGVNZXRyaWNzIrsDCh1HZXRDbHVzdGVyVXNhZ2VNZXRyaWNzUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIcCgpjbHVzdGVyX2lkGAIgASgJQgi6SAVyA7ABARIuCgVzaW5jZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAIgBARIuCgV1bnRpbBgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAYgBARJLCgphZ2dyZWdhdG9yGAUgASgOMiYucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQWdncmVnYXRvckIKukgHggEEEAEgAEgCiAEBOo0BukiJARqGAQooZ2V0X2NsdXN0ZXJfdXNhZ2VfbWV0cmljcy51bnRpbF9ndF9zaW5jZRIZdW50aWwgbXVzdCBiZSBhZnRlciBzaW5jZRo/IWhhcyh0aGlzLnNpbmNlKSB8fCAhaGFzKHRoaXMudW50aWwpIHx8IHRoaXMudW50aWwgPiB0aGlzLnNpbmNlQggKBl9zaW5jZUIICgZfdW50aWxCDQoLX2FnZ3JlZ2F0b3IihgQKHkdldENsdXN0ZXJVc2FnZU1ldHJpY3NSZXNwb25zZRIvCgNjcHUYASADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSLwoDcmFtGAIgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjUKCXJhbV9jYWNoZRgDIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYxIzCgdyYW1fcnNzGAQgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjoKDnJhbV9xZHJhbnRfcnNzGAUgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjAKBGRpc2sYBiADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSLwoDcnBzGAcgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjMKB2xhdGVuY3kYCCADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSQgoFbm9kZXMYCSADKAsyMy5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5DbHVzdGVyTm9kZVVzYWdlTWV0cmljcyLMAgoVR2V0Q2x1c3RlckxvZ3NSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhwKCmNsdXN0ZXJfaWQYAiABKAlCCLpIBXIDsAEBEi4KBXNpbmNlGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAiAEBEi4KBXVudGlsGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgBiAEBOoIBukh/Gn0KH2dldF9jbHVzdGVyX2xvZ3MudW50aWxfZ3Rfc2luY2USGXVudGlsIG11c3QgYmUgYWZ0ZXIgc2luY2UaPyFoYXModGhpcy5zaW5jZSkgfHwgIWhhcyh0aGlzLnVudGlsKSB8fCB0aGlzLnVudGlsID4gdGhpcy5zaW5jZUIICgZfc2luY2VCCAoGX3VudGlsIk0KFkdldENsdXN0ZXJMb2dzUmVzcG9uc2USMwoFaXRlbXMYASADKAsyJC5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5Mb2dFbnRyeSLRAgoXR2V0Q2x1c3RlckV2ZW50c1JlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQESHAoKY2x1c3Rlcl9pZBgCIAEoCUIIukgFcgOwAQESLgoFc2luY2UYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSACIAQESLgoFdW50aWwYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAGIAQE6hQG6SIEBGn8KIWdldF9jbHVzdGVyX2V2ZW50cy51bnRpbF9ndF9zaW5jZRIZdW50aWwgbXVzdCBiZSBhZnRlciBzaW5jZRo/IWhhcyh0aGlzLnNpbmNlKSB8fCAhaGFzKHRoaXMudW50aWwpIHx8IHRoaXMudW50aWwgPiB0aGlzLnNpbmNlQggKBl9zaW5jZUIICgZfdW50aWwiTwoYR2V0Q2x1c3RlckV2ZW50c1Jlc3BvbnNlEjMKBWl0ZW1zGAEgAygLMiQucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTG9nRW50cnki9AMKEkNsdXN0ZXJOb2RlTWV0cmljcxIYCgdub2RlX2lkGAEgASgJQge6SARyAhABEkYKA2NwdRgCIAEoCzIxLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkNsdXN0ZXJNZXRyaWNPdmVydmlld0IGukgDyAEBEkYKA3JhbRgDIAEoCzIxLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkNsdXN0ZXJNZXRyaWNPdmVydmlld0IGukgDyAEBEkwKCXJhbV9jYWNoZRgEIAEoCzIxLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkNsdXN0ZXJNZXRyaWNPdmVydmlld0IGukgDyAEBEkoKB3JhbV9yc3MYBSABKAsyMS5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5DbHVzdGVyTWV0cmljT3ZlcnZpZXdCBrpIA8gBARJRCg5yYW1fcWRyYW50X3JzcxgGIAEoCzIxLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkNsdXN0ZXJNZXRyaWNPdmVydmlld0IGukgDyAEBEkcKBGRpc2sYByABKAsyMS5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5DbHVzdGVyTWV0cmljT3ZlcnZpZXdCBrpIA8gBASKTAQoVQ2x1c3Rlck1ldHJpY092ZXJ2aWV3EjgKA2F2ZxgBIAMoCzIrLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkludGVydmFsQXZlcmFnZRJACgV0b3RhbBgCIAEoCzIpLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLlJlc291cmNlVmFsdWVCBrpIA8gBASJlCg9JbnRlcnZhbEF2ZXJhZ2USMwoIaW50ZXJ2YWwYASABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25CBrpIA8gBARIdCgV2YWx1ZRgCIAEoAUIOukgLEgkpAAAAAAAAAAAiRQoNUmVzb3VyY2VWYWx1ZRIdCgV2YWx1ZRgBIAEoAUIOukgLEgkpAAAAAAAAAAASFQoEdW5pdBgCIAEoCUIHukgEcgIQASLvAgoXQ2x1c3Rlck5vZGVVc2FnZU1ldHJpY3MSGAoHbm9kZV9pZBgBIAEoCUIHukgEcgIQARIvCgNjcHUYAiADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSLwoDcmFtGAMgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjUKCXJhbV9jYWNoZRgEIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYxIzCgdyYW1fcnNzGAUgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjoKDnJhbV9xZHJhbnRfcnNzGAYgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjAKBGRpc2sYByADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMiXgoGTWV0cmljEjUKCXRpbWVzdGFtcBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCBrpIA8gBARIdCgV2YWx1ZRgCIAEoAUIOukgLEgkpAAAAAAAAAAAiWwoITG9nRW50cnkSNQoJdGltZXN0YW1wGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIGukgDyAEBEhgKB21lc3NhZ2UYAiABKAlCB7pIBHICEAEqeAoKQWdncmVnYXRvchIaChZBR0dSRUdBVE9SX1VOU1BFQ0lGSUVEEAASEgoOQUdHUkVHQVRPUl9TVU0QARISCg5BR0dSRUdBVE9SX0FWRxACEhIKDkFHR1JFR0FUT1JfTUFYEAMSEgoOQUdHUkVHQVRPUl9NSU4QBDKzCAoRTW9uaXRvcmluZ1NlcnZpY2USmgIKGEdldENsdXN0ZXJTdW1tYXJ5TWV0cmljcxI7LnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkdldENsdXN0ZXJTdW1tYXJ5TWV0cmljc1JlcXVlc3QaPC5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5HZXRDbHVzdGVyU3VtbWFyeU1ldHJpY3NSZXNwb25zZSKCAYq1GA1yZWFkOmNsdXN0ZXJzurUYGAoKY2x1c3Rlcl9pZBIKY2x1c3Rlcl9pZILT5JMCTxJNL2FwaS9tb25pdG9yaW5nL3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9jbHVzdGVyL3tjbHVzdGVyX2lkfS9zdW1tYXJ5LW1ldHJpY3MSkgIKFkdldENsdXN0ZXJVc2FnZU1ldHJpY3MSOS5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5HZXRDbHVzdGVyVXNhZ2VNZXRyaWNzUmVxdWVzdBo6LnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkdldENsdXN0ZXJVc2FnZU1ldHJpY3NSZXNwb25zZSKAAYq1GA1yZWFkOmNsdXN0ZXJzurUYGAoKY2x1c3Rlcl9pZBIKY2x1c3Rlcl9pZILT5JMCTRJLL2FwaS9tb25pdG9yaW5nL3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9jbHVzdGVyL3tjbHVzdGVyX2lkfS91c2FnZS1tZXRyaWNzEvABCg5HZXRDbHVzdGVyTG9ncxIxLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkdldENsdXN0ZXJMb2dzUmVxdWVzdBoyLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkdldENsdXN0ZXJMb2dzUmVzcG9uc2Uid4q1GA1yZWFkOmNsdXN0ZXJzurUYGAoKY2x1c3Rlcl9pZBIKY2x1c3Rlcl9pZILT5JMCRBJCL2FwaS9tb25pdG9yaW5nL3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9jbHVzdGVyL3tjbHVzdGVyX2lkfS9sb2dzEvgBChBHZXRDbHVzdGVyRXZlbnRzEjMucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuR2V0Q2x1c3RlckV2ZW50c1JlcXVlc3QaNC5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5HZXRDbHVzdGVyRXZlbnRzUmVzcG9uc2UieYq1GA1yZWFkOmNsdXN0ZXJzurUYGAoKY2x1c3Rlcl9pZBIKY2x1c3Rlcl9pZILT5JMCRhJEL2FwaS9tb25pdG9yaW5nL3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9jbHVzdGVyL3tjbHVzdGVyX2lkfS9ldmVudHNClgIKHmNvbS5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MUIPTW9uaXRvcmluZ1Byb3RvUAFaWGdpdGh1Yi5jb20vcWRyYW50L3FkcmFudC1jbG91ZC1wdWJsaWMtYXBpL2dlbi9nby9xZHJhbnQvY2xvdWQvbW9uaXRvcmluZy92MTttb25pdG9yaW5ndjGiAgNRQ02qAhpRZHJhbnQuQ2xvdWQuTW9uaXRvcmluZy5WMcoCGlFkcmFudFxDbG91ZFxNb25pdG9yaW5nXFYx4gImUWRyYW50XENsb3VkXE1vbml0b3JpbmdcVjFcR1BCTWV0YWRhdGHqAh1RZHJhbnQ6OkNsb3VkOjpNb25pdG9yaW5nOjpWMWIGcHJvdG8z", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_duration, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common]);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterSummaryMetricsRequest.
 * Use `create(GetClusterSummaryMetricsRequestSchema)` to create a new message.
 */
export const GetClusterSummaryMetricsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 0);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterSummaryMetricsResponse.
 * Use `create(GetClusterSummaryMetricsResponseSchema)` to create a new message.
 */
export const GetClusterSummaryMetricsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 1);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterUsageMetricsRequest.
 * Use `create(GetClusterUsageMetricsRequestSchema)` to create a new message.
 */
export const GetClusterUsageMetricsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 2);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterUsageMetricsResponse.
 * Use `create(GetClusterUsageMetricsResponseSchema)` to create a new message.
 */
export const GetClusterUsageMetricsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 3);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterLogsRequest.
 * Use `create(GetClusterLogsRequestSchema)` to create a new message.
 */
export const GetClusterLogsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 4);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterLogsResponse.
 * Use `create(GetClusterLogsResponseSchema)` to create a new message.
 */
export const GetClusterLogsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 5);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterEventsRequest.
 * Use `create(GetClusterEventsRequestSchema)` to create a new message.
 */
export const GetClusterEventsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 6);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterEventsResponse.
 * Use `create(GetClusterEventsResponseSchema)` to create a new message.
 */
export const GetClusterEventsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 7);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ClusterNodeMetrics.
 * Use `create(ClusterNodeMetricsSchema)` to create a new message.
 */
export const ClusterNodeMetricsSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 8);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ClusterMetricOverview.
 * Use `create(ClusterMetricOverviewSchema)` to create a new message.
 */
export const ClusterMetricOverviewSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 9);

/**
 * Describes the message qdrant.cloud.monitoring.v1.IntervalAverage.
 * Use `create(IntervalAverageSchema)` to create a new message.
 */
export const IntervalAverageSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 10);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ResourceValue.
 * Use `create(ResourceValueSchema)` to create a new message.
 */
export const ResourceValueSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 11);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ClusterNodeUsageMetrics.
 * Use `create(ClusterNodeUsageMetricsSchema)` to create a new message.
 */
export const ClusterNodeUsageMetricsSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 12);

/**
 * Describes the message qdrant.cloud.monitoring.v1.Metric.
 * Use `create(MetricSchema)` to create a new message.
 */
export const MetricSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 13);

/**
 * Describes the message qdrant.cloud.monitoring.v1.LogEntry.
 * Use `create(LogEntrySchema)` to create a new message.
 */
export const LogEntrySchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 14);

/**
 * Describes the enum qdrant.cloud.monitoring.v1.Aggregator.
 */
export const AggregatorSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_monitoring_v1_monitoring, 0);

/**
 * Aggregator defines how metrics should be aggregated over time.
 *
 * @generated from enum qdrant.cloud.monitoring.v1.Aggregator
 */
export const Aggregator = /*@__PURE__*/
  tsEnum(AggregatorSchema);

/**
 * MonitoringService provides access to monitoring data such as cluster metrics, logs, and events.
 *
 * @generated from service qdrant.cloud.monitoring.v1.MonitoringService
 */
export const MonitoringService = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_monitoring_v1_monitoring, 0);

