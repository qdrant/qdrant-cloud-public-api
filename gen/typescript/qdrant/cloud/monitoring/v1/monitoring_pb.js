// @generated by protoc-gen-es v2.7.0 with parameter "target=js+dts,import_extension=js,valid_types=protovalidate_required"
// @generated from file qdrant/cloud/monitoring/v1/monitoring.proto (package qdrant.cloud.monitoring.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb.js";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb.js";

/**
 * Describes the file qdrant/cloud/monitoring/v1/monitoring.proto.
 */
export const file_qdrant_cloud_monitoring_v1_monitoring = /*@__PURE__*/
  fileDesc("CitxZHJhbnQvY2xvdWQvbW9uaXRvcmluZy92MS9tb25pdG9yaW5nLnByb3RvEhpxZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MSJdCh9HZXRDbHVzdGVyU3VtbWFyeU1ldHJpY3NSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhwKCmNsdXN0ZXJfaWQYAiABKAlCCLpIBXIDsAEBImEKIEdldENsdXN0ZXJTdW1tYXJ5TWV0cmljc1Jlc3BvbnNlEj0KBW5vZGVzGAEgAygLMi4ucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQ2x1c3Rlck5vZGVNZXRyaWNzIrsDCh1HZXRDbHVzdGVyVXNhZ2VNZXRyaWNzUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIcCgpjbHVzdGVyX2lkGAIgASgJQgi6SAVyA7ABARIuCgVzaW5jZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAIgBARIuCgV1bnRpbBgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAYgBARJLCgphZ2dyZWdhdG9yGAUgASgOMiYucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQWdncmVnYXRvckIKukgHggEEEAEgAEgCiAEBOo0BukiJARqGAQooZ2V0X2NsdXN0ZXJfdXNhZ2VfbWV0cmljcy51bnRpbF9ndF9zaW5jZRIZdW50aWwgbXVzdCBiZSBhZnRlciBzaW5jZRo/IWhhcyh0aGlzLnNpbmNlKSB8fCAhaGFzKHRoaXMudW50aWwpIHx8IHRoaXMudW50aWwgPiB0aGlzLnNpbmNlQggKBl9zaW5jZUIICgZfdW50aWxCDQoLX2FnZ3JlZ2F0b3IihgQKHkdldENsdXN0ZXJVc2FnZU1ldHJpY3NSZXNwb25zZRIvCgNjcHUYASADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSLwoDcmFtGAIgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjUKCXJhbV9jYWNoZRgDIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYxIzCgdyYW1fcnNzGAQgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjoKDnJhbV9xZHJhbnRfcnNzGAUgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjAKBGRpc2sYBiADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSLwoDcnBzGAcgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjMKB2xhdGVuY3kYCCADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSQgoFbm9kZXMYCSADKAsyMy5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5DbHVzdGVyTm9kZVVzYWdlTWV0cmljcyLMAgoVR2V0Q2x1c3RlckxvZ3NSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhwKCmNsdXN0ZXJfaWQYAiABKAlCCLpIBXIDsAEBEi4KBXNpbmNlGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAiAEBEi4KBXVudGlsGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgBiAEBOoIBukh/Gn0KH2dldF9jbHVzdGVyX2xvZ3MudW50aWxfZ3Rfc2luY2USGXVudGlsIG11c3QgYmUgYWZ0ZXIgc2luY2UaPyFoYXModGhpcy5zaW5jZSkgfHwgIWhhcyh0aGlzLnVudGlsKSB8fCB0aGlzLnVudGlsID4gdGhpcy5zaW5jZUIICgZfc2luY2VCCAoGX3VudGlsIk0KFkdldENsdXN0ZXJMb2dzUmVzcG9uc2USMwoFaXRlbXMYASADKAsyJC5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5Mb2dFbnRyeSLJAQoXR2V0Q2x1c3RlckV2ZW50c1JlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQESHAoKY2x1c3Rlcl9pZBgCIAEoCUIIukgFcgOwAQESLgoFc2luY2UYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSACIAQESLgoFdW50aWwYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAGIAQFCCAoGX3NpbmNlQggKBl91bnRpbCL0AwoSQ2x1c3Rlck5vZGVNZXRyaWNzEhgKB25vZGVfaWQYASABKAlCB7pIBHICEAESRgoDY3B1GAIgASgLMjEucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQ2x1c3Rlck1ldHJpY092ZXJ2aWV3Qga6SAPIAQESRgoDcmFtGAMgASgLMjEucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQ2x1c3Rlck1ldHJpY092ZXJ2aWV3Qga6SAPIAQESTAoJcmFtX2NhY2hlGAQgASgLMjEucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQ2x1c3Rlck1ldHJpY092ZXJ2aWV3Qga6SAPIAQESSgoHcmFtX3JzcxgFIAEoCzIxLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkNsdXN0ZXJNZXRyaWNPdmVydmlld0IGukgDyAEBElEKDnJhbV9xZHJhbnRfcnNzGAYgASgLMjEucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQ2x1c3Rlck1ldHJpY092ZXJ2aWV3Qga6SAPIAQESRwoEZGlzaxgHIAEoCzIxLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkNsdXN0ZXJNZXRyaWNPdmVydmlld0IGukgDyAEBIpMBChVDbHVzdGVyTWV0cmljT3ZlcnZpZXcSOAoDYXZnGAEgAygLMisucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuSW50ZXJ2YWxBdmVyYWdlEkAKBXRvdGFsGAIgASgLMikucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuUmVzb3VyY2VWYWx1ZUIGukgDyAEBImUKD0ludGVydmFsQXZlcmFnZRIzCghpbnRlcnZhbBgBIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkIGukgDyAEBEh0KBXZhbHVlGAIgASgBQg66SAsSCSkAAAAAAAAAACJFCg1SZXNvdXJjZVZhbHVlEh0KBXZhbHVlGAEgASgBQg66SAsSCSkAAAAAAAAAABIVCgR1bml0GAIgASgJQge6SARyAhABIu8CChdDbHVzdGVyTm9kZVVzYWdlTWV0cmljcxIYCgdub2RlX2lkGAEgASgJQge6SARyAhABEi8KA2NwdRgCIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYxIvCgNyYW0YAyADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSNQoJcmFtX2NhY2hlGAQgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEjMKB3JhbV9yc3MYBSADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSOgoOcmFtX3FkcmFudF9yc3MYBiADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSMAoEZGlzaxgHIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYyJeCgZNZXRyaWMSNQoJdGltZXN0YW1wGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIGukgDyAEBEh0KBXZhbHVlGAIgASgBQg66SAsSCSkAAAAAAAAAACJbCghMb2dFbnRyeRI1Cgl0aW1lc3RhbXAYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQga6SAPIAQESGAoHbWVzc2FnZRgCIAEoCUIHukgEcgIQASJzChhHZXRDbHVzdGVyRXZlbnRzUmVzcG9uc2USIQoPaHlicmlkX2Nsb3VkX2lkGAEgASgJQgi6SAVyA7ABARI0CgZ2YWx1ZXMYAiADKAsyJC5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5Mb2dFbnRyeSp4CgpBZ2dyZWdhdG9yEhoKFkFHR1JFR0FUT1JfVU5TUEVDSUZJRUQQABISCg5BR0dSRUdBVE9SX1NVTRABEhIKDkFHR1JFR0FUT1JfQVZHEAISEgoOQUdHUkVHQVRPUl9NQVgQAxISCg5BR0dSRUdBVE9SX01JThAEMrMIChFNb25pdG9yaW5nU2VydmljZRKaAgoYR2V0Q2x1c3RlclN1bW1hcnlNZXRyaWNzEjsucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuR2V0Q2x1c3RlclN1bW1hcnlNZXRyaWNzUmVxdWVzdBo8LnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkdldENsdXN0ZXJTdW1tYXJ5TWV0cmljc1Jlc3BvbnNlIoIBirUYDXJlYWQ6Y2x1c3RlcnO6tRgYCgpjbHVzdGVyX2lkEgpjbHVzdGVyX2lkgtPkkwJPEk0vYXBpL21vbml0b3JpbmcvdjEvYWNjb3VudHMve2FjY291bnRfaWR9L2NsdXN0ZXIve2NsdXN0ZXJfaWR9L3N1bW1hcnktbWV0cmljcxKSAgoWR2V0Q2x1c3RlclVzYWdlTWV0cmljcxI5LnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkdldENsdXN0ZXJVc2FnZU1ldHJpY3NSZXF1ZXN0GjoucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuR2V0Q2x1c3RlclVzYWdlTWV0cmljc1Jlc3BvbnNlIoABirUYDXJlYWQ6Y2x1c3RlcnO6tRgYCgpjbHVzdGVyX2lkEgpjbHVzdGVyX2lkgtPkkwJNEksvYXBpL21vbml0b3JpbmcvdjEvYWNjb3VudHMve2FjY291bnRfaWR9L2NsdXN0ZXIve2NsdXN0ZXJfaWR9L3VzYWdlLW1ldHJpY3MS8AEKDkdldENsdXN0ZXJMb2dzEjEucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuR2V0Q2x1c3RlckxvZ3NSZXF1ZXN0GjIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuR2V0Q2x1c3RlckxvZ3NSZXNwb25zZSJ3irUYDXJlYWQ6Y2x1c3RlcnO6tRgYCgpjbHVzdGVyX2lkEgpjbHVzdGVyX2lkgtPkkwJEEkIvYXBpL21vbml0b3JpbmcvdjEvYWNjb3VudHMve2FjY291bnRfaWR9L2NsdXN0ZXIve2NsdXN0ZXJfaWR9L2xvZ3MS+AEKEEdldENsdXN0ZXJFdmVudHMSMy5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5HZXRDbHVzdGVyRXZlbnRzUmVxdWVzdBo0LnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkdldENsdXN0ZXJFdmVudHNSZXNwb25zZSJ5irUYDXJlYWQ6Y2x1c3RlcnO6tRgYCgpjbHVzdGVyX2lkEgpjbHVzdGVyX2lkgtPkkwJGEkQvYXBpL21vbml0b3JpbmcvdjEvYWNjb3VudHMve2FjY291bnRfaWR9L2NsdXN0ZXIve2NsdXN0ZXJfaWR9L2V2ZW50c0KWAgoeY29tLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxQg9Nb25pdG9yaW5nUHJvdG9QAVpYZ2l0aHViLmNvbS9xZHJhbnQvcWRyYW50LWNsb3VkLXB1YmxpYy1hcGkvZ2VuL2dvL3FkcmFudC9jbG91ZC9tb25pdG9yaW5nL3YxO21vbml0b3Jpbmd2MaICA1FDTaoCGlFkcmFudC5DbG91ZC5Nb25pdG9yaW5nLlYxygIaUWRyYW50XENsb3VkXE1vbml0b3JpbmdcVjHiAiZRZHJhbnRcQ2xvdWRcTW9uaXRvcmluZ1xWMVxHUEJNZXRhZGF0YeoCHVFkcmFudDo6Q2xvdWQ6Ok1vbml0b3Jpbmc6OlYxYgZwcm90bzM", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_duration, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common]);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterSummaryMetricsRequest.
 * Use `create(GetClusterSummaryMetricsRequestSchema)` to create a new message.
 */
export const GetClusterSummaryMetricsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 0);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterSummaryMetricsResponse.
 * Use `create(GetClusterSummaryMetricsResponseSchema)` to create a new message.
 */
export const GetClusterSummaryMetricsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 1);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterUsageMetricsRequest.
 * Use `create(GetClusterUsageMetricsRequestSchema)` to create a new message.
 */
export const GetClusterUsageMetricsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 2);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterUsageMetricsResponse.
 * Use `create(GetClusterUsageMetricsResponseSchema)` to create a new message.
 */
export const GetClusterUsageMetricsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 3);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterLogsRequest.
 * Use `create(GetClusterLogsRequestSchema)` to create a new message.
 */
export const GetClusterLogsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 4);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterLogsResponse.
 * Use `create(GetClusterLogsResponseSchema)` to create a new message.
 */
export const GetClusterLogsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 5);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterEventsRequest.
 * Use `create(GetClusterEventsRequestSchema)` to create a new message.
 */
export const GetClusterEventsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 6);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ClusterNodeMetrics.
 * Use `create(ClusterNodeMetricsSchema)` to create a new message.
 */
export const ClusterNodeMetricsSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 7);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ClusterMetricOverview.
 * Use `create(ClusterMetricOverviewSchema)` to create a new message.
 */
export const ClusterMetricOverviewSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 8);

/**
 * Describes the message qdrant.cloud.monitoring.v1.IntervalAverage.
 * Use `create(IntervalAverageSchema)` to create a new message.
 */
export const IntervalAverageSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 9);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ResourceValue.
 * Use `create(ResourceValueSchema)` to create a new message.
 */
export const ResourceValueSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 10);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ClusterNodeUsageMetrics.
 * Use `create(ClusterNodeUsageMetricsSchema)` to create a new message.
 */
export const ClusterNodeUsageMetricsSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 11);

/**
 * Describes the message qdrant.cloud.monitoring.v1.Metric.
 * Use `create(MetricSchema)` to create a new message.
 */
export const MetricSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 12);

/**
 * Describes the message qdrant.cloud.monitoring.v1.LogEntry.
 * Use `create(LogEntrySchema)` to create a new message.
 */
export const LogEntrySchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 13);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterEventsResponse.
 * Use `create(GetClusterEventsResponseSchema)` to create a new message.
 */
export const GetClusterEventsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 14);

/**
 * Describes the enum qdrant.cloud.monitoring.v1.Aggregator.
 */
export const AggregatorSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_monitoring_v1_monitoring, 0);

/**
 * Aggregator defines how metrics should be aggregated over time.
 *
 * @generated from enum qdrant.cloud.monitoring.v1.Aggregator
 */
export const Aggregator = /*@__PURE__*/
  tsEnum(AggregatorSchema);

/**
 * MonitoringService provides access to monitoring data such as cluster metrics, logs, and events.
 *
 * @generated from service qdrant.cloud.monitoring.v1.MonitoringService
 */
export const MonitoringService = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_monitoring_v1_monitoring, 0);

