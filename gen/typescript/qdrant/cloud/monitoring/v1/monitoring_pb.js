// @generated by protoc-gen-es v2.5.2 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/monitoring/v1/monitoring.proto (package qdrant.cloud.monitoring.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb.js";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb.js";

/**
 * Describes the file qdrant/cloud/monitoring/v1/monitoring.proto.
 */
export const file_qdrant_cloud_monitoring_v1_monitoring = /*@__PURE__*/
  fileDesc("CitxZHJhbnQvY2xvdWQvbW9uaXRvcmluZy92MS9tb25pdG9yaW5nLnByb3RvEhpxZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MSJdCh9HZXRDbHVzdGVyU3VtbWFyeU1ldHJpY3NSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhwKCmNsdXN0ZXJfaWQYAiABKAlCCLpIBXIDsAEBImEKIEdldENsdXN0ZXJTdW1tYXJ5TWV0cmljc1Jlc3BvbnNlEj0KBW5vZGVzGAEgAygLMi4ucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQ2x1c3Rlck5vZGVNZXRyaWNzIrkDCh1HZXRDbHVzdGVyVXNhZ2VNZXRyaWNzUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIcCgpjbHVzdGVyX2lkGAIgASgJQgi6SAVyA7ABARIuCgVzaW5jZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAIgBARIuCgV1bnRpbBgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAYgBARJJCgphZ2dyZWdhdG9yGAUgASgOMiYucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQWdncmVnYXRvckIIukgFggECIABIAogBATqNAbpIiQEahgEKKGdldF9jbHVzdGVyX3VzYWdlX21ldHJpY3MudW50aWxfZ3Rfc2luY2USGXVudGlsIG11c3QgYmUgYWZ0ZXIgc2luY2UaPyFoYXModGhpcy5zaW5jZSkgfHwgIWhhcyh0aGlzLnVudGlsKSB8fCB0aGlzLnVudGlsID4gdGhpcy5zaW5jZUIICgZfc2luY2VCCAoGX3VudGlsQg0KC19hZ2dyZWdhdG9yIoYECh5HZXRDbHVzdGVyVXNhZ2VNZXRyaWNzUmVzcG9uc2USLwoDY3B1GAEgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEi8KA3JhbRgCIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYxI1CglyYW1fY2FjaGUYAyADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSMwoHcmFtX3JzcxgEIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYxI6Cg5yYW1fcWRyYW50X3JzcxgFIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYxIwCgRkaXNrGAYgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEi8KA3JwcxgHIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYxIzCgdsYXRlbmN5GAggAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEkIKBW5vZGVzGAkgAygLMjMucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQ2x1c3Rlck5vZGVVc2FnZU1ldHJpY3MizAIKFUdldENsdXN0ZXJMb2dzUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIcCgpjbHVzdGVyX2lkGAIgASgJQgi6SAVyA7ABARIuCgVzaW5jZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAIgBARIuCgV1bnRpbBgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAYgBATqCAbpIfxp9Ch9nZXRfY2x1c3Rlcl9sb2dzLnVudGlsX2d0X3NpbmNlEhl1bnRpbCBtdXN0IGJlIGFmdGVyIHNpbmNlGj8haGFzKHRoaXMuc2luY2UpIHx8ICFoYXModGhpcy51bnRpbCkgfHwgdGhpcy51bnRpbCA+IHRoaXMuc2luY2VCCAoGX3NpbmNlQggKBl91bnRpbCJNChZHZXRDbHVzdGVyTG9nc1Jlc3BvbnNlEjMKBWl0ZW1zGAEgAygLMiQucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTG9nRW50cnki0QIKF0dldENsdXN0ZXJFdmVudHNSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhwKCmNsdXN0ZXJfaWQYAiABKAlCCLpIBXIDsAEBEi4KBXNpbmNlGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAiAEBEi4KBXVudGlsGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgBiAEBOoUBukiBARp/CiFnZXRfY2x1c3Rlcl9ldmVudHMudW50aWxfZ3Rfc2luY2USGXVudGlsIG11c3QgYmUgYWZ0ZXIgc2luY2UaPyFoYXModGhpcy5zaW5jZSkgfHwgIWhhcyh0aGlzLnVudGlsKSB8fCB0aGlzLnVudGlsID4gdGhpcy5zaW5jZUIICgZfc2luY2VCCAoGX3VudGlsIk8KGEdldENsdXN0ZXJFdmVudHNSZXNwb25zZRIzCgVpdGVtcxgBIAMoCzIkLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkxvZ0VudHJ5IvQDChJDbHVzdGVyTm9kZU1ldHJpY3MSGAoHbm9kZV9pZBgBIAEoCUIHukgEcgIQARJGCgNjcHUYAiABKAsyMS5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5DbHVzdGVyTWV0cmljT3ZlcnZpZXdCBrpIA8gBARJGCgNyYW0YAyABKAsyMS5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5DbHVzdGVyTWV0cmljT3ZlcnZpZXdCBrpIA8gBARJMCglyYW1fY2FjaGUYBCABKAsyMS5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5DbHVzdGVyTWV0cmljT3ZlcnZpZXdCBrpIA8gBARJKCgdyYW1fcnNzGAUgASgLMjEucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQ2x1c3Rlck1ldHJpY092ZXJ2aWV3Qga6SAPIAQESUQoOcmFtX3FkcmFudF9yc3MYBiABKAsyMS5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5DbHVzdGVyTWV0cmljT3ZlcnZpZXdCBrpIA8gBARJHCgRkaXNrGAcgASgLMjEucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuQ2x1c3Rlck1ldHJpY092ZXJ2aWV3Qga6SAPIAQEikwEKFUNsdXN0ZXJNZXRyaWNPdmVydmlldxI4CgNhdmcYASADKAsyKy5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5JbnRlcnZhbEF2ZXJhZ2USQAoFdG90YWwYAiABKAsyKS5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5SZXNvdXJjZVZhbHVlQga6SAPIAQEiZQoPSW50ZXJ2YWxBdmVyYWdlEjMKCGludGVydmFsGAEgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uQga6SAPIAQESHQoFdmFsdWUYAiABKAFCDrpICxIJKQAAAAAAAAAAIkUKDVJlc291cmNlVmFsdWUSHQoFdmFsdWUYASABKAFCDrpICxIJKQAAAAAAAAAAEhUKBHVuaXQYAiABKAlCB7pIBHICEAEi7wIKF0NsdXN0ZXJOb2RlVXNhZ2VNZXRyaWNzEhgKB25vZGVfaWQYASABKAlCB7pIBHICEAESLwoDY3B1GAIgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljEi8KA3JhbRgDIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYxI1CglyYW1fY2FjaGUYBCADKAsyIi5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5NZXRyaWMSMwoHcmFtX3JzcxgFIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYxI6Cg5yYW1fcWRyYW50X3JzcxgGIAMoCzIiLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLk1ldHJpYxIwCgRkaXNrGAcgAygLMiIucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuTWV0cmljIl4KBk1ldHJpYxI1Cgl0aW1lc3RhbXAYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQga6SAPIAQESHQoFdmFsdWUYAiABKAFCDrpICxIJKQAAAAAAAAAAIlsKCExvZ0VudHJ5EjUKCXRpbWVzdGFtcBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCBrpIA8gBARIYCgdtZXNzYWdlGAIgASgJQge6SARyAhABKngKCkFnZ3JlZ2F0b3ISGgoWQUdHUkVHQVRPUl9VTlNQRUNJRklFRBAAEhIKDkFHR1JFR0FUT1JfU1VNEAESEgoOQUdHUkVHQVRPUl9BVkcQAhISCg5BR0dSRUdBVE9SX01BWBADEhIKDkFHR1JFR0FUT1JfTUlOEAQywQcKEU1vbml0b3JpbmdTZXJ2aWNlEv0BChhHZXRDbHVzdGVyU3VtbWFyeU1ldHJpY3MSOy5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5HZXRDbHVzdGVyU3VtbWFyeU1ldHJpY3NSZXF1ZXN0GjwucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuR2V0Q2x1c3RlclN1bW1hcnlNZXRyaWNzUmVzcG9uc2UiZoq1GA1yZWFkOmNsdXN0ZXJzgtPkkwJPEk0vYXBpL21vbml0b3JpbmcvdjEvYWNjb3VudHMve2FjY291bnRfaWR9L2NsdXN0ZXIve2NsdXN0ZXJfaWR9L3N1bW1hcnktbWV0cmljcxL1AQoWR2V0Q2x1c3RlclVzYWdlTWV0cmljcxI5LnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkdldENsdXN0ZXJVc2FnZU1ldHJpY3NSZXF1ZXN0GjoucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjEuR2V0Q2x1c3RlclVzYWdlTWV0cmljc1Jlc3BvbnNlImSKtRgNcmVhZDpjbHVzdGVyc4LT5JMCTRJLL2FwaS9tb25pdG9yaW5nL3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9jbHVzdGVyL3tjbHVzdGVyX2lkfS91c2FnZS1tZXRyaWNzEtQBCg5HZXRDbHVzdGVyTG9ncxIxLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkdldENsdXN0ZXJMb2dzUmVxdWVzdBoyLnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkdldENsdXN0ZXJMb2dzUmVzcG9uc2UiW4q1GA1yZWFkOmNsdXN0ZXJzgtPkkwJEEkIvYXBpL21vbml0b3JpbmcvdjEvYWNjb3VudHMve2FjY291bnRfaWR9L2NsdXN0ZXIve2NsdXN0ZXJfaWR9L2xvZ3MS3AEKEEdldENsdXN0ZXJFdmVudHMSMy5xZHJhbnQuY2xvdWQubW9uaXRvcmluZy52MS5HZXRDbHVzdGVyRXZlbnRzUmVxdWVzdBo0LnFkcmFudC5jbG91ZC5tb25pdG9yaW5nLnYxLkdldENsdXN0ZXJFdmVudHNSZXNwb25zZSJdirUYDXJlYWQ6Y2x1c3RlcnOC0+STAkYSRC9hcGkvbW9uaXRvcmluZy92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vY2x1c3Rlci97Y2x1c3Rlcl9pZH0vZXZlbnRzQpYCCh5jb20ucWRyYW50LmNsb3VkLm1vbml0b3JpbmcudjFCD01vbml0b3JpbmdQcm90b1ABWlhnaXRodWIuY29tL3FkcmFudC9xZHJhbnQtY2xvdWQtcHVibGljLWFwaS9nZW4vZ28vcWRyYW50L2Nsb3VkL21vbml0b3JpbmcvdjE7bW9uaXRvcmluZ3YxogIDUUNNqgIaUWRyYW50LkNsb3VkLk1vbml0b3JpbmcuVjHKAhpRZHJhbnRcQ2xvdWRcTW9uaXRvcmluZ1xWMeICJlFkcmFudFxDbG91ZFxNb25pdG9yaW5nXFYxXEdQQk1ldGFkYXRh6gIdUWRyYW50OjpDbG91ZDo6TW9uaXRvcmluZzo6VjFiBnByb3RvMw", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_duration, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common]);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterSummaryMetricsRequest.
 * Use `create(GetClusterSummaryMetricsRequestSchema)` to create a new message.
 */
export const GetClusterSummaryMetricsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 0);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterSummaryMetricsResponse.
 * Use `create(GetClusterSummaryMetricsResponseSchema)` to create a new message.
 */
export const GetClusterSummaryMetricsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 1);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterUsageMetricsRequest.
 * Use `create(GetClusterUsageMetricsRequestSchema)` to create a new message.
 */
export const GetClusterUsageMetricsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 2);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterUsageMetricsResponse.
 * Use `create(GetClusterUsageMetricsResponseSchema)` to create a new message.
 */
export const GetClusterUsageMetricsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 3);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterLogsRequest.
 * Use `create(GetClusterLogsRequestSchema)` to create a new message.
 */
export const GetClusterLogsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 4);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterLogsResponse.
 * Use `create(GetClusterLogsResponseSchema)` to create a new message.
 */
export const GetClusterLogsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 5);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterEventsRequest.
 * Use `create(GetClusterEventsRequestSchema)` to create a new message.
 */
export const GetClusterEventsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 6);

/**
 * Describes the message qdrant.cloud.monitoring.v1.GetClusterEventsResponse.
 * Use `create(GetClusterEventsResponseSchema)` to create a new message.
 */
export const GetClusterEventsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 7);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ClusterNodeMetrics.
 * Use `create(ClusterNodeMetricsSchema)` to create a new message.
 */
export const ClusterNodeMetricsSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 8);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ClusterMetricOverview.
 * Use `create(ClusterMetricOverviewSchema)` to create a new message.
 */
export const ClusterMetricOverviewSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 9);

/**
 * Describes the message qdrant.cloud.monitoring.v1.IntervalAverage.
 * Use `create(IntervalAverageSchema)` to create a new message.
 */
export const IntervalAverageSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 10);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ResourceValue.
 * Use `create(ResourceValueSchema)` to create a new message.
 */
export const ResourceValueSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 11);

/**
 * Describes the message qdrant.cloud.monitoring.v1.ClusterNodeUsageMetrics.
 * Use `create(ClusterNodeUsageMetricsSchema)` to create a new message.
 */
export const ClusterNodeUsageMetricsSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 12);

/**
 * Describes the message qdrant.cloud.monitoring.v1.Metric.
 * Use `create(MetricSchema)` to create a new message.
 */
export const MetricSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 13);

/**
 * Describes the message qdrant.cloud.monitoring.v1.LogEntry.
 * Use `create(LogEntrySchema)` to create a new message.
 */
export const LogEntrySchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_monitoring_v1_monitoring, 14);

/**
 * Describes the enum qdrant.cloud.monitoring.v1.Aggregator.
 */
export const AggregatorSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_monitoring_v1_monitoring, 0);

/**
 * Aggregator defines how metrics should be aggregated over time.
 *
 * @generated from enum qdrant.cloud.monitoring.v1.Aggregator
 */
export const Aggregator = /*@__PURE__*/
  tsEnum(AggregatorSchema);

/**
 * MonitoringService provides access to monitoring data such as cluster metrics, logs, and events.
 *
 * @generated from service qdrant.cloud.monitoring.v1.MonitoringService
 */
export const MonitoringService = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_monitoring_v1_monitoring, 0);

