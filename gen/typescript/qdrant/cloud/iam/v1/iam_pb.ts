// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file qdrant/cloud/iam/v1/iam.proto (package qdrant.cloud.iam.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file qdrant/cloud/iam/v1/iam.proto.
 */
export const file_qdrant_cloud_iam_v1_iam: GenFile = /*@__PURE__*/
  fileDesc("Ch1xZHJhbnQvY2xvdWQvaWFtL3YxL2lhbS5wcm90bxITcWRyYW50LmNsb3VkLmlhbS52MSI2ChZMaXN0UGVybWlzc2lvbnNSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBIi4KF0xpc3RQZXJtaXNzaW9uc1Jlc3BvbnNlEhMKC3Blcm1pc3Npb25zGAEgAygJIjAKEExpc3RSb2xlc1JlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQEiPQoRTGlzdFJvbGVzUmVzcG9uc2USKAoFaXRlbXMYASADKAsyGS5xZHJhbnQuY2xvdWQuaWFtLnYxLlJvbGUiSQoOR2V0Um9sZVJlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQESGQoHcm9sZV9pZBgCIAEoCUIIukgFcgOwAQEiOgoPR2V0Um9sZVJlc3BvbnNlEicKBHJvbGUYASABKAsyGS5xZHJhbnQuY2xvdWQuaWFtLnYxLlJvbGUiPAoRQ3JlYXRlUm9sZVJlcXVlc3QSJwoEcm9sZRgBIAEoCzIZLnFkcmFudC5jbG91ZC5pYW0udjEuUm9sZSI9ChJDcmVhdGVSb2xlUmVzcG9uc2USJwoEcm9sZRgBIAEoCzIZLnFkcmFudC5jbG91ZC5pYW0udjEuUm9sZSI8ChFVcGRhdGVSb2xlUmVxdWVzdBInCgRyb2xlGAEgASgLMhkucWRyYW50LmNsb3VkLmlhbS52MS5Sb2xlIj0KElVwZGF0ZVJvbGVSZXNwb25zZRInCgRyb2xlGAEgASgLMhkucWRyYW50LmNsb3VkLmlhbS52MS5Sb2xlIkwKEURlbGV0ZVJvbGVSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhkKB3JvbGVfaWQYAiABKAlCCLpIBXIDsAEBIhQKEkRlbGV0ZVJvbGVSZXNwb25zZSI+Ch5HZXRFZmZlY3RpdmVQZXJtaXNzaW9uc1JlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQEiNgofR2V0RWZmZWN0aXZlUGVybWlzc2lvbnNSZXNwb25zZRITCgtwZXJtaXNzaW9ucxgBIAMoCSKGAQoWQXNzaWduVXNlclJvbGVzUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIZCgd1c2VyX2lkGAIgASgJQgi6SAVyA7ABARIXCg9yb2xlX2lkc190b19hZGQYAyADKAkSGgoScm9sZV9pZHNfdG9fZGVsZXRlGAQgAygJIhkKF0Fzc2lnblVzZXJSb2xlc1Jlc3BvbnNlIokDCgRSb2xlEgoKAmlkGAEgASgJEi4KCmNyZWF0ZWRfYXQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhwKCmFjY291bnRfaWQYAyABKAlCCLpIBXIDsAEBEgwKBG5hbWUYBCABKAkSEwoLZGVzY3JpcHRpb24YBSABKAkSEAoIaXNfYWRtaW4YBiABKAgSMAoJcm9sZV90eXBlGAcgASgOMh0ucWRyYW50LmNsb3VkLmlhbS52MS5Sb2xlVHlwZRITCgtwZXJtaXNzaW9ucxgIIAMoCTqqAbpIpgEaowEKCmNsdXN0ZXIuaWQSGnZhbHVlIG11c3QgYmUgYSB2YWxpZCBVVUlEGnl0aGlzLmlkLm1hdGNoZXMoJ15bMC05YS1mQS1GXXs4fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXsxMn0kJykgfHwgIWhhcyh0aGlzLmNyZWF0ZWRfYXQpKlEKCFJvbGVUeXBlEhkKFVJPTEVfVFlQRV9VTlNQRUNJRklFRBAAEhQKEFJPTEVfVFlQRV9TWVNURU0QARIUChBST0xFX1RZUEVfQ1VTVE9NEAIy0QsKCklBTVNlcnZpY2USsQEKD0xpc3RQZXJtaXNzaW9ucxIrLnFkcmFudC5jbG91ZC5pYW0udjEuTGlzdFBlcm1pc3Npb25zUmVxdWVzdBosLnFkcmFudC5jbG91ZC5pYW0udjEuTGlzdFBlcm1pc3Npb25zUmVzcG9uc2UiQ4q1GApyZWFkOnJvbGVzgtPkkwIvEi0vYXBpL2lhbS92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vcGVybWlzc2lvbnMSmQEKCUxpc3RSb2xlcxIlLnFkcmFudC5jbG91ZC5pYW0udjEuTGlzdFJvbGVzUmVxdWVzdBomLnFkcmFudC5jbG91ZC5pYW0udjEuTGlzdFJvbGVzUmVzcG9uc2UiPYq1GApyZWFkOnJvbGVzgtPkkwIpEicvYXBpL2lhbS92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vcm9sZXMSsAEKB0dldFJvbGUSIy5xZHJhbnQuY2xvdWQuaWFtLnYxLkdldFJvbGVSZXF1ZXN0GiQucWRyYW50LmNsb3VkLmlhbS52MS5HZXRSb2xlUmVzcG9uc2UiWoq1GApyZWFkOnJvbGVzkrUYD3JvbGUuYWNjb3VudF9pZILT5JMCMxIxL2FwaS9pYW0vdjEvYWNjb3VudHMve2FjY291bnRfaWR9L3JvbGVzL3tyb2xlX2lkfRK4AQoKQ3JlYXRlUm9sZRImLnFkcmFudC5jbG91ZC5pYW0udjEuQ3JlYXRlUm9sZVJlcXVlc3QaJy5xZHJhbnQuY2xvdWQuaWFtLnYxLkNyZWF0ZVJvbGVSZXNwb25zZSJZirUYC3dyaXRlOnJvbGVzkrUYD3JvbGUuYWNjb3VudF9pZILT5JMCMToBKiIsL2FwaS9pYW0vdjEvYWNjb3VudHMve3JvbGUuYWNjb3VudF9pZH0vcm9sZXMSwgEKClVwZGF0ZVJvbGUSJi5xZHJhbnQuY2xvdWQuaWFtLnYxLlVwZGF0ZVJvbGVSZXF1ZXN0GicucWRyYW50LmNsb3VkLmlhbS52MS5VcGRhdGVSb2xlUmVzcG9uc2UiY4q1GAt3cml0ZTpyb2xlc5K1GA9yb2xlLmFjY291bnRfaWSC0+STAjs6ASoaNi9hcGkvaWFtL3YxL2FjY291bnRzL3tyb2xlLmFjY291bnRfaWR9L3JvbGVzL3tyb2xlLmlkfRKoAQoKRGVsZXRlUm9sZRImLnFkcmFudC5jbG91ZC5pYW0udjEuRGVsZXRlUm9sZVJlcXVlc3QaJy5xZHJhbnQuY2xvdWQuaWFtLnYxLkRlbGV0ZVJvbGVSZXNwb25zZSJJirUYDGRlbGV0ZTpyb2xlc4LT5JMCMyoxL2FwaS9pYW0vdjEvYWNjb3VudHMve2FjY291bnRfaWR9L3JvbGVzL3tyb2xlX2lkfRLTAQoXR2V0RWZmZWN0aXZlUGVybWlzc2lvbnMSMy5xZHJhbnQuY2xvdWQuaWFtLnYxLkdldEVmZmVjdGl2ZVBlcm1pc3Npb25zUmVxdWVzdBo0LnFkcmFudC5jbG91ZC5pYW0udjEuR2V0RWZmZWN0aXZlUGVybWlzc2lvbnNSZXNwb25zZSJNirUYCnJlYWQ6cm9sZXOC0+STAjkSNy9hcGkvaWFtL3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9lZmZlY3RpdmUtcGVybWlzc2lvbnMSvgEKD0Fzc2lnblVzZXJSb2xlcxIrLnFkcmFudC5jbG91ZC5pYW0udjEuQXNzaWduVXNlclJvbGVzUmVxdWVzdBosLnFkcmFudC5jbG91ZC5pYW0udjEuQXNzaWduVXNlclJvbGVzUmVzcG9uc2UiUIq1GApyZWFkOnJvbGVzgtPkkwI8OgEqIjcvYXBpL2lhbS92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vdXNlcnMve3VzZXJfaWR9L3JvbGVzQt4BChdjb20ucWRyYW50LmNsb3VkLmlhbS52MUIISWFtUHJvdG9QAVpKZ2l0aHViLmNvbS9xZHJhbnQvcWRyYW50LWNsb3VkLXB1YmxpYy1hcGkvZ2VuL2dvL3FkcmFudC9jbG91ZC9pYW0vdjE7aWFtdjGiAgNRQ0mqAhNRZHJhbnQuQ2xvdWQuSWFtLlYxygITUWRyYW50XENsb3VkXElhbVxWMeICH1FkcmFudFxDbG91ZFxJYW1cVjFcR1BCTWV0YWRhdGHqAhZRZHJhbnQ6OkNsb3VkOjpJYW06OlYxYgZwcm90bzM", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common]);

/**
 * ListPermissionsRequest is the request for the ListPermissions function
 *
 * @generated from message qdrant.cloud.iam.v1.ListPermissionsRequest
 */
export type ListPermissionsRequest = Message<"qdrant.cloud.iam.v1.ListPermissionsRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;
};

/**
 * Describes the message qdrant.cloud.iam.v1.ListPermissionsRequest.
 * Use `create(ListPermissionsRequestSchema)` to create a new message.
 */
export const ListPermissionsRequestSchema: GenMessage<ListPermissionsRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 0);

/**
 * ListPermissionsResponse is the response from the ListPermissions function
 *
 * @generated from message qdrant.cloud.iam.v1.ListPermissionsResponse
 */
export type ListPermissionsResponse = Message<"qdrant.cloud.iam.v1.ListPermissionsResponse"> & {
  /**
   * The permissions know by the system.
   *
   * @generated from field: repeated string permissions = 1;
   */
  permissions: string[];
};

/**
 * Describes the message qdrant.cloud.iam.v1.ListPermissionsResponse.
 * Use `create(ListPermissionsResponseSchema)` to create a new message.
 */
export const ListPermissionsResponseSchema: GenMessage<ListPermissionsResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 1);

/**
 * ListRolesRequest is the request for the ListRoles function
 *
 * @generated from message qdrant.cloud.iam.v1.ListRolesRequest
 */
export type ListRolesRequest = Message<"qdrant.cloud.iam.v1.ListRolesRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;
};

/**
 * Describes the message qdrant.cloud.iam.v1.ListRolesRequest.
 * Use `create(ListRolesRequestSchema)` to create a new message.
 */
export const ListRolesRequestSchema: GenMessage<ListRolesRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 2);

/**
 * ListRolesResponse is the response from the ListRoles function
 *
 * @generated from message qdrant.cloud.iam.v1.ListRolesResponse
 */
export type ListRolesResponse = Message<"qdrant.cloud.iam.v1.ListRolesResponse"> & {
  /**
   * The actual roles in this list.
   *
   * @generated from field: repeated qdrant.cloud.iam.v1.Role items = 1;
   */
  items: Role[];
};

/**
 * Describes the message qdrant.cloud.iam.v1.ListRolesResponse.
 * Use `create(ListRolesResponseSchema)` to create a new message.
 */
export const ListRolesResponseSchema: GenMessage<ListRolesResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 3);

/**
 * GetRoleRequest is the request for the GetRole function
 *
 * @generated from message qdrant.cloud.iam.v1.GetRoleRequest
 */
export type GetRoleRequest = Message<"qdrant.cloud.iam.v1.GetRoleRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier of the role (in GUID format).
   * This is a required field.
   *
   * @generated from field: string role_id = 2;
   */
  roleId: string;
};

/**
 * Describes the message qdrant.cloud.iam.v1.GetRoleRequest.
 * Use `create(GetRoleRequestSchema)` to create a new message.
 */
export const GetRoleRequestSchema: GenMessage<GetRoleRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 4);

/**
 * GetRoleResponse is the response from the GetRole function
 *
 * @generated from message qdrant.cloud.iam.v1.GetRoleResponse
 */
export type GetRoleResponse = Message<"qdrant.cloud.iam.v1.GetRoleResponse"> & {
  /**
   * The actual role.
   *
   * @generated from field: qdrant.cloud.iam.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message qdrant.cloud.iam.v1.GetRoleResponse.
 * Use `create(GetRoleResponseSchema)` to create a new message.
 */
export const GetRoleResponseSchema: GenMessage<GetRoleResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 5);

/**
 * CreateRoleRequest is the request for the CreateRole function.
 *
 * @generated from message qdrant.cloud.iam.v1.CreateRoleRequest
 */
export type CreateRoleRequest = Message<"qdrant.cloud.iam.v1.CreateRoleRequest"> & {
  /**
   * The actual role.
   *
   * @generated from field: qdrant.cloud.iam.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message qdrant.cloud.iam.v1.CreateRoleRequest.
 * Use `create(CreateRoleRequestSchema)` to create a new message.
 */
export const CreateRoleRequestSchema: GenMessage<CreateRoleRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 6);

/**
 * CreateRoleResponse is the response from the CreateRole function.
 *
 * @generated from message qdrant.cloud.iam.v1.CreateRoleResponse
 */
export type CreateRoleResponse = Message<"qdrant.cloud.iam.v1.CreateRoleResponse"> & {
  /**
   * The actual role.
   *
   * @generated from field: qdrant.cloud.iam.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message qdrant.cloud.iam.v1.CreateRoleResponse.
 * Use `create(CreateRoleResponseSchema)` to create a new message.
 */
export const CreateRoleResponseSchema: GenMessage<CreateRoleResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 7);

/**
 * UpdateRoleRequest is the request for the UpdateRole function.
 *
 * @generated from message qdrant.cloud.iam.v1.UpdateRoleRequest
 */
export type UpdateRoleRequest = Message<"qdrant.cloud.iam.v1.UpdateRoleRequest"> & {
  /**
   * The actual role.
   *
   * @generated from field: qdrant.cloud.iam.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message qdrant.cloud.iam.v1.UpdateRoleRequest.
 * Use `create(UpdateRoleRequestSchema)` to create a new message.
 */
export const UpdateRoleRequestSchema: GenMessage<UpdateRoleRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 8);

/**
 * UpdateRoleResponse is the response from the UpdateRole function.
 *
 * @generated from message qdrant.cloud.iam.v1.UpdateRoleResponse
 */
export type UpdateRoleResponse = Message<"qdrant.cloud.iam.v1.UpdateRoleResponse"> & {
  /**
   * The actual role.
   *
   * @generated from field: qdrant.cloud.iam.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message qdrant.cloud.iam.v1.UpdateRoleResponse.
 * Use `create(UpdateRoleResponseSchema)` to create a new message.
 */
export const UpdateRoleResponseSchema: GenMessage<UpdateRoleResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 9);

/**
 * DeleteRoleRequest is the request for the DeleteRole function.
 *
 * @generated from message qdrant.cloud.iam.v1.DeleteRoleRequest
 */
export type DeleteRoleRequest = Message<"qdrant.cloud.iam.v1.DeleteRoleRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier of the role (in GUID format).
   * This is a required field.
   *
   * @generated from field: string role_id = 2;
   */
  roleId: string;
};

/**
 * Describes the message qdrant.cloud.iam.v1.DeleteRoleRequest.
 * Use `create(DeleteRoleRequestSchema)` to create a new message.
 */
export const DeleteRoleRequestSchema: GenMessage<DeleteRoleRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 10);

/**
 * DeleteRoleResponse is the response from the DeleteRole function.
 *
 * Empty
 *
 * @generated from message qdrant.cloud.iam.v1.DeleteRoleResponse
 */
export type DeleteRoleResponse = Message<"qdrant.cloud.iam.v1.DeleteRoleResponse"> & {
};

/**
 * Describes the message qdrant.cloud.iam.v1.DeleteRoleResponse.
 * Use `create(DeleteRoleResponseSchema)` to create a new message.
 */
export const DeleteRoleResponseSchema: GenMessage<DeleteRoleResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 11);

/**
 * GetEffectivePermissionsRequest is the request for the GetEffectivePermissions function
 *
 * @generated from message qdrant.cloud.iam.v1.GetEffectivePermissionsRequest
 */
export type GetEffectivePermissionsRequest = Message<"qdrant.cloud.iam.v1.GetEffectivePermissionsRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;
};

/**
 * Describes the message qdrant.cloud.iam.v1.GetEffectivePermissionsRequest.
 * Use `create(GetEffectivePermissionsRequestSchema)` to create a new message.
 */
export const GetEffectivePermissionsRequestSchema: GenMessage<GetEffectivePermissionsRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 12);

/**
 * GetEffectivePermissionsResponse is the response from the GetEffectivePermissions function
 *
 * @generated from message qdrant.cloud.iam.v1.GetEffectivePermissionsResponse
 */
export type GetEffectivePermissionsResponse = Message<"qdrant.cloud.iam.v1.GetEffectivePermissionsResponse"> & {
  /**
   * The effective permissions.
   *
   * @generated from field: repeated string permissions = 1;
   */
  permissions: string[];
};

/**
 * Describes the message qdrant.cloud.iam.v1.GetEffectivePermissionsResponse.
 * Use `create(GetEffectivePermissionsResponseSchema)` to create a new message.
 */
export const GetEffectivePermissionsResponseSchema: GenMessage<GetEffectivePermissionsResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 13);

/**
 * AssignUserRolesRequest is the request for the AssignUserRoles function
 *
 * @generated from message qdrant.cloud.iam.v1.AssignUserRolesRequest
 */
export type AssignUserRolesRequest = Message<"qdrant.cloud.iam.v1.AssignUserRolesRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier of the user (in GUID format).
   * This user should be part of the provided account.
   * This is a required field.
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * The roles to add to the provided user.
   * If a role was already part of the user or the same role is provided multiple times, the role will be added exactly one time.
   *
   * @generated from field: repeated string role_ids_to_add = 3;
   */
  roleIdsToAdd: string[];

  /**
   * The roles to be deleted from the provided user.
   * If a role is part of the role_ids_to_add this field takes presendence.
   *
   * @generated from field: repeated string role_ids_to_delete = 4;
   */
  roleIdsToDelete: string[];
};

/**
 * Describes the message qdrant.cloud.iam.v1.AssignUserRolesRequest.
 * Use `create(AssignUserRolesRequestSchema)` to create a new message.
 */
export const AssignUserRolesRequestSchema: GenMessage<AssignUserRolesRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 14);

/**
 * AssignUserRolesResponse is the response from the AssignUserRoles function
 *
 * Empty
 *
 * @generated from message qdrant.cloud.iam.v1.AssignUserRolesResponse
 */
export type AssignUserRolesResponse = Message<"qdrant.cloud.iam.v1.AssignUserRolesResponse"> & {
};

/**
 * Describes the message qdrant.cloud.iam.v1.AssignUserRolesResponse.
 * Use `create(AssignUserRolesResponseSchema)` to create a new message.
 */
export const AssignUserRolesResponseSchema: GenMessage<AssignUserRolesResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 15);

/**
 * A Role represents a role in the Qdrant cloud.
 *
 * @generated from message qdrant.cloud.iam.v1.Role
 */
export type Role = Message<"qdrant.cloud.iam.v1.Role"> & {
  /**
   * Unique identifier for the role (in GUID format).
   * This is a read-only field and will be available after a role is created.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The timestamp when the role was created.
   * This is a read-only field and will be available after a role is created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 3;
   */
  accountId: string;

  /**
   * The name of the role.
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * The human readable description of this role.
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * Set if this role represents the admin role.
   *
   * @generated from field: bool is_admin = 6;
   */
  isAdmin: boolean;

  /**
   * The role type.
   *
   * @generated from field: qdrant.cloud.iam.v1.RoleType role_type = 7;
   */
  roleType: RoleType;

  /**
   * The permissions associated with this role.
   *
   * @generated from field: repeated string permissions = 8;
   */
  permissions: string[];
};

/**
 * Describes the message qdrant.cloud.iam.v1.Role.
 * Use `create(RoleSchema)` to create a new message.
 */
export const RoleSchema: GenMessage<Role> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 16);

/**
 * RoleType specified the type of the role
 *
 * @generated from enum qdrant.cloud.iam.v1.RoleType
 */
export enum RoleType {
  /**
   * The role type is unspecified.
   *
   * @generated from enum value: ROLE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The role type is system.
   * Note: system roles cannot be changed (create/update/delete).
   *
   * @generated from enum value: ROLE_TYPE_SYSTEM = 1;
   */
  SYSTEM = 1,

  /**
   * The role type is custom defined.
   *
   * @generated from enum value: ROLE_TYPE_CUSTOM = 2;
   */
  CUSTOM = 2,
}

/**
 * Describes the enum qdrant.cloud.iam.v1.RoleType.
 */
export const RoleTypeSchema: GenEnum<RoleType> = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_iam_v1_iam, 0);

/**
 * IAMService is the API used to configure IAM (identity and access management) objects..
 *
 * @generated from service qdrant.cloud.iam.v1.IAMService
 */
export const IAMService: GenService<{
  /**
   * Fetch all permissions known in the system for the provided account.
   * Note: If you want to get a list of permissions available for you, please use GetEffectivePermissions instead.
   * Required permissions:
   * - read:roles
   *
   * @generated from rpc qdrant.cloud.iam.v1.IAMService.ListPermissions
   */
  listPermissions: {
    methodKind: "unary";
    input: typeof ListPermissionsRequestSchema;
    output: typeof ListPermissionsResponseSchema;
  },
  /**
   * Fetch all roles in the account identified by the given ID.
   * Required permissions:
   * - read:roles
   *
   * @generated from rpc qdrant.cloud.iam.v1.IAMService.ListRoles
   */
  listRoles: {
    methodKind: "unary";
    input: typeof ListRolesRequestSchema;
    output: typeof ListRolesResponseSchema;
  },
  /**
   * Get a role for the account identified by the given ID.
   * Required permissions:
   * - read:roles
   *
   * @generated from rpc qdrant.cloud.iam.v1.IAMService.GetRole
   */
  getRole: {
    methodKind: "unary";
    input: typeof GetRoleRequestSchema;
    output: typeof GetRoleResponseSchema;
  },
  /**
   * Creates a role for the account identified by the given ID.
   * Note: The role_type must be ROLE_TYPE_CUSTOM.
   * Required permissions:
   * - write:roles
   *
   * @generated from rpc qdrant.cloud.iam.v1.IAMService.CreateRole
   */
  createRole: {
    methodKind: "unary";
    input: typeof CreateRoleRequestSchema;
    output: typeof CreateRoleResponseSchema;
  },
  /**
   * Update a role in the account identified by the given ID.
   * Note: The role_type must be ROLE_TYPE_CUSTOM.
   * Required permissions:
   * - write:roles
   *
   * @generated from rpc qdrant.cloud.iam.v1.IAMService.UpdateRole
   */
  updateRole: {
    methodKind: "unary";
    input: typeof UpdateRoleRequestSchema;
    output: typeof UpdateRoleResponseSchema;
  },
  /**
   * Deletes a role in the account identified by the given ID.
   * Note: The role_type must be ROLE_TYPE_CUSTOM.
   * Required permissions:
   * - delete:roles
   *
   * @generated from rpc qdrant.cloud.iam.v1.IAMService.DeleteRole
   */
  deleteRole: {
    methodKind: "unary";
    input: typeof DeleteRoleRequestSchema;
    output: typeof DeleteRoleResponseSchema;
  },
  /**
   * Get the effective permissions for the user in the account identified by the given ID.
   * Required permissions:
   * - read:roles
   *
   * @generated from rpc qdrant.cloud.iam.v1.IAMService.GetEffectivePermissions
   */
  getEffectivePermissions: {
    methodKind: "unary";
    input: typeof GetEffectivePermissionsRequestSchema;
    output: typeof GetEffectivePermissionsResponseSchema;
  },
  /**
   * Assign the provided roles to the user in the account identified by the given ID.
   * Required permissions:
   * - write:roles
   *
   * @generated from rpc qdrant.cloud.iam.v1.IAMService.AssignUserRoles
   */
  assignUserRoles: {
    methodKind: "unary";
    input: typeof AssignUserRolesRequestSchema;
    output: typeof AssignUserRolesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_iam_v1_iam, 0);

