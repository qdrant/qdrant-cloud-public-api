// @generated by protoc-gen-es v2.2.3 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/iam/v1/iam.proto (package qdrant.cloud.iam.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb.js";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb.js";

/**
 * Describes the file qdrant/cloud/iam/v1/iam.proto.
 */
export const file_qdrant_cloud_iam_v1_iam = /*@__PURE__*/
  fileDesc("Ch1xZHJhbnQvY2xvdWQvaWFtL3YxL2lhbS5wcm90bxITcWRyYW50LmNsb3VkLmlhbS52MSIdChtHZXRBdXRoZW50aWNhdGVkVXNlclJlcXVlc3QiRwocR2V0QXV0aGVudGljYXRlZFVzZXJSZXNwb25zZRInCgR1c2VyGAEgASgLMhkucWRyYW50LmNsb3VkLmlhbS52MS5Vc2VyIjwKEVVwZGF0ZVVzZXJSZXF1ZXN0EicKBHVzZXIYASABKAsyGS5xZHJhbnQuY2xvdWQuaWFtLnYxLlVzZXIiPQoSVXBkYXRlVXNlclJlc3BvbnNlEicKBHVzZXIYASABKAsyGS5xZHJhbnQuY2xvdWQuaWFtLnYxLlVzZXIiYgoVR2V0VXNlckNvbnNlbnRSZXF1ZXN0EkkKDWRvY3VtZW50X3R5cGUYASABKA4yJi5xZHJhbnQuY2xvdWQuaWFtLnYxLkxlZ2FsRG9jdW1lbnRUeXBlQgq6SAeCAQQQASAAIvQBChZHZXRVc2VyQ29uc2VudFJlc3BvbnNlEj0KDWRvY3VtZW50X3R5cGUYASABKA4yJi5xZHJhbnQuY2xvdWQuaWFtLnYxLkxlZ2FsRG9jdW1lbnRUeXBlEjYKBnN0YXR1cxgCIAEoDjImLnFkcmFudC5jbG91ZC5pYW0udjEuVXNlckNvbnNlbnRTdGF0dXMSOQoQbGFzdF9tb2RpZmllZF9hdBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAIgBARITCgtpc19hY2NlcHRlZBgEIAEoCEITChFfbGFzdF9tb2RpZmllZF9hdCKyAQoYUmVjb3JkVXNlckNvbnNlbnRSZXF1ZXN0EkkKDWRvY3VtZW50X3R5cGUYASABKA4yJi5xZHJhbnQuY2xvdWQuaWFtLnYxLkxlZ2FsRG9jdW1lbnRUeXBlQgq6SAeCAQQQASAAEksKDXN0YXR1c191cGRhdGUYAiABKA4yJi5xZHJhbnQuY2xvdWQuaWFtLnYxLlVzZXJDb25zZW50U3RhdHVzQgy6SAmCAQYQASAAIAMiGwoZUmVjb3JkVXNlckNvbnNlbnRSZXNwb25zZSI2ChZMaXN0UGVybWlzc2lvbnNSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBIi4KF0xpc3RQZXJtaXNzaW9uc1Jlc3BvbnNlEhMKC3Blcm1pc3Npb25zGAEgAygJIjAKEExpc3RSb2xlc1JlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQEiPQoRTGlzdFJvbGVzUmVzcG9uc2USKAoFaXRlbXMYASADKAsyGS5xZHJhbnQuY2xvdWQuaWFtLnYxLlJvbGUiSQoOR2V0Um9sZVJlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQESGQoHcm9sZV9pZBgCIAEoCUIIukgFcgOwAQEiOgoPR2V0Um9sZVJlc3BvbnNlEicKBHJvbGUYASABKAsyGS5xZHJhbnQuY2xvdWQuaWFtLnYxLlJvbGUiPAoRQ3JlYXRlUm9sZVJlcXVlc3QSJwoEcm9sZRgBIAEoCzIZLnFkcmFudC5jbG91ZC5pYW0udjEuUm9sZSI9ChJDcmVhdGVSb2xlUmVzcG9uc2USJwoEcm9sZRgBIAEoCzIZLnFkcmFudC5jbG91ZC5pYW0udjEuUm9sZSI8ChFVcGRhdGVSb2xlUmVxdWVzdBInCgRyb2xlGAEgASgLMhkucWRyYW50LmNsb3VkLmlhbS52MS5Sb2xlIj0KElVwZGF0ZVJvbGVSZXNwb25zZRInCgRyb2xlGAEgASgLMhkucWRyYW50LmNsb3VkLmlhbS52MS5Sb2xlIkwKEURlbGV0ZVJvbGVSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhkKB3JvbGVfaWQYAiABKAlCCLpIBXIDsAEBIhQKEkRlbGV0ZVJvbGVSZXNwb25zZSI/Ch9MaXN0RWZmZWN0aXZlUGVybWlzc2lvbnNSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBIjcKIExpc3RFZmZlY3RpdmVQZXJtaXNzaW9uc1Jlc3BvbnNlEhMKC3Blcm1pc3Npb25zGAEgAygJIqQBChZBc3NpZ25Vc2VyUm9sZXNSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhkKB3VzZXJfaWQYAiABKAlCCLpIBXIDsAEBEiYKD3JvbGVfaWRzX3RvX2FkZBgDIAMoCUINukgKkgEHIgVyA7ABARIpChJyb2xlX2lkc190b19kZWxldGUYBCADKAlCDbpICpIBByIFcgOwAQEiGQoXQXNzaWduVXNlclJvbGVzUmVzcG9uc2Ui2gIKBFVzZXISFAoCaWQYASABKAlCCLpIBXIDsAEBEi4KCmNyZWF0ZWRfYXQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjQKEGxhc3RfbW9kaWZpZWRfYXQYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhYKBWVtYWlsGAQgASgJQge6SARyAmABEhcKBG5hbWUYBSABKAlCCbpIBnIEEAIYQBIvCgZzdGF0dXMYBiABKA4yHy5xZHJhbnQuY2xvdWQuaWFtLnYxLlVzZXJTdGF0dXMSJAoSZGVmYXVsdF9hY2NvdW50X2lkGAcgASgJQgi6SAVyA7ABARJOChhub3RpZmljYXRpb25fcHJlZmVyZW5jZXMYCCABKAsyLC5xZHJhbnQuY2xvdWQuaWFtLnYxLk5vdGlmaWNhdGlvblByZWZlcmVuY2VzIjsKF05vdGlmaWNhdGlvblByZWZlcmVuY2VzEiAKGGVtYWlsX25ld3NsZXR0ZXJfZW5hYmxlZBgBIAEoCCLUAwoEUm9sZRIKCgJpZBgBIAEoCRIuCgpjcmVhdGVkX2F0GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI0ChBsYXN0X21vZGlmaWVkX2F0GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIcCgphY2NvdW50X2lkGAQgASgJQgi6SAVyA7ABARIpCgRuYW1lGAUgASgJQhu6SBhyFhAEGEAyEF5bYS16QS1aMC05LV9dKyQSEwoLZGVzY3JpcHRpb24YBiABKAkSMAoJcm9sZV90eXBlGAcgASgOMh0ucWRyYW50LmNsb3VkLmlhbS52MS5Sb2xlVHlwZRIdCgtwZXJtaXNzaW9ucxgIIAMoCUIIukgFkgECCAE6qgG6SKYBGqMBCgpjbHVzdGVyLmlkEhp2YWx1ZSBtdXN0IGJlIGEgdmFsaWQgVVVJRBp5dGhpcy5pZC5tYXRjaGVzKCdeWzAtOWEtZkEtRl17OH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17NH0tWzAtOWEtZkEtRl17MTJ9JCcpIHx8ICFoYXModGhpcy5jcmVhdGVkX2F0KSpzCgpVc2VyU3RhdHVzEhsKF1VTRVJfU1RBVFVTX1VOU1BFQ0lGSUVEEAASFgoSVVNFUl9TVEFUVVNfQUNUSVZFEAESFwoTVVNFUl9TVEFUVVNfQkxPQ0tFRBACEhcKE1VTRVJfU1RBVFVTX0RFTEVURUQQAyqnAQoRTGVnYWxEb2N1bWVudFR5cGUSIwofTEVHQUxfRE9DVU1FTlRfVFlQRV9VTlNQRUNJRklFRBAAEigKJExFR0FMX0RPQ1VNRU5UX1RZUEVfVEVSTVNfT0ZfU0VSVklDRRABEiYKIkxFR0FMX0RPQ1VNRU5UX1RZUEVfUFJJVkFDWV9QT0xJQ1kQAhIbChdMRUdBTF9ET0NVTUVOVF9UWVBFX1NMQRADKpwBChFVc2VyQ29uc2VudFN0YXR1cxIjCh9VU0VSX0NPTlNFTlRfU1RBVFVTX1VOU1BFQ0lGSUVEEAASIAocVVNFUl9DT05TRU5UX1NUQVRVU19BQ0NFUFRFRBABEh8KG1VTRVJfQ09OU0VOVF9TVEFUVVNfUkVWT0tFRBACEh8KG1VTRVJfQ09OU0VOVF9TVEFUVVNfUEVORElORxADKlEKCFJvbGVUeXBlEhkKFVJPTEVfVFlQRV9VTlNQRUNJRklFRBAAEhQKEFJPTEVfVFlQRV9TWVNURU0QARIUChBST0xFX1RZUEVfQ1VTVE9NEAIy3BAKCklBTVNlcnZpY2USoQEKFEdldEF1dGhlbnRpY2F0ZWRVc2VyEjAucWRyYW50LmNsb3VkLmlhbS52MS5HZXRBdXRoZW50aWNhdGVkVXNlclJlcXVlc3QaMS5xZHJhbnQuY2xvdWQuaWFtLnYxLkdldEF1dGhlbnRpY2F0ZWRVc2VyUmVzcG9uc2UiJIq1GACStRgAgtPkkwIWEhQvYXBpL2lhbS92MS91c2Vycy9tZRKXAQoKVXBkYXRlVXNlchImLnFkcmFudC5jbG91ZC5pYW0udjEuVXBkYXRlVXNlclJlcXVlc3QaJy5xZHJhbnQuY2xvdWQuaWFtLnYxLlVwZGF0ZVVzZXJSZXNwb25zZSI4irUYCndyaXRlOnVzZXKStRgAgtPkkwIgOgEqGhsvYXBpL2lhbS92MS91c2Vycy97dXNlci5pZH0SlwEKDkdldFVzZXJDb25zZW50EioucWRyYW50LmNsb3VkLmlhbS52MS5HZXRVc2VyQ29uc2VudFJlcXVlc3QaKy5xZHJhbnQuY2xvdWQuaWFtLnYxLkdldFVzZXJDb25zZW50UmVzcG9uc2UiLIq1GACStRgAgtPkkwIeEhwvYXBpL2lhbS92MS91c2Vycy9tZS9jb25zZW50Eq0BChFSZWNvcmRVc2VyQ29uc2VudBItLnFkcmFudC5jbG91ZC5pYW0udjEuUmVjb3JkVXNlckNvbnNlbnRSZXF1ZXN0Gi4ucWRyYW50LmNsb3VkLmlhbS52MS5SZWNvcmRVc2VyQ29uc2VudFJlc3BvbnNlIjmKtRgKd3JpdGU6dXNlcpK1GACC0+STAiE6ASoiHC9hcGkvaWFtL3YxL3VzZXJzL21lL2NvbnNlbnQSsQEKD0xpc3RQZXJtaXNzaW9ucxIrLnFkcmFudC5jbG91ZC5pYW0udjEuTGlzdFBlcm1pc3Npb25zUmVxdWVzdBosLnFkcmFudC5jbG91ZC5pYW0udjEuTGlzdFBlcm1pc3Npb25zUmVzcG9uc2UiQ4q1GApyZWFkOnJvbGVzgtPkkwIvEi0vYXBpL2lhbS92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vcGVybWlzc2lvbnMSmQEKCUxpc3RSb2xlcxIlLnFkcmFudC5jbG91ZC5pYW0udjEuTGlzdFJvbGVzUmVxdWVzdBomLnFkcmFudC5jbG91ZC5pYW0udjEuTGlzdFJvbGVzUmVzcG9uc2UiPYq1GApyZWFkOnJvbGVzgtPkkwIpEicvYXBpL2lhbS92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vcm9sZXMSsAEKB0dldFJvbGUSIy5xZHJhbnQuY2xvdWQuaWFtLnYxLkdldFJvbGVSZXF1ZXN0GiQucWRyYW50LmNsb3VkLmlhbS52MS5HZXRSb2xlUmVzcG9uc2UiWoq1GApyZWFkOnJvbGVzkrUYD3JvbGUuYWNjb3VudF9pZILT5JMCMxIxL2FwaS9pYW0vdjEvYWNjb3VudHMve2FjY291bnRfaWR9L3JvbGVzL3tyb2xlX2lkfRK4AQoKQ3JlYXRlUm9sZRImLnFkcmFudC5jbG91ZC5pYW0udjEuQ3JlYXRlUm9sZVJlcXVlc3QaJy5xZHJhbnQuY2xvdWQuaWFtLnYxLkNyZWF0ZVJvbGVSZXNwb25zZSJZirUYC3dyaXRlOnJvbGVzkrUYD3JvbGUuYWNjb3VudF9pZILT5JMCMToBKiIsL2FwaS9pYW0vdjEvYWNjb3VudHMve3JvbGUuYWNjb3VudF9pZH0vcm9sZXMSwgEKClVwZGF0ZVJvbGUSJi5xZHJhbnQuY2xvdWQuaWFtLnYxLlVwZGF0ZVJvbGVSZXF1ZXN0GicucWRyYW50LmNsb3VkLmlhbS52MS5VcGRhdGVSb2xlUmVzcG9uc2UiY4q1GAt3cml0ZTpyb2xlc5K1GA9yb2xlLmFjY291bnRfaWSC0+STAjs6ASoaNi9hcGkvaWFtL3YxL2FjY291bnRzL3tyb2xlLmFjY291bnRfaWR9L3JvbGVzL3tyb2xlLmlkfRKoAQoKRGVsZXRlUm9sZRImLnFkcmFudC5jbG91ZC5pYW0udjEuRGVsZXRlUm9sZVJlcXVlc3QaJy5xZHJhbnQuY2xvdWQuaWFtLnYxLkRlbGV0ZVJvbGVSZXNwb25zZSJJirUYDGRlbGV0ZTpyb2xlc4LT5JMCMyoxL2FwaS9pYW0vdjEvYWNjb3VudHMve2FjY291bnRfaWR9L3JvbGVzL3tyb2xlX2lkfRLWAQoYTGlzdEVmZmVjdGl2ZVBlcm1pc3Npb25zEjQucWRyYW50LmNsb3VkLmlhbS52MS5MaXN0RWZmZWN0aXZlUGVybWlzc2lvbnNSZXF1ZXN0GjUucWRyYW50LmNsb3VkLmlhbS52MS5MaXN0RWZmZWN0aXZlUGVybWlzc2lvbnNSZXNwb25zZSJNirUYCnJlYWQ6cm9sZXOC0+STAjkSNy9hcGkvaWFtL3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9lZmZlY3RpdmUtcGVybWlzc2lvbnMSvgEKD0Fzc2lnblVzZXJSb2xlcxIrLnFkcmFudC5jbG91ZC5pYW0udjEuQXNzaWduVXNlclJvbGVzUmVxdWVzdBosLnFkcmFudC5jbG91ZC5pYW0udjEuQXNzaWduVXNlclJvbGVzUmVzcG9uc2UiUIq1GApyZWFkOnJvbGVzgtPkkwI8OgEqIjcvYXBpL2lhbS92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vdXNlcnMve3VzZXJfaWR9L3JvbGVzQt4BChdjb20ucWRyYW50LmNsb3VkLmlhbS52MUIISWFtUHJvdG9QAVpKZ2l0aHViLmNvbS9xZHJhbnQvcWRyYW50LWNsb3VkLXB1YmxpYy1hcGkvZ2VuL2dvL3FkcmFudC9jbG91ZC9pYW0vdjE7aWFtdjGiAgNRQ0mqAhNRZHJhbnQuQ2xvdWQuSWFtLlYxygITUWRyYW50XENsb3VkXElhbVxWMeICH1FkcmFudFxDbG91ZFxJYW1cVjFcR1BCTWV0YWRhdGHqAhZRZHJhbnQ6OkNsb3VkOjpJYW06OlYxYgZwcm90bzM", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common]);

/**
 * Describes the message qdrant.cloud.iam.v1.GetAuthenticatedUserRequest.
 * Use `create(GetAuthenticatedUserRequestSchema)` to create a new message.
 */
export const GetAuthenticatedUserRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 0);

/**
 * Describes the message qdrant.cloud.iam.v1.GetAuthenticatedUserResponse.
 * Use `create(GetAuthenticatedUserResponseSchema)` to create a new message.
 */
export const GetAuthenticatedUserResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 1);

/**
 * Describes the message qdrant.cloud.iam.v1.UpdateUserRequest.
 * Use `create(UpdateUserRequestSchema)` to create a new message.
 */
export const UpdateUserRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 2);

/**
 * Describes the message qdrant.cloud.iam.v1.UpdateUserResponse.
 * Use `create(UpdateUserResponseSchema)` to create a new message.
 */
export const UpdateUserResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 3);

/**
 * Describes the message qdrant.cloud.iam.v1.GetUserConsentRequest.
 * Use `create(GetUserConsentRequestSchema)` to create a new message.
 */
export const GetUserConsentRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 4);

/**
 * Describes the message qdrant.cloud.iam.v1.GetUserConsentResponse.
 * Use `create(GetUserConsentResponseSchema)` to create a new message.
 */
export const GetUserConsentResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 5);

/**
 * Describes the message qdrant.cloud.iam.v1.RecordUserConsentRequest.
 * Use `create(RecordUserConsentRequestSchema)` to create a new message.
 */
export const RecordUserConsentRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 6);

/**
 * Describes the message qdrant.cloud.iam.v1.RecordUserConsentResponse.
 * Use `create(RecordUserConsentResponseSchema)` to create a new message.
 */
export const RecordUserConsentResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 7);

/**
 * Describes the message qdrant.cloud.iam.v1.ListPermissionsRequest.
 * Use `create(ListPermissionsRequestSchema)` to create a new message.
 */
export const ListPermissionsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 8);

/**
 * Describes the message qdrant.cloud.iam.v1.ListPermissionsResponse.
 * Use `create(ListPermissionsResponseSchema)` to create a new message.
 */
export const ListPermissionsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 9);

/**
 * Describes the message qdrant.cloud.iam.v1.ListRolesRequest.
 * Use `create(ListRolesRequestSchema)` to create a new message.
 */
export const ListRolesRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 10);

/**
 * Describes the message qdrant.cloud.iam.v1.ListRolesResponse.
 * Use `create(ListRolesResponseSchema)` to create a new message.
 */
export const ListRolesResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 11);

/**
 * Describes the message qdrant.cloud.iam.v1.GetRoleRequest.
 * Use `create(GetRoleRequestSchema)` to create a new message.
 */
export const GetRoleRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 12);

/**
 * Describes the message qdrant.cloud.iam.v1.GetRoleResponse.
 * Use `create(GetRoleResponseSchema)` to create a new message.
 */
export const GetRoleResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 13);

/**
 * Describes the message qdrant.cloud.iam.v1.CreateRoleRequest.
 * Use `create(CreateRoleRequestSchema)` to create a new message.
 */
export const CreateRoleRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 14);

/**
 * Describes the message qdrant.cloud.iam.v1.CreateRoleResponse.
 * Use `create(CreateRoleResponseSchema)` to create a new message.
 */
export const CreateRoleResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 15);

/**
 * Describes the message qdrant.cloud.iam.v1.UpdateRoleRequest.
 * Use `create(UpdateRoleRequestSchema)` to create a new message.
 */
export const UpdateRoleRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 16);

/**
 * Describes the message qdrant.cloud.iam.v1.UpdateRoleResponse.
 * Use `create(UpdateRoleResponseSchema)` to create a new message.
 */
export const UpdateRoleResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 17);

/**
 * Describes the message qdrant.cloud.iam.v1.DeleteRoleRequest.
 * Use `create(DeleteRoleRequestSchema)` to create a new message.
 */
export const DeleteRoleRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 18);

/**
 * Describes the message qdrant.cloud.iam.v1.DeleteRoleResponse.
 * Use `create(DeleteRoleResponseSchema)` to create a new message.
 */
export const DeleteRoleResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 19);

/**
 * Describes the message qdrant.cloud.iam.v1.ListEffectivePermissionsRequest.
 * Use `create(ListEffectivePermissionsRequestSchema)` to create a new message.
 */
export const ListEffectivePermissionsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 20);

/**
 * Describes the message qdrant.cloud.iam.v1.ListEffectivePermissionsResponse.
 * Use `create(ListEffectivePermissionsResponseSchema)` to create a new message.
 */
export const ListEffectivePermissionsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 21);

/**
 * Describes the message qdrant.cloud.iam.v1.AssignUserRolesRequest.
 * Use `create(AssignUserRolesRequestSchema)` to create a new message.
 */
export const AssignUserRolesRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 22);

/**
 * Describes the message qdrant.cloud.iam.v1.AssignUserRolesResponse.
 * Use `create(AssignUserRolesResponseSchema)` to create a new message.
 */
export const AssignUserRolesResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 23);

/**
 * Describes the message qdrant.cloud.iam.v1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 24);

/**
 * Describes the message qdrant.cloud.iam.v1.NotificationPreferences.
 * Use `create(NotificationPreferencesSchema)` to create a new message.
 */
export const NotificationPreferencesSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 25);

/**
 * Describes the message qdrant.cloud.iam.v1.Role.
 * Use `create(RoleSchema)` to create a new message.
 */
export const RoleSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 26);

/**
 * Describes the enum qdrant.cloud.iam.v1.UserStatus.
 */
export const UserStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_iam_v1_iam, 0);

/**
 * UserStatus defines the possible statuses of a user.
 *
 * @generated from enum qdrant.cloud.iam.v1.UserStatus
 */
export const UserStatus = /*@__PURE__*/
  tsEnum(UserStatusSchema);

/**
 * Describes the enum qdrant.cloud.iam.v1.LegalDocumentType.
 */
export const LegalDocumentTypeSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_iam_v1_iam, 1);

/**
 * LegalDocumentType specifies the type of a legal document.
 *
 * @generated from enum qdrant.cloud.iam.v1.LegalDocumentType
 */
export const LegalDocumentType = /*@__PURE__*/
  tsEnum(LegalDocumentTypeSchema);

/**
 * Describes the enum qdrant.cloud.iam.v1.UserConsentStatus.
 */
export const UserConsentStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_iam_v1_iam, 2);

/**
 * UserConsentStatus specifies the status from an user for a consent.
 *
 * @generated from enum qdrant.cloud.iam.v1.UserConsentStatus
 */
export const UserConsentStatus = /*@__PURE__*/
  tsEnum(UserConsentStatusSchema);

/**
 * Describes the enum qdrant.cloud.iam.v1.RoleType.
 */
export const RoleTypeSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_iam_v1_iam, 3);

/**
 * RoleType specified the type of the role
 *
 * @generated from enum qdrant.cloud.iam.v1.RoleType
 */
export const RoleType = /*@__PURE__*/
  tsEnum(RoleTypeSchema);

/**
 * IAMService is the API used to configure IAM (identity and access management) objects..
 *
 * @generated from service qdrant.cloud.iam.v1.IAMService
 */
export const IAMService = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_iam_v1_iam, 0);

