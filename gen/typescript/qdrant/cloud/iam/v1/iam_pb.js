// @generated by protoc-gen-es v2.2.3 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/iam/v1/iam.proto (package qdrant.cloud.iam.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb.js";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../common/v1/common_pb.js";

/**
 * Describes the file qdrant/cloud/iam/v1/iam.proto.
 */
export const file_qdrant_cloud_iam_v1_iam = /*@__PURE__*/
  fileDesc("Ch1xZHJhbnQvY2xvdWQvaWFtL3YxL2lhbS5wcm90bxITcWRyYW50LmNsb3VkLmlhbS52MSIdChtHZXRBdXRoZW50aWNhdGVkVXNlclJlcXVlc3QiRwocR2V0QXV0aGVudGljYXRlZFVzZXJSZXNwb25zZRInCgR1c2VyGAEgASgLMhkucWRyYW50LmNsb3VkLmlhbS52MS5Vc2VyIjwKEVVwZGF0ZVVzZXJSZXF1ZXN0EicKBHVzZXIYASABKAsyGS5xZHJhbnQuY2xvdWQuaWFtLnYxLlVzZXIiPQoSVXBkYXRlVXNlclJlc3BvbnNlEicKBHVzZXIYASABKAsyGS5xZHJhbnQuY2xvdWQuaWFtLnYxLlVzZXIiYgoVR2V0VXNlckNvbnNlbnRSZXF1ZXN0EkkKDWRvY3VtZW50X3R5cGUYASABKA4yJi5xZHJhbnQuY2xvdWQuaWFtLnYxLkxlZ2FsRG9jdW1lbnRUeXBlQgq6SAeCAQQQASAAIuYBChZHZXRVc2VyQ29uc2VudFJlc3BvbnNlEj0KDWRvY3VtZW50X3R5cGUYASABKA4yJi5xZHJhbnQuY2xvdWQuaWFtLnYxLkxlZ2FsRG9jdW1lbnRUeXBlEjYKBmFjdGlvbhgCIAEoDjImLnFkcmFudC5jbG91ZC5pYW0udjEuVXNlckNvbnNlbnRBY3Rpb24SMgoJYWN0aW9uX2F0GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAiAEBEhMKC2lzX2FjY2VwdGVkGAQgASgIQgwKCl9hY3Rpb25fYXQiqQEKGFJlY29yZFVzZXJDb25zZW50UmVxdWVzdBJJCg1kb2N1bWVudF90eXBlGAEgASgOMiYucWRyYW50LmNsb3VkLmlhbS52MS5MZWdhbERvY3VtZW50VHlwZUIKukgHggEEEAEgABJCCgZhY3Rpb24YAiABKA4yJi5xZHJhbnQuY2xvdWQuaWFtLnYxLlVzZXJDb25zZW50QWN0aW9uQgq6SAeCAQQQASAAIhsKGVJlY29yZFVzZXJDb25zZW50UmVzcG9uc2UiNgoWTGlzdFBlcm1pc3Npb25zUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABASIuChdMaXN0UGVybWlzc2lvbnNSZXNwb25zZRITCgtwZXJtaXNzaW9ucxgBIAMoCSIwChBMaXN0Um9sZXNSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBIj0KEUxpc3RSb2xlc1Jlc3BvbnNlEigKBWl0ZW1zGAEgAygLMhkucWRyYW50LmNsb3VkLmlhbS52MS5Sb2xlIkkKDkdldFJvbGVSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhkKB3JvbGVfaWQYAiABKAlCCLpIBXIDsAEBIjoKD0dldFJvbGVSZXNwb25zZRInCgRyb2xlGAEgASgLMhkucWRyYW50LmNsb3VkLmlhbS52MS5Sb2xlIjwKEUNyZWF0ZVJvbGVSZXF1ZXN0EicKBHJvbGUYASABKAsyGS5xZHJhbnQuY2xvdWQuaWFtLnYxLlJvbGUiPQoSQ3JlYXRlUm9sZVJlc3BvbnNlEicKBHJvbGUYASABKAsyGS5xZHJhbnQuY2xvdWQuaWFtLnYxLlJvbGUiPAoRVXBkYXRlUm9sZVJlcXVlc3QSJwoEcm9sZRgBIAEoCzIZLnFkcmFudC5jbG91ZC5pYW0udjEuUm9sZSI9ChJVcGRhdGVSb2xlUmVzcG9uc2USJwoEcm9sZRgBIAEoCzIZLnFkcmFudC5jbG91ZC5pYW0udjEuUm9sZSJMChFEZWxldGVSb2xlUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIZCgdyb2xlX2lkGAIgASgJQgi6SAVyA7ABASIUChJEZWxldGVSb2xlUmVzcG9uc2UiPwofTGlzdEVmZmVjdGl2ZVBlcm1pc3Npb25zUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABASI3CiBMaXN0RWZmZWN0aXZlUGVybWlzc2lvbnNSZXNwb25zZRITCgtwZXJtaXNzaW9ucxgBIAMoCSKkAQoWQXNzaWduVXNlclJvbGVzUmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIZCgd1c2VyX2lkGAIgASgJQgi6SAVyA7ABARImCg9yb2xlX2lkc190b19hZGQYAyADKAlCDbpICpIBByIFcgOwAQESKQoScm9sZV9pZHNfdG9fZGVsZXRlGAQgAygJQg26SAqSAQciBXIDsAEBIhkKF0Fzc2lnblVzZXJSb2xlc1Jlc3BvbnNlIooCCgRVc2VyEhQKAmlkGAEgASgJQgi6SAVyA7ABARIuCgpjcmVhdGVkX2F0GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI0ChBsYXN0X21vZGlmaWVkX2F0GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIWCgVlbWFpbBgEIAEoCUIHukgEcgJgARIXCgRuYW1lGAUgASgJQgm6SAZyBBACGEASLwoGc3RhdHVzGAYgASgOMh8ucWRyYW50LmNsb3VkLmlhbS52MS5Vc2VyU3RhdHVzEiQKEmRlZmF1bHRfYWNjb3VudF9pZBgHIAEoCUIIukgFcgOwAQEi1AMKBFJvbGUSCgoCaWQYASABKAkSLgoKY3JlYXRlZF9hdBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNAoQbGFzdF9tb2RpZmllZF9hdBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASHAoKYWNjb3VudF9pZBgEIAEoCUIIukgFcgOwAQESKQoEbmFtZRgFIAEoCUIbukgYchYQBBhAMhBeW2EtekEtWjAtOS1fXSskEhMKC2Rlc2NyaXB0aW9uGAYgASgJEjAKCXJvbGVfdHlwZRgHIAEoDjIdLnFkcmFudC5jbG91ZC5pYW0udjEuUm9sZVR5cGUSHQoLcGVybWlzc2lvbnMYCCADKAlCCLpIBZIBAggBOqoBukimARqjAQoKY2x1c3Rlci5pZBIadmFsdWUgbXVzdCBiZSBhIHZhbGlkIFVVSUQaeXRoaXMuaWQubWF0Y2hlcygnXlswLTlhLWZBLUZdezh9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezEyfSQnKSB8fCAhaGFzKHRoaXMuY3JlYXRlZF9hdCkqcwoKVXNlclN0YXR1cxIbChdVU0VSX1NUQVRVU19VTlNQRUNJRklFRBAAEhYKElVTRVJfU1RBVFVTX0FDVElWRRABEhcKE1VTRVJfU1RBVFVTX0JMT0NLRUQQAhIXChNVU0VSX1NUQVRVU19ERUxFVEVEEAMqpwEKEUxlZ2FsRG9jdW1lbnRUeXBlEiMKH0xFR0FMX0RPQ1VNRU5UX1RZUEVfVU5TUEVDSUZJRUQQABIoCiRMRUdBTF9ET0NVTUVOVF9UWVBFX1RFUk1TX09GX1NFUlZJQ0UQARImCiJMRUdBTF9ET0NVTUVOVF9UWVBFX1BSSVZBQ1lfUE9MSUNZEAISGwoXTEVHQUxfRE9DVU1FTlRfVFlQRV9TTEEQAyqZAQoRVXNlckNvbnNlbnRBY3Rpb24SIwofVVNFUl9DT05TRU5UX0FDVElPTl9VTlNQRUNJRklFRBAAEh4KGlVTRVJfQ09OU0VOVF9BQ1RJT05fQUNDRVBUEAESHgoaVVNFUl9DT05TRU5UX0FDVElPTl9SRVZPS0UQAhIfChtVU0VSX0NPTlNFTlRfQUNUSU9OX1BFTkRJTkcQAypRCghSb2xlVHlwZRIZChVST0xFX1RZUEVfVU5TUEVDSUZJRUQQABIUChBST0xFX1RZUEVfU1lTVEVNEAESFAoQUk9MRV9UWVBFX0NVU1RPTRACMtwQCgpJQU1TZXJ2aWNlEqEBChRHZXRBdXRoZW50aWNhdGVkVXNlchIwLnFkcmFudC5jbG91ZC5pYW0udjEuR2V0QXV0aGVudGljYXRlZFVzZXJSZXF1ZXN0GjEucWRyYW50LmNsb3VkLmlhbS52MS5HZXRBdXRoZW50aWNhdGVkVXNlclJlc3BvbnNlIiSKtRgAkrUYAILT5JMCFhIUL2FwaS9pYW0vdjEvdXNlcnMvbWUSlwEKClVwZGF0ZVVzZXISJi5xZHJhbnQuY2xvdWQuaWFtLnYxLlVwZGF0ZVVzZXJSZXF1ZXN0GicucWRyYW50LmNsb3VkLmlhbS52MS5VcGRhdGVVc2VyUmVzcG9uc2UiOIq1GAp3cml0ZTp1c2VykrUYAILT5JMCIDoBKhobL2FwaS9pYW0vdjEvdXNlcnMve3VzZXIuaWR9EpcBCg5HZXRVc2VyQ29uc2VudBIqLnFkcmFudC5jbG91ZC5pYW0udjEuR2V0VXNlckNvbnNlbnRSZXF1ZXN0GisucWRyYW50LmNsb3VkLmlhbS52MS5HZXRVc2VyQ29uc2VudFJlc3BvbnNlIiyKtRgAkrUYAILT5JMCHhIcL2FwaS9pYW0vdjEvdXNlcnMvbWUvY29uc2VudBKtAQoRUmVjb3JkVXNlckNvbnNlbnQSLS5xZHJhbnQuY2xvdWQuaWFtLnYxLlJlY29yZFVzZXJDb25zZW50UmVxdWVzdBouLnFkcmFudC5jbG91ZC5pYW0udjEuUmVjb3JkVXNlckNvbnNlbnRSZXNwb25zZSI5irUYCndyaXRlOnVzZXKStRgAgtPkkwIhOgEqIhwvYXBpL2lhbS92MS91c2Vycy9tZS9jb25zZW50ErEBCg9MaXN0UGVybWlzc2lvbnMSKy5xZHJhbnQuY2xvdWQuaWFtLnYxLkxpc3RQZXJtaXNzaW9uc1JlcXVlc3QaLC5xZHJhbnQuY2xvdWQuaWFtLnYxLkxpc3RQZXJtaXNzaW9uc1Jlc3BvbnNlIkOKtRgKcmVhZDpyb2xlc4LT5JMCLxItL2FwaS9pYW0vdjEvYWNjb3VudHMve2FjY291bnRfaWR9L3Blcm1pc3Npb25zEpkBCglMaXN0Um9sZXMSJS5xZHJhbnQuY2xvdWQuaWFtLnYxLkxpc3RSb2xlc1JlcXVlc3QaJi5xZHJhbnQuY2xvdWQuaWFtLnYxLkxpc3RSb2xlc1Jlc3BvbnNlIj2KtRgKcmVhZDpyb2xlc4LT5JMCKRInL2FwaS9pYW0vdjEvYWNjb3VudHMve2FjY291bnRfaWR9L3JvbGVzErABCgdHZXRSb2xlEiMucWRyYW50LmNsb3VkLmlhbS52MS5HZXRSb2xlUmVxdWVzdBokLnFkcmFudC5jbG91ZC5pYW0udjEuR2V0Um9sZVJlc3BvbnNlIlqKtRgKcmVhZDpyb2xlc5K1GA9yb2xlLmFjY291bnRfaWSC0+STAjMSMS9hcGkvaWFtL3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9yb2xlcy97cm9sZV9pZH0SuAEKCkNyZWF0ZVJvbGUSJi5xZHJhbnQuY2xvdWQuaWFtLnYxLkNyZWF0ZVJvbGVSZXF1ZXN0GicucWRyYW50LmNsb3VkLmlhbS52MS5DcmVhdGVSb2xlUmVzcG9uc2UiWYq1GAt3cml0ZTpyb2xlc5K1GA9yb2xlLmFjY291bnRfaWSC0+STAjE6ASoiLC9hcGkvaWFtL3YxL2FjY291bnRzL3tyb2xlLmFjY291bnRfaWR9L3JvbGVzEsIBCgpVcGRhdGVSb2xlEiYucWRyYW50LmNsb3VkLmlhbS52MS5VcGRhdGVSb2xlUmVxdWVzdBonLnFkcmFudC5jbG91ZC5pYW0udjEuVXBkYXRlUm9sZVJlc3BvbnNlImOKtRgLd3JpdGU6cm9sZXOStRgPcm9sZS5hY2NvdW50X2lkgtPkkwI7OgEqGjYvYXBpL2lhbS92MS9hY2NvdW50cy97cm9sZS5hY2NvdW50X2lkfS9yb2xlcy97cm9sZS5pZH0SqAEKCkRlbGV0ZVJvbGUSJi5xZHJhbnQuY2xvdWQuaWFtLnYxLkRlbGV0ZVJvbGVSZXF1ZXN0GicucWRyYW50LmNsb3VkLmlhbS52MS5EZWxldGVSb2xlUmVzcG9uc2UiSYq1GAxkZWxldGU6cm9sZXOC0+STAjMqMS9hcGkvaWFtL3YxL2FjY291bnRzL3thY2NvdW50X2lkfS9yb2xlcy97cm9sZV9pZH0S1gEKGExpc3RFZmZlY3RpdmVQZXJtaXNzaW9ucxI0LnFkcmFudC5jbG91ZC5pYW0udjEuTGlzdEVmZmVjdGl2ZVBlcm1pc3Npb25zUmVxdWVzdBo1LnFkcmFudC5jbG91ZC5pYW0udjEuTGlzdEVmZmVjdGl2ZVBlcm1pc3Npb25zUmVzcG9uc2UiTYq1GApyZWFkOnJvbGVzgtPkkwI5EjcvYXBpL2lhbS92MS9hY2NvdW50cy97YWNjb3VudF9pZH0vZWZmZWN0aXZlLXBlcm1pc3Npb25zEr4BCg9Bc3NpZ25Vc2VyUm9sZXMSKy5xZHJhbnQuY2xvdWQuaWFtLnYxLkFzc2lnblVzZXJSb2xlc1JlcXVlc3QaLC5xZHJhbnQuY2xvdWQuaWFtLnYxLkFzc2lnblVzZXJSb2xlc1Jlc3BvbnNlIlCKtRgKcmVhZDpyb2xlc4LT5JMCPDoBKiI3L2FwaS9pYW0vdjEvYWNjb3VudHMve2FjY291bnRfaWR9L3VzZXJzL3t1c2VyX2lkfS9yb2xlc0LeAQoXY29tLnFkcmFudC5jbG91ZC5pYW0udjFCCElhbVByb3RvUAFaSmdpdGh1Yi5jb20vcWRyYW50L3FkcmFudC1jbG91ZC1wdWJsaWMtYXBpL2dlbi9nby9xZHJhbnQvY2xvdWQvaWFtL3YxO2lhbXYxogIDUUNJqgITUWRyYW50LkNsb3VkLklhbS5WMcoCE1FkcmFudFxDbG91ZFxJYW1cVjHiAh9RZHJhbnRcQ2xvdWRcSWFtXFYxXEdQQk1ldGFkYXRh6gIWUWRyYW50OjpDbG91ZDo6SWFtOjpWMWIGcHJvdG8z", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common]);

/**
 * Describes the message qdrant.cloud.iam.v1.GetAuthenticatedUserRequest.
 * Use `create(GetAuthenticatedUserRequestSchema)` to create a new message.
 */
export const GetAuthenticatedUserRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 0);

/**
 * Describes the message qdrant.cloud.iam.v1.GetAuthenticatedUserResponse.
 * Use `create(GetAuthenticatedUserResponseSchema)` to create a new message.
 */
export const GetAuthenticatedUserResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 1);

/**
 * Describes the message qdrant.cloud.iam.v1.UpdateUserRequest.
 * Use `create(UpdateUserRequestSchema)` to create a new message.
 */
export const UpdateUserRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 2);

/**
 * Describes the message qdrant.cloud.iam.v1.UpdateUserResponse.
 * Use `create(UpdateUserResponseSchema)` to create a new message.
 */
export const UpdateUserResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 3);

/**
 * Describes the message qdrant.cloud.iam.v1.GetUserConsentRequest.
 * Use `create(GetUserConsentRequestSchema)` to create a new message.
 */
export const GetUserConsentRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 4);

/**
 * Describes the message qdrant.cloud.iam.v1.GetUserConsentResponse.
 * Use `create(GetUserConsentResponseSchema)` to create a new message.
 */
export const GetUserConsentResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 5);

/**
 * Describes the message qdrant.cloud.iam.v1.RecordUserConsentRequest.
 * Use `create(RecordUserConsentRequestSchema)` to create a new message.
 */
export const RecordUserConsentRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 6);

/**
 * Describes the message qdrant.cloud.iam.v1.RecordUserConsentResponse.
 * Use `create(RecordUserConsentResponseSchema)` to create a new message.
 */
export const RecordUserConsentResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 7);

/**
 * Describes the message qdrant.cloud.iam.v1.ListPermissionsRequest.
 * Use `create(ListPermissionsRequestSchema)` to create a new message.
 */
export const ListPermissionsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 8);

/**
 * Describes the message qdrant.cloud.iam.v1.ListPermissionsResponse.
 * Use `create(ListPermissionsResponseSchema)` to create a new message.
 */
export const ListPermissionsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 9);

/**
 * Describes the message qdrant.cloud.iam.v1.ListRolesRequest.
 * Use `create(ListRolesRequestSchema)` to create a new message.
 */
export const ListRolesRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 10);

/**
 * Describes the message qdrant.cloud.iam.v1.ListRolesResponse.
 * Use `create(ListRolesResponseSchema)` to create a new message.
 */
export const ListRolesResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 11);

/**
 * Describes the message qdrant.cloud.iam.v1.GetRoleRequest.
 * Use `create(GetRoleRequestSchema)` to create a new message.
 */
export const GetRoleRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 12);

/**
 * Describes the message qdrant.cloud.iam.v1.GetRoleResponse.
 * Use `create(GetRoleResponseSchema)` to create a new message.
 */
export const GetRoleResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 13);

/**
 * Describes the message qdrant.cloud.iam.v1.CreateRoleRequest.
 * Use `create(CreateRoleRequestSchema)` to create a new message.
 */
export const CreateRoleRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 14);

/**
 * Describes the message qdrant.cloud.iam.v1.CreateRoleResponse.
 * Use `create(CreateRoleResponseSchema)` to create a new message.
 */
export const CreateRoleResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 15);

/**
 * Describes the message qdrant.cloud.iam.v1.UpdateRoleRequest.
 * Use `create(UpdateRoleRequestSchema)` to create a new message.
 */
export const UpdateRoleRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 16);

/**
 * Describes the message qdrant.cloud.iam.v1.UpdateRoleResponse.
 * Use `create(UpdateRoleResponseSchema)` to create a new message.
 */
export const UpdateRoleResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 17);

/**
 * Describes the message qdrant.cloud.iam.v1.DeleteRoleRequest.
 * Use `create(DeleteRoleRequestSchema)` to create a new message.
 */
export const DeleteRoleRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 18);

/**
 * Describes the message qdrant.cloud.iam.v1.DeleteRoleResponse.
 * Use `create(DeleteRoleResponseSchema)` to create a new message.
 */
export const DeleteRoleResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 19);

/**
 * Describes the message qdrant.cloud.iam.v1.ListEffectivePermissionsRequest.
 * Use `create(ListEffectivePermissionsRequestSchema)` to create a new message.
 */
export const ListEffectivePermissionsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 20);

/**
 * Describes the message qdrant.cloud.iam.v1.ListEffectivePermissionsResponse.
 * Use `create(ListEffectivePermissionsResponseSchema)` to create a new message.
 */
export const ListEffectivePermissionsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 21);

/**
 * Describes the message qdrant.cloud.iam.v1.AssignUserRolesRequest.
 * Use `create(AssignUserRolesRequestSchema)` to create a new message.
 */
export const AssignUserRolesRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 22);

/**
 * Describes the message qdrant.cloud.iam.v1.AssignUserRolesResponse.
 * Use `create(AssignUserRolesResponseSchema)` to create a new message.
 */
export const AssignUserRolesResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 23);

/**
 * Describes the message qdrant.cloud.iam.v1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 24);

/**
 * Describes the message qdrant.cloud.iam.v1.Role.
 * Use `create(RoleSchema)` to create a new message.
 */
export const RoleSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_iam_v1_iam, 25);

/**
 * Describes the enum qdrant.cloud.iam.v1.UserStatus.
 */
export const UserStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_iam_v1_iam, 0);

/**
 * UserStatus defines the possible statuses of a user.
 *
 * @generated from enum qdrant.cloud.iam.v1.UserStatus
 */
export const UserStatus = /*@__PURE__*/
  tsEnum(UserStatusSchema);

/**
 * Describes the enum qdrant.cloud.iam.v1.LegalDocumentType.
 */
export const LegalDocumentTypeSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_iam_v1_iam, 1);

/**
 * LegalDocumentType specifies the type of a legal document.
 *
 * @generated from enum qdrant.cloud.iam.v1.LegalDocumentType
 */
export const LegalDocumentType = /*@__PURE__*/
  tsEnum(LegalDocumentTypeSchema);

/**
 * Describes the enum qdrant.cloud.iam.v1.UserConsentAction.
 */
export const UserConsentActionSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_iam_v1_iam, 2);

/**
 * UserConsentAction specifies the action taken by a user regarding a consent.
 *
 * @generated from enum qdrant.cloud.iam.v1.UserConsentAction
 */
export const UserConsentAction = /*@__PURE__*/
  tsEnum(UserConsentActionSchema);

/**
 * Describes the enum qdrant.cloud.iam.v1.RoleType.
 */
export const RoleTypeSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_iam_v1_iam, 3);

/**
 * RoleType specified the type of the role
 *
 * @generated from enum qdrant.cloud.iam.v1.RoleType
 */
export const RoleType = /*@__PURE__*/
  tsEnum(RoleTypeSchema);

/**
 * IAMService is the API used to configure IAM (identity and access management) objects..
 *
 * @generated from service qdrant.cloud.iam.v1.IAMService
 */
export const IAMService = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_iam_v1_iam, 0);

