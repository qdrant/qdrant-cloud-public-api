// @generated by protoc-gen-connect-query v2.1.0 with parameter "target=js+dts,import_extension=js"
// @generated from file qdrant/cloud/cluster/v1/cluster.proto (package qdrant.cloud.cluster.v1, syntax proto3)
/* eslint-disable */

import { ClusterService } from "./cluster_pb.js";

/**
 * Lists all clusters in the account identified by the given ID.
 * Required permissions:
 * - read:clusters
 *
 * @generated from rpc qdrant.cloud.cluster.v1.ClusterService.ListClusters
 */
export const listClusters = ClusterService.method.listClusters;

/**
 * Gets a cluster in the account identified by the given ID.
 * Required permissions:
 * - read:clusters
 *
 * @generated from rpc qdrant.cloud.cluster.v1.ClusterService.GetCluster
 */
export const getCluster = ClusterService.method.getCluster;

/**
 * Creates a cluster in the account identified by the given ID.
 * Required permissions:
 * - write:clusters
 *
 * @generated from rpc qdrant.cloud.cluster.v1.ClusterService.CreateCluster
 */
export const createCluster = ClusterService.method.createCluster;

/**
 * Updates a cluster in the account identified by the given ID.
 * Required permissions:
 * - write:clusters
 *
 * @generated from rpc qdrant.cloud.cluster.v1.ClusterService.UpdateCluster
 */
export const updateCluster = ClusterService.method.updateCluster;

/**
 * Deletes a cluster in the account identified by the given ID.
 * Required permissions:
 * - delete:clusters
 *
 * @generated from rpc qdrant.cloud.cluster.v1.ClusterService.DeleteCluster
 */
export const deleteCluster = ClusterService.method.deleteCluster;

/**
 * Restarts a cluster in the account identified by the given ID.
 * Required permissions:
 * - write:clusters
 *
 * @generated from rpc qdrant.cloud.cluster.v1.ClusterService.RestartCluster
 */
export const restartCluster = ClusterService.method.restartCluster;

/**
 * Suspends a cluster in the account identified by the given ID.
 * Required permissions:
 * - write:clusters
 *
 * @generated from rpc qdrant.cloud.cluster.v1.ClusterService.SuspendCluster
 */
export const suspendCluster = ClusterService.method.suspendCluster;

/**
 * Suggests a unique and human-friendly name for a new cluster in the specified account.
 * This can be used by clients to pre-fill the name field when creating a new cluster.
 * Required permissions:
 * - None (authenticated only)
 *
 * @generated from rpc qdrant.cloud.cluster.v1.ClusterService.SuggestClusterName
 */
export const suggestClusterName = ClusterService.method.suggestClusterName;

/**
 * Lists all qdrant releases in the account identified by the given ID.
 * Optional a cluster ID can be provided, the list will return the options to update to only.
 * Required permissions:
 * - read:clusters
 *
 * @generated from rpc qdrant.cloud.cluster.v1.ClusterService.ListQdrantReleases
 */
export const listQdrantReleases = ClusterService.method.listQdrantReleases;
