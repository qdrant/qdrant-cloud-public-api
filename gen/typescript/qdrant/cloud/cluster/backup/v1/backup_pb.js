// @generated by protoc-gen-es v2.7.0 with parameter "target=js+dts,import_extension=js,valid_types=protovalidate_required"
// @generated from file qdrant/cloud/cluster/backup/v1/backup.proto (package qdrant.cloud.cluster.backup.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../../../../google/api/annotations_pb.js";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../../common/v1/common_pb.js";

/**
 * Describes the file qdrant/cloud/cluster/backup/v1/backup.proto.
 */
export const file_qdrant_cloud_cluster_backup_v1_backup = /*@__PURE__*/
  fileDesc("", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_duration, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common]);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.ListBackupsRequest.
 * Use `create(ListBackupsRequestSchema)` to create a new message.
 */
export const ListBackupsRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 0);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.ListBackupsResponse.
 * Use `create(ListBackupsResponseSchema)` to create a new message.
 */
export const ListBackupsResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 1);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.GetBackupRequest.
 * Use `create(GetBackupRequestSchema)` to create a new message.
 */
export const GetBackupRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 2);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.GetBackupResponse.
 * Use `create(GetBackupResponseSchema)` to create a new message.
 */
export const GetBackupResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 3);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.CreateBackupRequest.
 * Use `create(CreateBackupRequestSchema)` to create a new message.
 */
export const CreateBackupRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 4);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.CreateBackupResponse.
 * Use `create(CreateBackupResponseSchema)` to create a new message.
 */
export const CreateBackupResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 5);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.DeleteBackupRequest.
 * Use `create(DeleteBackupRequestSchema)` to create a new message.
 */
export const DeleteBackupRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 6);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.DeleteBackupResponse.
 * Use `create(DeleteBackupResponseSchema)` to create a new message.
 */
export const DeleteBackupResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 7);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.ListBackupRestoresRequest.
 * Use `create(ListBackupRestoresRequestSchema)` to create a new message.
 */
export const ListBackupRestoresRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 8);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.ListBackupRestoresResponse.
 * Use `create(ListBackupRestoresResponseSchema)` to create a new message.
 */
export const ListBackupRestoresResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 9);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.RestoreBackupRequest.
 * Use `create(RestoreBackupRequestSchema)` to create a new message.
 */
export const RestoreBackupRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 10);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.RestoreBackupResponse.
 * Use `create(RestoreBackupResponseSchema)` to create a new message.
 */
export const RestoreBackupResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 11);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.ListBackupSchedulesRequest.
 * Use `create(ListBackupSchedulesRequestSchema)` to create a new message.
 */
export const ListBackupSchedulesRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 12);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.ListBackupSchedulesResponse.
 * Use `create(ListBackupSchedulesResponseSchema)` to create a new message.
 */
export const ListBackupSchedulesResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 13);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.GetBackupScheduleRequest.
 * Use `create(GetBackupScheduleRequestSchema)` to create a new message.
 */
export const GetBackupScheduleRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 14);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.GetBackupScheduleResponse.
 * Use `create(GetBackupScheduleResponseSchema)` to create a new message.
 */
export const GetBackupScheduleResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 15);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.CreateBackupScheduleRequest.
 * Use `create(CreateBackupScheduleRequestSchema)` to create a new message.
 */
export const CreateBackupScheduleRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 16);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.CreateBackupScheduleResponse.
 * Use `create(CreateBackupScheduleResponseSchema)` to create a new message.
 */
export const CreateBackupScheduleResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 17);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.UpdateBackupScheduleRequest.
 * Use `create(UpdateBackupScheduleRequestSchema)` to create a new message.
 */
export const UpdateBackupScheduleRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 18);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.UpdateBackupScheduleResponse.
 * Use `create(UpdateBackupScheduleResponseSchema)` to create a new message.
 */
export const UpdateBackupScheduleResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 19);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.DeleteBackupScheduleRequest.
 * Use `create(DeleteBackupScheduleRequestSchema)` to create a new message.
 */
export const DeleteBackupScheduleRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 20);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.DeleteBackupScheduleResponse.
 * Use `create(DeleteBackupScheduleResponseSchema)` to create a new message.
 */
export const DeleteBackupScheduleResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 21);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.Backup.
 * Use `create(BackupSchema)` to create a new message.
 */
export const BackupSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 22);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.BackupSchedule.
 * Use `create(BackupScheduleSchema)` to create a new message.
 */
export const BackupScheduleSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 23);

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.BackupRestore.
 * Use `create(BackupRestoreSchema)` to create a new message.
 */
export const BackupRestoreSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_backup_v1_backup, 24);

/**
 * Describes the enum qdrant.cloud.cluster.backup.v1.BackupStatus.
 */
export const BackupStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_cluster_backup_v1_backup, 0);

/**
 * BackupStatus represents the current status of a backup operation.
 *
 * @generated from enum qdrant.cloud.cluster.backup.v1.BackupStatus
 */
export const BackupStatus = /*@__PURE__*/
  tsEnum(BackupStatusSchema);

/**
 * Describes the enum qdrant.cloud.cluster.backup.v1.BackupScheduleStatus.
 */
export const BackupScheduleStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_cluster_backup_v1_backup, 1);

/**
 * BackupScheduleStatus represents the current status of a backup schedule.
 *
 * @generated from enum qdrant.cloud.cluster.backup.v1.BackupScheduleStatus
 */
export const BackupScheduleStatus = /*@__PURE__*/
  tsEnum(BackupScheduleStatusSchema);

/**
 * Describes the enum qdrant.cloud.cluster.backup.v1.BackupRestoreStatus.
 */
export const BackupRestoreStatusSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_cluster_backup_v1_backup, 2);

/**
 * BackupRestoreStatus represents the current status of a backup restore.
 *
 * @generated from enum qdrant.cloud.cluster.backup.v1.BackupRestoreStatus
 */
export const BackupRestoreStatus = /*@__PURE__*/
  tsEnum(BackupRestoreStatusSchema);

/**
 * BackupService is the API used to configure backup objects.
 *
 * @generated from service qdrant.cloud.cluster.backup.v1.BackupService
 */
export const BackupService = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_cluster_backup_v1_backup, 0);

