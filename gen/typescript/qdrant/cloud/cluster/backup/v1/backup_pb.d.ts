// @generated by protoc-gen-es v2.7.0 with parameter "target=js+dts,import_extension=js,valid_types=protovalidate_required"
// @generated from file qdrant/cloud/cluster/backup/v1/backup.proto (package qdrant.cloud.cluster.backup.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file qdrant/cloud/cluster/backup/v1/backup.proto.
 */
export declare const file_qdrant_cloud_cluster_backup_v1_backup: GenFile;

/**
 * ListBackupsRequest is the request for the ListBackups function
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.ListBackupsRequest
 */
export declare type ListBackupsRequest = Message<"qdrant.cloud.cluster.backup.v1.ListBackupsRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier of the cluster (in GUID format).
   * When this field is set, only backups that belong to the cluster are returned.
   *
   * @generated from field: optional string cluster_id = 2;
   */
  clusterId?: string;

  /**
   * The identifier of the schedule (in GUID format).
   * When this field is set, only backups triggered by the backup schedule are returned.
   *
   * @generated from field: optional string backup_schedule_id = 3;
   */
  backupScheduleId?: string;

  /**
   * Maximum number of items to return.
   * If not specified, all items are returned.
   *
   * @generated from field: optional int32 page_size = 10;
   */
  pageSize?: number;

  /**
   * A page token, received from a previous call.
   * Provide this to retrieve the subsequent page.
   * When paginating, all other parameters provided to the request must match
   * the call that provided the page token.
   *
   * @generated from field: optional string page_token = 11;
   */
  pageToken?: string;
};

export declare type ListBackupsRequestValid = ListBackupsRequest;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.ListBackupsRequest.
 * Use `create(ListBackupsRequestSchema)` to create a new message.
 */
export declare const ListBackupsRequestSchema: GenMessage<ListBackupsRequest, {validType: ListBackupsRequestValid}>;

/**
 * ListBackupsResponse is the response from the ListBackups function
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.ListBackupsResponse
 */
export declare type ListBackupsResponse = Message<"qdrant.cloud.cluster.backup.v1.ListBackupsResponse"> & {
  /**
   * The actual backups in this list.
   * When pagination is used it contains a single page only, not all items.
   *
   * @generated from field: repeated qdrant.cloud.cluster.backup.v1.Backup items = 1;
   */
  items: Backup[];

  /**
   * The total number of items available (useful in relation with pagination).
   * This field is fill out when pagination is used (aka in the request `page_size` was provided).
   *
   * @generated from field: optional int32 total_count = 10;
   */
  totalCount?: number;

  /**
   * A token that can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   *
   * @generated from field: optional string next_page_token = 11;
   */
  nextPageToken?: string;
};

export declare type ListBackupsResponseValid = ListBackupsResponse;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.ListBackupsResponse.
 * Use `create(ListBackupsResponseSchema)` to create a new message.
 */
export declare const ListBackupsResponseSchema: GenMessage<ListBackupsResponse, {validType: ListBackupsResponseValid}>;

/**
 * GetBackupRequest is the request for the GetBackup function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.GetBackupRequest
 */
export declare type GetBackupRequest = Message<"qdrant.cloud.cluster.backup.v1.GetBackupRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier of the backup (in GUID format).
   * This is a required field.
   *
   * @generated from field: string backup_id = 2;
   */
  backupId: string;
};

export declare type GetBackupRequestValid = GetBackupRequest;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.GetBackupRequest.
 * Use `create(GetBackupRequestSchema)` to create a new message.
 */
export declare const GetBackupRequestSchema: GenMessage<GetBackupRequest, {validType: GetBackupRequestValid}>;

/**
 * GetBackupResponse is the response from the GetBackup function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.GetBackupResponse
 */
export declare type GetBackupResponse = Message<"qdrant.cloud.cluster.backup.v1.GetBackupResponse"> & {
  /**
   * The actual backup.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.Backup backup = 1;
   */
  backup?: Backup;
};

/**
 * GetBackupResponse is the response from the GetBackup function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.GetBackupResponse
 */
export declare type GetBackupResponseValid = Message<"qdrant.cloud.cluster.backup.v1.GetBackupResponse"> & {
  /**
   * The actual backup.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.Backup backup = 1;
   */
  backup: BackupValid;
};

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.GetBackupResponse.
 * Use `create(GetBackupResponseSchema)` to create a new message.
 */
export declare const GetBackupResponseSchema: GenMessage<GetBackupResponse, {validType: GetBackupResponseValid}>;

/**
 * CreateBackupRequest is the request for the CreateBackup function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.CreateBackupRequest
 */
export declare type CreateBackupRequest = Message<"qdrant.cloud.cluster.backup.v1.CreateBackupRequest"> & {
  /**
   * The actual backup.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.Backup backup = 1;
   */
  backup?: Backup;
};

/**
 * CreateBackupRequest is the request for the CreateBackup function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.CreateBackupRequest
 */
export declare type CreateBackupRequestValid = Message<"qdrant.cloud.cluster.backup.v1.CreateBackupRequest"> & {
  /**
   * The actual backup.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.Backup backup = 1;
   */
  backup: BackupValid;
};

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.CreateBackupRequest.
 * Use `create(CreateBackupRequestSchema)` to create a new message.
 */
export declare const CreateBackupRequestSchema: GenMessage<CreateBackupRequest, {validType: CreateBackupRequestValid}>;

/**
 * CreateBackupResponse is the response from the CreateBackup function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.CreateBackupResponse
 */
export declare type CreateBackupResponse = Message<"qdrant.cloud.cluster.backup.v1.CreateBackupResponse"> & {
  /**
   * The actual backup.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.Backup backup = 1;
   */
  backup?: Backup;
};

/**
 * CreateBackupResponse is the response from the CreateBackup function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.CreateBackupResponse
 */
export declare type CreateBackupResponseValid = Message<"qdrant.cloud.cluster.backup.v1.CreateBackupResponse"> & {
  /**
   * The actual backup.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.Backup backup = 1;
   */
  backup: BackupValid;
};

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.CreateBackupResponse.
 * Use `create(CreateBackupResponseSchema)` to create a new message.
 */
export declare const CreateBackupResponseSchema: GenMessage<CreateBackupResponse, {validType: CreateBackupResponseValid}>;

/**
 * DeleteBackupRequest is the request for the DeleteBackup function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.DeleteBackupRequest
 */
export declare type DeleteBackupRequest = Message<"qdrant.cloud.cluster.backup.v1.DeleteBackupRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier of the backup (in GUID format).
   * This is a required field.
   *
   * @generated from field: string backup_id = 2;
   */
  backupId: string;
};

export declare type DeleteBackupRequestValid = DeleteBackupRequest;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.DeleteBackupRequest.
 * Use `create(DeleteBackupRequestSchema)` to create a new message.
 */
export declare const DeleteBackupRequestSchema: GenMessage<DeleteBackupRequest, {validType: DeleteBackupRequestValid}>;

/**
 * DeleteBackupResponse is the response from the DeleteBackup function.
 *
 * Empty
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.DeleteBackupResponse
 */
export declare type DeleteBackupResponse = Message<"qdrant.cloud.cluster.backup.v1.DeleteBackupResponse"> & {
};

export declare type DeleteBackupResponseValid = DeleteBackupResponse;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.DeleteBackupResponse.
 * Use `create(DeleteBackupResponseSchema)` to create a new message.
 */
export declare const DeleteBackupResponseSchema: GenMessage<DeleteBackupResponse, {validType: DeleteBackupResponseValid}>;

/**
 * ListBackupRestoresRequest is the request for the ListBackupRestores function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.ListBackupRestoresRequest
 */
export declare type ListBackupRestoresRequest = Message<"qdrant.cloud.cluster.backup.v1.ListBackupRestoresRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier of the cluster (in GUID format).
   * When this field is set, only backup restores that belong to the cluster are returned.
   *
   * @generated from field: optional string cluster_id = 2;
   */
  clusterId?: string;
};

export declare type ListBackupRestoresRequestValid = ListBackupRestoresRequest;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.ListBackupRestoresRequest.
 * Use `create(ListBackupRestoresRequestSchema)` to create a new message.
 */
export declare const ListBackupRestoresRequestSchema: GenMessage<ListBackupRestoresRequest, {validType: ListBackupRestoresRequestValid}>;

/**
 * ListBackupRestoresResponse is the response from the ListBackupRestores function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.ListBackupRestoresResponse
 */
export declare type ListBackupRestoresResponse = Message<"qdrant.cloud.cluster.backup.v1.ListBackupRestoresResponse"> & {
  /**
   * The actual backup restores in this list.
   *
   * @generated from field: repeated qdrant.cloud.cluster.backup.v1.BackupRestore items = 1;
   */
  items: BackupRestore[];
};

export declare type ListBackupRestoresResponseValid = ListBackupRestoresResponse;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.ListBackupRestoresResponse.
 * Use `create(ListBackupRestoresResponseSchema)` to create a new message.
 */
export declare const ListBackupRestoresResponseSchema: GenMessage<ListBackupRestoresResponse, {validType: ListBackupRestoresResponseValid}>;

/**
 * RestoreBackupRequest is the request for the RestoreBackup function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.RestoreBackupRequest
 */
export declare type RestoreBackupRequest = Message<"qdrant.cloud.cluster.backup.v1.RestoreBackupRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier of the backup (in GUID format).
   * This is a required field.
   *
   * @generated from field: string backup_id = 2;
   */
  backupId: string;
};

export declare type RestoreBackupRequestValid = RestoreBackupRequest;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.RestoreBackupRequest.
 * Use `create(RestoreBackupRequestSchema)` to create a new message.
 */
export declare const RestoreBackupRequestSchema: GenMessage<RestoreBackupRequest, {validType: RestoreBackupRequestValid}>;

/**
 * RestoreBackupResponse is the response from the RestoreBackup function.
 *
 * Empty
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.RestoreBackupResponse
 */
export declare type RestoreBackupResponse = Message<"qdrant.cloud.cluster.backup.v1.RestoreBackupResponse"> & {
};

export declare type RestoreBackupResponseValid = RestoreBackupResponse;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.RestoreBackupResponse.
 * Use `create(RestoreBackupResponseSchema)` to create a new message.
 */
export declare const RestoreBackupResponseSchema: GenMessage<RestoreBackupResponse, {validType: RestoreBackupResponseValid}>;

/**
 * ListBackupSchedulesRequest is the request for the ListBackupSchedules function
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.ListBackupSchedulesRequest
 */
export declare type ListBackupSchedulesRequest = Message<"qdrant.cloud.cluster.backup.v1.ListBackupSchedulesRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier of the cluster (in GUID format).
   * When this field is set, only backup schedules that belong to the cluster are returned.
   *
   * @generated from field: optional string cluster_id = 2;
   */
  clusterId?: string;
};

export declare type ListBackupSchedulesRequestValid = ListBackupSchedulesRequest;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.ListBackupSchedulesRequest.
 * Use `create(ListBackupSchedulesRequestSchema)` to create a new message.
 */
export declare const ListBackupSchedulesRequestSchema: GenMessage<ListBackupSchedulesRequest, {validType: ListBackupSchedulesRequestValid}>;

/**
 * ListBackupsResponse is the response from the ListBackups function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.ListBackupSchedulesResponse
 */
export declare type ListBackupSchedulesResponse = Message<"qdrant.cloud.cluster.backup.v1.ListBackupSchedulesResponse"> & {
  /**
   * The actual backup schedules in this list.
   *
   * @generated from field: repeated qdrant.cloud.cluster.backup.v1.BackupSchedule items = 1;
   */
  items: BackupSchedule[];
};

export declare type ListBackupSchedulesResponseValid = ListBackupSchedulesResponse;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.ListBackupSchedulesResponse.
 * Use `create(ListBackupSchedulesResponseSchema)` to create a new message.
 */
export declare const ListBackupSchedulesResponseSchema: GenMessage<ListBackupSchedulesResponse, {validType: ListBackupSchedulesResponseValid}>;

/**
 * GetBackupScheduleRequest is the request for the GetBackupSchedule function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.GetBackupScheduleRequest
 */
export declare type GetBackupScheduleRequest = Message<"qdrant.cloud.cluster.backup.v1.GetBackupScheduleRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier for the cluster (in GUID format).
   * This cluster should be part of the provided account.
   * This is a required field.
   *
   * @generated from field: string cluster_id = 2;
   */
  clusterId: string;

  /**
   * The identifier for the backup schedule (in GUID format).
   * This backup schedule should be part of the provided cluster and account.
   * This is a required field.
   *
   * @generated from field: string backup_schedule_id = 3;
   */
  backupScheduleId: string;
};

export declare type GetBackupScheduleRequestValid = GetBackupScheduleRequest;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.GetBackupScheduleRequest.
 * Use `create(GetBackupScheduleRequestSchema)` to create a new message.
 */
export declare const GetBackupScheduleRequestSchema: GenMessage<GetBackupScheduleRequest, {validType: GetBackupScheduleRequestValid}>;

/**
 * GetBackupScheduleResponse is the response from the GetBackupSchedule function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.GetBackupScheduleResponse
 */
export declare type GetBackupScheduleResponse = Message<"qdrant.cloud.cluster.backup.v1.GetBackupScheduleResponse"> & {
  /**
   * The actual cluster
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.BackupSchedule backup_schedule = 1;
   */
  backupSchedule?: BackupSchedule;
};

/**
 * GetBackupScheduleResponse is the response from the GetBackupSchedule function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.GetBackupScheduleResponse
 */
export declare type GetBackupScheduleResponseValid = Message<"qdrant.cloud.cluster.backup.v1.GetBackupScheduleResponse"> & {
  /**
   * The actual cluster
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.BackupSchedule backup_schedule = 1;
   */
  backupSchedule: BackupScheduleValid;
};

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.GetBackupScheduleResponse.
 * Use `create(GetBackupScheduleResponseSchema)` to create a new message.
 */
export declare const GetBackupScheduleResponseSchema: GenMessage<GetBackupScheduleResponse, {validType: GetBackupScheduleResponseValid}>;

/**
 * CreateBackupScheduleRequest is the request for the CreateBackupSchedule function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.CreateBackupScheduleRequest
 */
export declare type CreateBackupScheduleRequest = Message<"qdrant.cloud.cluster.backup.v1.CreateBackupScheduleRequest"> & {
  /**
   * The actual backup schedule.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.BackupSchedule backup_schedule = 1;
   */
  backupSchedule?: BackupSchedule;
};

/**
 * CreateBackupScheduleRequest is the request for the CreateBackupSchedule function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.CreateBackupScheduleRequest
 */
export declare type CreateBackupScheduleRequestValid = Message<"qdrant.cloud.cluster.backup.v1.CreateBackupScheduleRequest"> & {
  /**
   * The actual backup schedule.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.BackupSchedule backup_schedule = 1;
   */
  backupSchedule: BackupScheduleValid;
};

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.CreateBackupScheduleRequest.
 * Use `create(CreateBackupScheduleRequestSchema)` to create a new message.
 */
export declare const CreateBackupScheduleRequestSchema: GenMessage<CreateBackupScheduleRequest, {validType: CreateBackupScheduleRequestValid}>;

/**
 * CreateBackupScheduleResponse is the response from the CreateBackupSchedule function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.CreateBackupScheduleResponse
 */
export declare type CreateBackupScheduleResponse = Message<"qdrant.cloud.cluster.backup.v1.CreateBackupScheduleResponse"> & {
  /**
   * The actual backup schedule.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.BackupSchedule backup_schedule = 1;
   */
  backupSchedule?: BackupSchedule;
};

/**
 * CreateBackupScheduleResponse is the response from the CreateBackupSchedule function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.CreateBackupScheduleResponse
 */
export declare type CreateBackupScheduleResponseValid = Message<"qdrant.cloud.cluster.backup.v1.CreateBackupScheduleResponse"> & {
  /**
   * The actual backup schedule.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.BackupSchedule backup_schedule = 1;
   */
  backupSchedule: BackupScheduleValid;
};

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.CreateBackupScheduleResponse.
 * Use `create(CreateBackupScheduleResponseSchema)` to create a new message.
 */
export declare const CreateBackupScheduleResponseSchema: GenMessage<CreateBackupScheduleResponse, {validType: CreateBackupScheduleResponseValid}>;

/**
 * UpdateBackupScheduleRequest is the request for the UpdateBackupSchedule function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.UpdateBackupScheduleRequest
 */
export declare type UpdateBackupScheduleRequest = Message<"qdrant.cloud.cluster.backup.v1.UpdateBackupScheduleRequest"> & {
  /**
   * The actual backup schedule.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.BackupSchedule backup_schedule = 1;
   */
  backupSchedule?: BackupSchedule;
};

/**
 * UpdateBackupScheduleRequest is the request for the UpdateBackupSchedule function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.UpdateBackupScheduleRequest
 */
export declare type UpdateBackupScheduleRequestValid = Message<"qdrant.cloud.cluster.backup.v1.UpdateBackupScheduleRequest"> & {
  /**
   * The actual backup schedule.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.BackupSchedule backup_schedule = 1;
   */
  backupSchedule: BackupScheduleValid;
};

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.UpdateBackupScheduleRequest.
 * Use `create(UpdateBackupScheduleRequestSchema)` to create a new message.
 */
export declare const UpdateBackupScheduleRequestSchema: GenMessage<UpdateBackupScheduleRequest, {validType: UpdateBackupScheduleRequestValid}>;

/**
 * UpdateBackupScheduleResponse is the response from the UpdateBackupSchedule function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.UpdateBackupScheduleResponse
 */
export declare type UpdateBackupScheduleResponse = Message<"qdrant.cloud.cluster.backup.v1.UpdateBackupScheduleResponse"> & {
  /**
   * The actual backup schedule.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.BackupSchedule backup_schedule = 1;
   */
  backupSchedule?: BackupSchedule;
};

/**
 * UpdateBackupScheduleResponse is the response from the UpdateBackupSchedule function.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.UpdateBackupScheduleResponse
 */
export declare type UpdateBackupScheduleResponseValid = Message<"qdrant.cloud.cluster.backup.v1.UpdateBackupScheduleResponse"> & {
  /**
   * The actual backup schedule.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.BackupSchedule backup_schedule = 1;
   */
  backupSchedule: BackupScheduleValid;
};

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.UpdateBackupScheduleResponse.
 * Use `create(UpdateBackupScheduleResponseSchema)` to create a new message.
 */
export declare const UpdateBackupScheduleResponseSchema: GenMessage<UpdateBackupScheduleResponse, {validType: UpdateBackupScheduleResponseValid}>;

/**
 * DeleteBackupScheduleRequest is the request for the DeleteBackupSchedule function
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.DeleteBackupScheduleRequest
 */
export declare type DeleteBackupScheduleRequest = Message<"qdrant.cloud.cluster.backup.v1.DeleteBackupScheduleRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier for the backup schedule (in GUID format).
   * This backup schedule should be part of the provided account.
   * This is a required field.
   *
   * @generated from field: string backup_schedule_id = 2;
   */
  backupScheduleId: string;

  /**
   * If set, the backups generated by this backup schedule will be deleted as well.
   *
   * @generated from field: optional bool delete_backups = 3;
   */
  deleteBackups?: boolean;
};

export declare type DeleteBackupScheduleRequestValid = DeleteBackupScheduleRequest;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.DeleteBackupScheduleRequest.
 * Use `create(DeleteBackupScheduleRequestSchema)` to create a new message.
 */
export declare const DeleteBackupScheduleRequestSchema: GenMessage<DeleteBackupScheduleRequest, {validType: DeleteBackupScheduleRequestValid}>;

/**
 * DeleteBackupScheduleResponse is the response from the DeleteBackupSchedule function.
 *
 * Empty
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.DeleteBackupScheduleResponse
 */
export declare type DeleteBackupScheduleResponse = Message<"qdrant.cloud.cluster.backup.v1.DeleteBackupScheduleResponse"> & {
};

export declare type DeleteBackupScheduleResponseValid = DeleteBackupScheduleResponse;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.DeleteBackupScheduleResponse.
 * Use `create(DeleteBackupScheduleResponseSchema)` to create a new message.
 */
export declare const DeleteBackupScheduleResponseSchema: GenMessage<DeleteBackupScheduleResponse, {validType: DeleteBackupScheduleResponseValid}>;

/**
 * A Backup represents a backup of a Qdrant database.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.Backup
 */
export declare type Backup = Message<"qdrant.cloud.cluster.backup.v1.Backup"> & {
  /**
   * Unique identifier for the backup (in GUID format).
   * This is a read-only field and will be available after a backup is created.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The timestamp when the backup was created.
   * This is a read-only field and will be available after a backup is created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 3;
   */
  accountId: string;

  /**
   * The identifier of the cluster (in GUID format).
   * This is a required field.
   *
   * @generated from field: string cluster_id = 4;
   */
  clusterId: string;

  /**
   * The name of the backup.
   * This is a read-only field and will be available after a backup is created.
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * The current status of the backup.
   * This is a read-only field and will be set after CreateBackup is called.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.BackupStatus status = 6;
   */
  status: BackupStatus;

  /**
   * The timestamp when the backup was deleted (or when deletion started).
   * This is a read-only field and will be set after DeleteBackup is called.
   *
   * @generated from field: google.protobuf.Timestamp deleted_at = 7;
   */
  deletedAt?: Timestamp;

  /**
   * The total time taken to generate the backup. This is a read-only field and
   * will be available after the backup process is completed, regardless of
   * whether it succeeded or failed.
   *
   * @generated from field: google.protobuf.Duration backup_duration = 8;
   */
  backupDuration?: Duration;

  /**
   * The identifier of the backup schedule (in GUID format).
   * This is a read-only field and will be present if the backup was created by a backup schedule.
   *
   * @generated from field: optional string backup_schedule_id = 9;
   */
  backupScheduleId?: string;
};

export declare type BackupValid = Backup;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.Backup.
 * Use `create(BackupSchema)` to create a new message.
 */
export declare const BackupSchema: GenMessage<Backup, {validType: BackupValid}>;

/**
 * A BackupSchedule represents a recurring schedule for creating backups.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.BackupSchedule
 */
export declare type BackupSchedule = Message<"qdrant.cloud.cluster.backup.v1.BackupSchedule"> & {
  /**
   * Unique identifier for the backup schedule (in GUID format).
   * This is a read-only field and will be available after a backup schedule is created.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The timestamp when the backup schedule was created.
   * This is a read-only field and will be available after a backup schedule is created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 3;
   */
  accountId: string;

  /**
   * The identifier of the cluster (in GUID format).
   * This is a required field.
   *
   * @generated from field: string cluster_id = 4;
   */
  clusterId: string;

  /**
   * The schedule that determines when the backup will be created.
   * This field follows the standard crontab format: https://en.wikipedia.org/wiki/Cron#Overview
   * This is a required field.
   *
   * @generated from field: string schedule = 5;
   */
  schedule: string;

  /**
   * The retention period in seconds for the backup. After that period, the backup is deleted from the system.
   * The value should be between 1 day (>= 86400 seconds) and 365 days (<= 31536000 seconds).
   * If the value is unset, backups will be retained indefinitely.
   *
   * @generated from field: optional google.protobuf.Duration retention_period = 6;
   */
  retentionPeriod?: Duration;

  /**
   * The timestamp when the backup schedule was deleted (or when deletion started).
   * This is a read-only field and will be set after DeleteBackupSchedule is called.
   *
   * @generated from field: google.protobuf.Timestamp deleted_at = 7;
   */
  deletedAt?: Timestamp;

  /**
   * The current status of the backup schedule.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.BackupScheduleStatus status = 8;
   */
  status: BackupScheduleStatus;
};

export declare type BackupScheduleValid = BackupSchedule;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.BackupSchedule.
 * Use `create(BackupScheduleSchema)` to create a new message.
 */
export declare const BackupScheduleSchema: GenMessage<BackupSchedule, {validType: BackupScheduleValid}>;

/**
 * A BackupRestore represents the status of a backup restore.
 * All fields in this message are read-only.
 *
 * @generated from message qdrant.cloud.cluster.backup.v1.BackupRestore
 */
export declare type BackupRestore = Message<"qdrant.cloud.cluster.backup.v1.BackupRestore"> & {
  /**
   * Unique identifier for the backup restore (in GUID format).
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The timestamp when the backup restore was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * The identifier of the account (in GUID format).
   *
   * @generated from field: string account_id = 3;
   */
  accountId: string;

  /**
   * The identifier of the cluster (in GUID format).
   *
   * @generated from field: string cluster_id = 4;
   */
  clusterId: string;

  /**
   * The Identifier of the backup (in GUID format).
   *
   * @generated from field: string backup_id = 5;
   */
  backupId: string;

  /**
   * The current status of the backup restore.
   *
   * @generated from field: qdrant.cloud.cluster.backup.v1.BackupRestoreStatus status = 6;
   */
  status: BackupRestoreStatus;

  /**
   * The timestamp when the backup restore was deleted (or when deletion started).
   *
   * @generated from field: google.protobuf.Timestamp deleted_at = 7;
   */
  deletedAt?: Timestamp;
};

export declare type BackupRestoreValid = BackupRestore;

/**
 * Describes the message qdrant.cloud.cluster.backup.v1.BackupRestore.
 * Use `create(BackupRestoreSchema)` to create a new message.
 */
export declare const BackupRestoreSchema: GenMessage<BackupRestore, {validType: BackupRestoreValid}>;

/**
 * BackupStatus represents the current status of a backup operation.
 *
 * @generated from enum qdrant.cloud.cluster.backup.v1.BackupStatus
 */
export enum BackupStatus {
  /**
   * The status is unknown or not specified. This is the default value.
   *
   * @generated from enum value: BACKUP_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The backup is currently in progress.
   *
   * @generated from enum value: BACKUP_STATUS_RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * The backup was skipped or was not started because it has no suitable target.
   *
   * @generated from enum value: BACKUP_STATUS_SKIPPED = 2;
   */
  SKIPPED = 2,

  /**
   * The backup failed to complete successfully.
   *
   * @generated from enum value: BACKUP_STATUS_FAILED = 3;
   */
  FAILED = 3,

  /**
   * The backup completed successfully.
   *
   * @generated from enum value: BACKUP_STATUS_SUCCEEDED = 4;
   */
  SUCCEEDED = 4,

  /**
   * There was an error syncing the backup in the cluster's region.
   *
   * @generated from enum value: BACKUP_STATUS_FAILED_TO_SYNC = 5;
   */
  FAILED_TO_SYNC = 5,

  /**
   * The backup was expected but not found in the cluster's region.
   *
   * @generated from enum value: BACKUP_STATUS_NOT_FOUND = 6;
   */
  NOT_FOUND = 6,
}

/**
 * Describes the enum qdrant.cloud.cluster.backup.v1.BackupStatus.
 */
export declare const BackupStatusSchema: GenEnum<BackupStatus>;

/**
 * BackupScheduleStatus represents the current status of a backup schedule.
 *
 * @generated from enum qdrant.cloud.cluster.backup.v1.BackupScheduleStatus
 */
export enum BackupScheduleStatus {
  /**
   * The status is unknown or not specified. This is the default value.
   *
   * @generated from enum value: BACKUP_SCHEDULE_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The backup schedule is active and functioning correctly.
   *
   * @generated from enum value: BACKUP_SCHEDULE_STATUS_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * There was an error syncing the backup schedule in the cluster's region.
   *
   * @generated from enum value: BACKUP_SCHEDULE_STATUS_FAILED_TO_SYNC = 2;
   */
  FAILED_TO_SYNC = 2,

  /**
   * The backup schedule is missing in the cluster's region.
   *
   * @generated from enum value: BACKUP_SCHEDULE_STATUS_NOT_FOUND = 3;
   */
  NOT_FOUND = 3,

  /**
   * The backup schedule is disabled.
   *
   * @generated from enum value: BACKUP_SCHEDULE_STATUS_DISABLED = 4;
   */
  DISABLED = 4,
}

/**
 * Describes the enum qdrant.cloud.cluster.backup.v1.BackupScheduleStatus.
 */
export declare const BackupScheduleStatusSchema: GenEnum<BackupScheduleStatus>;

/**
 * BackupRestoreStatus represents the current status of a backup restore.
 *
 * @generated from enum qdrant.cloud.cluster.backup.v1.BackupRestoreStatus
 */
export enum BackupRestoreStatus {
  /**
   * The status is unknown or not specified. This is the default value.
   *
   * @generated from enum value: BACKUP_RESTORE_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The backup restore is running.
   *
   * @generated from enum value: BACKUP_RESTORE_STATUS_RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * The backup restore failed to complete successfully.
   *
   * @generated from enum value: BACKUP_RESTORE_STATUS_FAILED = 2;
   */
  FAILED = 2,

  /**
   * The backup restore completed successfully.
   *
   * @generated from enum value: BACKUP_RESTORE_STATUS_SUCCEEDED = 3;
   */
  SUCCEEDED = 3,

  /**
   * There was an error syncing the backup restore in the cluster's region.
   *
   * @generated from enum value: BACKUP_RESTORE_STATUS_FAILED_TO_SYNC = 4;
   */
  FAILED_TO_SYNC = 4,

  /**
   * The backup restore is missing in the cluster's region.
   *
   * @generated from enum value: BACKUP_RESTORE_STATUS_NOT_FOUND = 5;
   */
  NOT_FOUND = 5,

  /**
   * The backup restore is skipped.
   *
   * @generated from enum value: BACKUP_RESTORE_STATUS_SKIPPED = 6;
   */
  SKIPPED = 6,
}

/**
 * Describes the enum qdrant.cloud.cluster.backup.v1.BackupRestoreStatus.
 */
export declare const BackupRestoreStatusSchema: GenEnum<BackupRestoreStatus>;

/**
 * BackupService is the API used to configure backup objects.
 *
 * @generated from service qdrant.cloud.cluster.backup.v1.BackupService
 */
export declare const BackupService: GenService<{
  /**
   * Lists all backups in the account identified by the given ID.
   * Required permissions:
   * - read:backups
   *
   * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.ListBackups
   */
  listBackups: {
    methodKind: "unary";
    input: typeof ListBackupsRequestSchema;
    output: typeof ListBackupsResponseSchema;
  },
  /**
   * Gets a backup in the account identified by the given ID.
   * Required permissions:
   * - read:backups
   *
   * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.GetBackup
   */
  getBackup: {
    methodKind: "unary";
    input: typeof GetBackupRequestSchema;
    output: typeof GetBackupResponseSchema;
  },
  /**
   * Creates a backup for the cluster identified by the given ID.
   * Required permissions:
   * - write:backups
   *
   * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.CreateBackup
   */
  createBackup: {
    methodKind: "unary";
    input: typeof CreateBackupRequestSchema;
    output: typeof CreateBackupResponseSchema;
  },
  /**
   * Deletes a backup in the account identified by the given ID.
   * Required permissions:
   * - delete:backups
   *
   * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.DeleteBackup
   */
  deleteBackup: {
    methodKind: "unary";
    input: typeof DeleteBackupRequestSchema;
    output: typeof DeleteBackupResponseSchema;
  },
  /**
   * Lists all backup restores in the account identified by the given ID.
   * Required permissions:
   * - read:backups
   *
   * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.ListBackupRestores
   */
  listBackupRestores: {
    methodKind: "unary";
    input: typeof ListBackupRestoresRequestSchema;
    output: typeof ListBackupRestoresResponseSchema;
  },
  /**
   * Restores a backup in the account identified by the given ID.
   * Required permissions:
   * - admin:backups
   *
   * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.RestoreBackup
   */
  restoreBackup: {
    methodKind: "unary";
    input: typeof RestoreBackupRequestSchema;
    output: typeof RestoreBackupResponseSchema;
  },
  /**
   * Lists all backup schedules in the account identified by the given ID.
   * Required permissions:
   * - read:backup_schedules
   *
   * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.ListBackupSchedules
   */
  listBackupSchedules: {
    methodKind: "unary";
    input: typeof ListBackupSchedulesRequestSchema;
    output: typeof ListBackupSchedulesResponseSchema;
  },
  /**
   * Gets a backup schedule in the account identified by the given ID.
   * Required permissions:
   * - read:backup_schedules
   *
   * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.GetBackupSchedule
   */
  getBackupSchedule: {
    methodKind: "unary";
    input: typeof GetBackupScheduleRequestSchema;
    output: typeof GetBackupScheduleResponseSchema;
  },
  /**
   * Creates a backup schedule in the account identified by the given ID.
   * Required permissions:
   * - write:backup_schedules
   *
   * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.CreateBackupSchedule
   */
  createBackupSchedule: {
    methodKind: "unary";
    input: typeof CreateBackupScheduleRequestSchema;
    output: typeof CreateBackupScheduleResponseSchema;
  },
  /**
   * Updates a backup schedule in the account identified by the given ID.
   * Required permissions:
   * - write:backup_schedules
   *
   * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.UpdateBackupSchedule
   */
  updateBackupSchedule: {
    methodKind: "unary";
    input: typeof UpdateBackupScheduleRequestSchema;
    output: typeof UpdateBackupScheduleResponseSchema;
  },
  /**
   * Deletes a backup schedule in the account identified by the given ID.
   * Required permissions:
   * - delete:backup_schedules
   *
   * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.DeleteBackupSchedule
   */
  deleteBackupSchedule: {
    methodKind: "unary";
    input: typeof DeleteBackupScheduleRequestSchema;
    output: typeof DeleteBackupScheduleResponseSchema;
  },
}>;

