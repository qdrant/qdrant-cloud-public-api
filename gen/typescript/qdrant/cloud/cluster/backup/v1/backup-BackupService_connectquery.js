// @generated by protoc-gen-connect-query v0.4.1
// @generated from file qdrant/cloud/cluster/backup/v1/backup.proto (package qdrant.cloud.cluster.backup.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { createQueryService } from "@bufbuild/connect-query";
import { MethodKind } from "@bufbuild/protobuf";
import { CreateBackupRequest, CreateBackupResponse, CreateBackupScheduleRequest, CreateBackupScheduleResponse, DeleteBackupRequest, DeleteBackupResponse, DeleteBackupScheduleRequest, DeleteBackupScheduleResponse, GetBackupScheduleRequest, GetBackupScheduleResponse, ListBackupRestoresRequest, ListBackupRestoresResponse, ListBackupSchedulesRequest, ListBackupSchedulesResponse, ListBackupsRequest, ListBackupsResponse, RestoreBackupRequest, RestoreBackupResponse, UpdateBackupScheduleRequest, UpdateBackupScheduleResponse } from "./backup_pb.js";

export const typeName = "qdrant.cloud.cluster.backup.v1.BackupService";

/**
 * Lists all backups in the account identified by the given ID.
 * Required permissions:
 * - read:backups
 *
 * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.ListBackups
 */
export const listBackups = createQueryService({
  service: {
    methods: {
      listBackups: {
        name: "ListBackups",
        kind: MethodKind.Unary,
        I: ListBackupsRequest,
        O: ListBackupsResponse,
      },
    },
    typeName: "qdrant.cloud.cluster.backup.v1.BackupService",
  },
}).listBackups;

/**
 * Creates a backup for the cluster identified by the given ID.
 * Required permissions:
 * - write:backups
 *
 * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.CreateBackup
 */
export const createBackup = createQueryService({
  service: {
    methods: {
      createBackup: {
        name: "CreateBackup",
        kind: MethodKind.Unary,
        I: CreateBackupRequest,
        O: CreateBackupResponse,
      },
    },
    typeName: "qdrant.cloud.cluster.backup.v1.BackupService",
  },
}).createBackup;

/**
 * Deletes a backup in the account identified by the given ID.
 * Required permissions:
 * - delete:backups
 *
 * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.DeleteBackup
 */
export const deleteBackup = createQueryService({
  service: {
    methods: {
      deleteBackup: {
        name: "DeleteBackup",
        kind: MethodKind.Unary,
        I: DeleteBackupRequest,
        O: DeleteBackupResponse,
      },
    },
    typeName: "qdrant.cloud.cluster.backup.v1.BackupService",
  },
}).deleteBackup;

/**
 * Lists all backup restores in the account identified by the given ID.
 * Required permissions:
 * - read:backups
 *
 * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.ListBackupRestores
 */
export const listBackupRestores = createQueryService({
  service: {
    methods: {
      listBackupRestores: {
        name: "ListBackupRestores",
        kind: MethodKind.Unary,
        I: ListBackupRestoresRequest,
        O: ListBackupRestoresResponse,
      },
    },
    typeName: "qdrant.cloud.cluster.backup.v1.BackupService",
  },
}).listBackupRestores;

/**
 * Restores a backup in the account identified by the given ID.
 * Required permissions:
 * - admin:backups
 *
 * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.RestoreBackup
 */
export const restoreBackup = createQueryService({
  service: {
    methods: {
      restoreBackup: {
        name: "RestoreBackup",
        kind: MethodKind.Unary,
        I: RestoreBackupRequest,
        O: RestoreBackupResponse,
      },
    },
    typeName: "qdrant.cloud.cluster.backup.v1.BackupService",
  },
}).restoreBackup;

/**
 * Lists all backup schedules in the account identified by the given ID.
 * Required permissions:
 * - read:backup_schedules
 *
 * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.ListBackupSchedules
 */
export const listBackupSchedules = createQueryService({
  service: {
    methods: {
      listBackupSchedules: {
        name: "ListBackupSchedules",
        kind: MethodKind.Unary,
        I: ListBackupSchedulesRequest,
        O: ListBackupSchedulesResponse,
      },
    },
    typeName: "qdrant.cloud.cluster.backup.v1.BackupService",
  },
}).listBackupSchedules;

/**
 * Gets a backup schedule in the account identified by the given ID.
 * Required permissions:
 * - read:backup_schedules
 *
 * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.GetBackupSchedule
 */
export const getBackupSchedule = createQueryService({
  service: {
    methods: {
      getBackupSchedule: {
        name: "GetBackupSchedule",
        kind: MethodKind.Unary,
        I: GetBackupScheduleRequest,
        O: GetBackupScheduleResponse,
      },
    },
    typeName: "qdrant.cloud.cluster.backup.v1.BackupService",
  },
}).getBackupSchedule;

/**
 * Creates a backup schedule in the account identified by the given ID.
 * Required permissions:
 * - write:backup_schedules
 *
 * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.CreateBackupSchedule
 */
export const createBackupSchedule = createQueryService({
  service: {
    methods: {
      createBackupSchedule: {
        name: "CreateBackupSchedule",
        kind: MethodKind.Unary,
        I: CreateBackupScheduleRequest,
        O: CreateBackupScheduleResponse,
      },
    },
    typeName: "qdrant.cloud.cluster.backup.v1.BackupService",
  },
}).createBackupSchedule;

/**
 * Updates a backup schedule in the account identified by the given ID.
 * Required permissions:
 * - write:backup_schedules
 *
 * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.UpdateBackupSchedule
 */
export const updateBackupSchedule = createQueryService({
  service: {
    methods: {
      updateBackupSchedule: {
        name: "UpdateBackupSchedule",
        kind: MethodKind.Unary,
        I: UpdateBackupScheduleRequest,
        O: UpdateBackupScheduleResponse,
      },
    },
    typeName: "qdrant.cloud.cluster.backup.v1.BackupService",
  },
}).updateBackupSchedule;

/**
 * Deletes a backup schedule in the account identified by the given ID.
 * Required permissions:
 * - delete:backup_schedules
 *
 * @generated from rpc qdrant.cloud.cluster.backup.v1.BackupService.DeleteBackupSchedule
 */
export const deleteBackupSchedule = createQueryService({
  service: {
    methods: {
      deleteBackupSchedule: {
        name: "DeleteBackupSchedule",
        kind: MethodKind.Unary,
        I: DeleteBackupScheduleRequest,
        O: DeleteBackupScheduleResponse,
      },
    },
    typeName: "qdrant.cloud.cluster.backup.v1.BackupService",
  },
}).deleteBackupSchedule;
