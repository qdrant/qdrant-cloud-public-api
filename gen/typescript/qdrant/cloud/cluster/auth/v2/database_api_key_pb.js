// @generated by protoc-gen-es v2.10.0 with parameter "target=js+dts,import_extension=js,valid_types=protovalidate_required,buf_validate=true"
// @generated from file qdrant/cloud/cluster/auth/v2/database_api_key.proto (package qdrant.cloud.cluster.auth.v2, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../../../buf/validate/validate_pb.js";
import { file_google_api_annotations } from "../../../../../google/api/annotations_pb.js";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../../common/v1/common_pb.js";
import { file_qdrant_cloud_event_v1_events } from "../../../event/v1/events_pb.js";

/**
 * Describes the file qdrant/cloud/cluster/auth/v2/database_api_key.proto.
 */
export const file_qdrant_cloud_cluster_auth_v2_database_api_key = /*@__PURE__*/
  fileDesc("CjNxZHJhbnQvY2xvdWQvY2x1c3Rlci9hdXRoL3YyL2RhdGFiYXNlX2FwaV9rZXkucHJvdG8SHHFkcmFudC5jbG91ZC5jbHVzdGVyLmF1dGgudjIibAoaTGlzdERhdGFiYXNlQXBpS2V5c1JlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQESIQoKY2x1c3Rlcl9pZBgCIAEoCUIIukgFcgOwAQFIAIgBAUINCgtfY2x1c3Rlcl9pZCJaChtMaXN0RGF0YWJhc2VBcGlLZXlzUmVzcG9uc2USOwoFaXRlbXMYASADKAsyLC5xZHJhbnQuY2xvdWQuY2x1c3Rlci5hdXRoLnYyLkRhdGFiYXNlQXBpS2V5IsYDChtDcmVhdGVEYXRhYmFzZUFwaUtleVJlcXVlc3QSTgoQZGF0YWJhc2VfYXBpX2tleRgBIAEoCzIsLnFkcmFudC5jbG91ZC5jbHVzdGVyLmF1dGgudjIuRGF0YWJhc2VBcGlLZXlCBrpIA8gBATrWArpI0gIazwIKK2NyZWF0ZV9kYXRhYmFzZV9hcGlfa2V5Lm5vX3JlYWRfb25seV9maWVsZHMSW3JlYWQtb25seSBmaWVsZHMgKGlkLCBjcmVhdGVkX2F0LCBjcmVhdGVkX2J5X2VtYWlsLCBwb3N0Zml4LCBrZXkpIG11c3Qgbm90IGJlIHNldCBvbiBjcmVhdGUawgF0aGlzLmRhdGFiYXNlX2FwaV9rZXkuaWQgPT0gJycgJiYgIWhhcyh0aGlzLmRhdGFiYXNlX2FwaV9rZXkuY3JlYXRlZF9hdCkgJiYgdGhpcy5kYXRhYmFzZV9hcGlfa2V5LmNyZWF0ZWRfYnlfZW1haWwgPT0gJycgJiYgdGhpcy5kYXRhYmFzZV9hcGlfa2V5LnBvc3RmaXggPT0gJycgJiYgdGhpcy5kYXRhYmFzZV9hcGlfa2V5LmtleSA9PSAnJyJuChxDcmVhdGVEYXRhYmFzZUFwaUtleVJlc3BvbnNlEk4KEGRhdGFiYXNlX2FwaV9rZXkYASABKAsyLC5xZHJhbnQuY2xvdWQuY2x1c3Rlci5hdXRoLnYyLkRhdGFiYXNlQXBpS2V5Qga6SAPIAQEigAEKG0RlbGV0ZURhdGFiYXNlQXBpS2V5UmVxdWVzdBIcCgphY2NvdW50X2lkGAEgASgJQgi6SAVyA7ABARIcCgpjbHVzdGVyX2lkGAIgASgJQgi6SAVyA7ABARIlChNkYXRhYmFzZV9hcGlfa2V5X2lkGAMgASgJQgi6SAVyA7ABASIeChxEZWxldGVEYXRhYmFzZUFwaUtleVJlc3BvbnNlIuMJCg5EYXRhYmFzZUFwaUtleRIKCgJpZBgBIAEoCRIcCgphY2NvdW50X2lkGAIgASgJQgi6SAVyA7ABARIuCgpjcmVhdGVkX2F0GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIcCgpjbHVzdGVyX2lkGAQgASgJQgi6SAVyA7ABARIkCgRuYW1lGAUgASgJQha6SBNyERAEGIABMgpeW1x3XHMtXSskEjMKCmV4cGlyZXNfYXQYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSACIAQESSAoMYWNjZXNzX3J1bGVzGAcgAygLMigucWRyYW50LmNsb3VkLmNsdXN0ZXIuYXV0aC52Mi5BY2Nlc3NSdWxlQgi6SAWSAQIQFBLCAQoQY3JlYXRlZF9ieV9lbWFpbBgIIAEoCUKnAbpIowG6AZ8BCiFkYXRhYmFzZV9hcGlfa2V5LmNyZWF0ZWRfYnlfZW1haWwSNmlmIHNldCwgY3JlYXRlZF9ieV9lbWFpbCBtdXN0IGJlIGEgdmFsaWQgZW1haWwgYWRkcmVzcxpCdGhpcy5zaXplKCkgPT0gMCB8fCB0aGlzLm1hdGNoZXMoJ15bXkBcXHNdK0BbXkBcXHNdK1xcLlteQFxcc10rJCcpEg8KB3Bvc3RmaXgYCSABKAkSCwoDa2V5GAogASgJOsEFuki9BRqsAQoTZGF0YWJhc2VfYXBpX2tleS5pZBIadmFsdWUgbXVzdCBiZSBhIHZhbGlkIFVVSUQaeXRoaXMuaWQubWF0Y2hlcygnXlswLTlhLWZBLUZdezh9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezR9LVswLTlhLWZBLUZdezEyfSQnKSB8fCAhaGFzKHRoaXMuY3JlYXRlZF9hdCka8QEKL2RhdGFiYXNlX2FwaV9rZXkubm9fbWl4ZWRfZ2xvYmFsX2FuZF9jb2xsZWN0aW9uEk9UaGVyZSBjYW4ndCBiZSBnbG9iYWwgYW5kIGNvbGxlY3Rpb24gYWNjZXNzIHJ1bGVzIGluIHRoZSBzYW1lIGRhdGFiYXNlIGFwaSBrZXkuGm0hKHRoaXMuYWNjZXNzX3J1bGVzLmV4aXN0cyhyLCBoYXMoci5nbG9iYWxfYWNjZXNzKSkgJiYgdGhpcy5hY2Nlc3NfcnVsZXMuZXhpc3RzKHIsIGhhcyhyLmNvbGxlY3Rpb25fYWNjZXNzKSkpGq4BCidkYXRhYmFzZV9hcGlfa2V5Lm9ubHlfb25lX2dsb2JhbF9hY2Nlc3MSRVRoZXJlIGNhbid0IGJlIG1vcmUgdGhhbiBvbmUgZ2xvYmFsIGFjY2VzcyBydWxlIGluIHRoZSBjb25maWd1cmF0aW9uLho8c2l6ZSh0aGlzLmFjY2Vzc19ydWxlcy5maWx0ZXIociwgaGFzKHIuZ2xvYmFsX2FjY2VzcykpKSA8PSAxGmcKGGRhdGFiYXNlX2FwaV9rZXkucG9zdGZpeBIZcG9zdGZpeCBtdXN0IG5vdCBiZSBlbXB0eRowdGhpcy5wb3N0Zml4LnNpemUoKSA+IDAgfHwgIWhhcyh0aGlzLmNyZWF0ZWRfYXQpQg0KC19leHBpcmVzX2F0IrYBCgpBY2Nlc3NSdWxlEkcKDWdsb2JhbF9hY2Nlc3MYASABKAsyLi5xZHJhbnQuY2xvdWQuY2x1c3Rlci5hdXRoLnYyLkdsb2JhbEFjY2Vzc1J1bGVIABJPChFjb2xsZWN0aW9uX2FjY2VzcxgCIAEoCzIyLnFkcmFudC5jbG91ZC5jbHVzdGVyLmF1dGgudjIuQ29sbGVjdGlvbkFjY2Vzc1J1bGVIAEIOCgVzY29wZRIFukgCCAEibQoQR2xvYmFsQWNjZXNzUnVsZRJZCgthY2Nlc3NfdHlwZRgBIAEoDjI4LnFkcmFudC5jbG91ZC5jbHVzdGVyLmF1dGgudjIuR2xvYmFsQWNjZXNzUnVsZUFjY2Vzc1R5cGVCCrpIB4IBBBABIAAiqwEKFENvbGxlY3Rpb25BY2Nlc3NSdWxlEjQKD2NvbGxlY3Rpb25fbmFtZRgBIAEoCUIbukgYchYQBBhAMhBeW2EtekEtWjAtOS1fXSskEl0KC2FjY2Vzc190eXBlGAIgASgOMjwucWRyYW50LmNsb3VkLmNsdXN0ZXIuYXV0aC52Mi5Db2xsZWN0aW9uQWNjZXNzUnVsZUFjY2Vzc1R5cGVCCrpIB4IBBBABIAAqpQEKGkdsb2JhbEFjY2Vzc1J1bGVBY2Nlc3NUeXBlEi4KKkdMT0JBTF9BQ0NFU1NfUlVMRV9BQ0NFU1NfVFlQRV9VTlNQRUNJRklFRBAAEiwKKEdMT0JBTF9BQ0NFU1NfUlVMRV9BQ0NFU1NfVFlQRV9SRUFEX09OTFkQARIpCiVHTE9CQUxfQUNDRVNTX1JVTEVfQUNDRVNTX1RZUEVfTUFOQUdFEAIquQEKHkNvbGxlY3Rpb25BY2Nlc3NSdWxlQWNjZXNzVHlwZRIyCi5DT0xMRUNUSU9OX0FDQ0VTU19SVUxFX0FDQ0VTU19UWVBFX1VOU1BFQ0lGSUVEEAASMAosQ09MTEVDVElPTl9BQ0NFU1NfUlVMRV9BQ0NFU1NfVFlQRV9SRUFEX09OTFkQARIxCi1DT0xMRUNUSU9OX0FDQ0VTU19SVUxFX0FDQ0VTU19UWVBFX1JFQURfV1JJVEUQAjKQCwoVRGF0YWJhc2VBcGlLZXlTZXJ2aWNlEv0BChNMaXN0RGF0YWJhc2VBcGlLZXlzEjgucWRyYW50LmNsb3VkLmNsdXN0ZXIuYXV0aC52Mi5MaXN0RGF0YWJhc2VBcGlLZXlzUmVxdWVzdBo5LnFkcmFudC5jbG91ZC5jbHVzdGVyLmF1dGgudjIuTGlzdERhdGFiYXNlQXBpS2V5c1Jlc3BvbnNlInGKtRgNcmVhZDphcGlfa2V5c7q1GBgKCmNsdXN0ZXJfaWQSCmNsdXN0ZXJfaWSC0+STAj4SPC9hcGkvY2x1c3Rlci9hdXRoL3YyL2FjY291bnRzL3thY2NvdW50X2lkfS9kYXRhYmFzZS1hcGkta2V5cxLgBAoUQ3JlYXRlRGF0YWJhc2VBcGlLZXkSOS5xZHJhbnQuY2xvdWQuY2x1c3Rlci5hdXRoLnYyLkNyZWF0ZURhdGFiYXNlQXBpS2V5UmVxdWVzdBo6LnFkcmFudC5jbG91ZC5jbHVzdGVyLmF1dGgudjIuQ3JlYXRlRGF0YWJhc2VBcGlLZXlSZXNwb25zZSLQA4q1GA53cml0ZTphcGlfa2V5c5K1GBtkYXRhYmFzZV9hcGlfa2V5LmFjY291bnRfaWS6tRgpCgpjbHVzdGVyX2lkEhtkYXRhYmFzZV9hcGlfa2V5LmNsdXN0ZXJfaWS6tRguChVkYXRhYmFzZV9hcGlfa2V5X25hbWUSFWRhdGFiYXNlX2FwaV9rZXkubmFtZcrzGOMBCAESEGRhdGFiYXNlLWFwaS1rZXkiGHJlc3AuZGF0YWJhc2VfYXBpX2tleS5pZCqDAS9hY2NvdW50cy97cmVxLmRhdGFiYXNlX2FwaV9rZXkuYWNjb3VudF9pZH0vY2x1c3RlcnMve3JlcS5kYXRhYmFzZV9hcGlfa2V5LmNsdXN0ZXJfaWR9L2RhdGFiYXNlLWFwaS1rZXlzL3tyZXNwLmRhdGFiYXNlX2FwaV9rZXkuaWR9Ui0KCmNsdXN0ZXJfaWQSH3JlcS5kYXRhYmFzZV9hcGlfa2V5LmNsdXN0ZXJfaWSC0+STAlI6ASoiTS9hcGkvY2x1c3Rlci9hdXRoL3YyL2FjY291bnRzL3tkYXRhYmFzZV9hcGlfa2V5LmFjY291bnRfaWR9L2RhdGFiYXNlLWFwaS1rZXlzEpMEChREZWxldGVEYXRhYmFzZUFwaUtleRI5LnFkcmFudC5jbG91ZC5jbHVzdGVyLmF1dGgudjIuRGVsZXRlRGF0YWJhc2VBcGlLZXlSZXF1ZXN0GjoucWRyYW50LmNsb3VkLmNsdXN0ZXIuYXV0aC52Mi5EZWxldGVEYXRhYmFzZUFwaUtleVJlc3BvbnNlIoMDirUYD2RlbGV0ZTphcGlfa2V5c7q1GBgKCmNsdXN0ZXJfaWQSCmNsdXN0ZXJfaWS6tRgqChNkYXRhYmFzZV9hcGlfa2V5X2lkEhNkYXRhYmFzZV9hcGlfa2V5X2lkyvMYxwEIAxIQZGF0YWJhc2UtYXBpLWtleSIXcmVxLmRhdGFiYXNlX2FwaV9rZXlfaWQqbS9hY2NvdW50cy97cmVxLmFjY291bnRfaWR9L2NsdXN0ZXJzL3tyZXNwLW1kLnFjLWV2ZW50LWNsdXN0ZXItaWR9L2RhdGFiYXNlLWFwaS1rZXlzL3tyZXEuZGF0YWJhc2VfYXBpX2tleV9pZH1SKQoKY2x1c3Rlcl9pZBIbcmVzcC1tZC5xYy1ldmVudC1jbHVzdGVyLWlkgtPkkwJUKlIvYXBpL2NsdXN0ZXIvYXV0aC92Mi9hY2NvdW50cy97YWNjb3VudF9pZH0vZGF0YWJhc2UtYXBpLWtleXMve2RhdGFiYXNlX2FwaV9rZXlfaWR9QqICCiBjb20ucWRyYW50LmNsb3VkLmNsdXN0ZXIuYXV0aC52MkITRGF0YWJhc2VBcGlLZXlQcm90b1ABWlRnaXRodWIuY29tL3FkcmFudC9xZHJhbnQtY2xvdWQtcHVibGljLWFwaS9nZW4vZ28vcWRyYW50L2Nsb3VkL2NsdXN0ZXIvYXV0aC92MjthdXRodjKiAgRRQ0NBqgIcUWRyYW50LkNsb3VkLkNsdXN0ZXIuQXV0aC5WMsoCHFFkcmFudFxDbG91ZFxDbHVzdGVyXEF1dGhcVjLiAihRZHJhbnRcQ2xvdWRcQ2x1c3RlclxBdXRoXFYyXEdQQk1ldGFkYXRh6gIgUWRyYW50OjpDbG91ZDo6Q2x1c3Rlcjo6QXV0aDo6VjJiBnByb3RvMw", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common, file_qdrant_cloud_event_v1_events]);

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysRequest.
 * Use `create(ListDatabaseApiKeysRequestSchema)` to create a new message.
 */
export const ListDatabaseApiKeysRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v2_database_api_key, 0);

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysResponse.
 * Use `create(ListDatabaseApiKeysResponseSchema)` to create a new message.
 */
export const ListDatabaseApiKeysResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v2_database_api_key, 1);

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyRequest.
 * Use `create(CreateDatabaseApiKeyRequestSchema)` to create a new message.
 */
export const CreateDatabaseApiKeyRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v2_database_api_key, 2);

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyResponse.
 * Use `create(CreateDatabaseApiKeyResponseSchema)` to create a new message.
 */
export const CreateDatabaseApiKeyResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v2_database_api_key, 3);

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.DeleteDatabaseApiKeyRequest.
 * Use `create(DeleteDatabaseApiKeyRequestSchema)` to create a new message.
 */
export const DeleteDatabaseApiKeyRequestSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v2_database_api_key, 4);

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.DeleteDatabaseApiKeyResponse.
 * Use `create(DeleteDatabaseApiKeyResponseSchema)` to create a new message.
 */
export const DeleteDatabaseApiKeyResponseSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v2_database_api_key, 5);

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.DatabaseApiKey.
 * Use `create(DatabaseApiKeySchema)` to create a new message.
 */
export const DatabaseApiKeySchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v2_database_api_key, 6);

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.AccessRule.
 * Use `create(AccessRuleSchema)` to create a new message.
 */
export const AccessRuleSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v2_database_api_key, 7);

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.GlobalAccessRule.
 * Use `create(GlobalAccessRuleSchema)` to create a new message.
 */
export const GlobalAccessRuleSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v2_database_api_key, 8);

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.CollectionAccessRule.
 * Use `create(CollectionAccessRuleSchema)` to create a new message.
 */
export const CollectionAccessRuleSchema = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v2_database_api_key, 9);

/**
 * Describes the enum qdrant.cloud.cluster.auth.v2.GlobalAccessRuleAccessType.
 */
export const GlobalAccessRuleAccessTypeSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_cluster_auth_v2_database_api_key, 0);

/**
 * GlobalAccessRuleAccessType defines the possible access levels for global access rules.
 * For a detailed list of actions allowed for each access type, see:
 * https://qdrant.tech/documentation/guides/security/#table-of-access
 *
 * @generated from enum qdrant.cloud.cluster.auth.v2.GlobalAccessRuleAccessType
 */
export const GlobalAccessRuleAccessType = /*@__PURE__*/
  tsEnum(GlobalAccessRuleAccessTypeSchema);

/**
 * Describes the enum qdrant.cloud.cluster.auth.v2.CollectionAccessRuleAccessType.
 */
export const CollectionAccessRuleAccessTypeSchema = /*@__PURE__*/
  enumDesc(file_qdrant_cloud_cluster_auth_v2_database_api_key, 1);

/**
 * CollectionAccessRuleAccessType defines the types of access allowed on a specific collection.
 * For a detailed list of actions allowed for each access type, see:
 * https://qdrant.tech/documentation/guides/security/#table-of-access
 *
 * @generated from enum qdrant.cloud.cluster.auth.v2.CollectionAccessRuleAccessType
 */
export const CollectionAccessRuleAccessType = /*@__PURE__*/
  tsEnum(CollectionAccessRuleAccessTypeSchema);

/**
 * DatabaseApiKeyService is the API used to manage keys that give access to a cluster database.
 *
 * @generated from service qdrant.cloud.cluster.auth.v2.DatabaseApiKeyService
 */
export const DatabaseApiKeyService = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_cluster_auth_v2_database_api_key, 0);

