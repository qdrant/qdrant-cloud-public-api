// @generated by protoc-gen-es v2.9.0 with parameter "target=js+dts,import_extension=js,valid_types=protovalidate_required"
// @generated from file qdrant/cloud/cluster/auth/v2/database_api_key.proto (package qdrant.cloud.cluster.auth.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file qdrant/cloud/cluster/auth/v2/database_api_key.proto.
 */
export declare const file_qdrant_cloud_cluster_auth_v2_database_api_key: GenFile;

/**
 * ListDatabaseApiKeysRequest is the request for the ListDatabaseApiKeys function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysRequest
 */
export declare type ListDatabaseApiKeysRequest = Message<"qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier of the cluster (in GUID format).
   * This is an optional field, if provided it returns only the database api
   * keys that belong to that cluster.
   *
   * @generated from field: optional string cluster_id = 2;
   */
  clusterId?: string;
};

export declare type ListDatabaseApiKeysRequestValid = ListDatabaseApiKeysRequest;

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysRequest.
 * Use `create(ListDatabaseApiKeysRequestSchema)` to create a new message.
 */
export declare const ListDatabaseApiKeysRequestSchema: GenMessage<ListDatabaseApiKeysRequest, {validType: ListDatabaseApiKeysRequestValid}>;

/**
 * ListDatabaseApiKeysResponse is the response from the ListDatabaseApiKeys function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysResponse
 */
export declare type ListDatabaseApiKeysResponse = Message<"qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysResponse"> & {
  /**
   * The actual database api keys in this list.
   *
   * @generated from field: repeated qdrant.cloud.cluster.auth.v2.DatabaseApiKey items = 1;
   */
  items: DatabaseApiKey[];
};

export declare type ListDatabaseApiKeysResponseValid = ListDatabaseApiKeysResponse;

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysResponse.
 * Use `create(ListDatabaseApiKeysResponseSchema)` to create a new message.
 */
export declare const ListDatabaseApiKeysResponseSchema: GenMessage<ListDatabaseApiKeysResponse, {validType: ListDatabaseApiKeysResponseValid}>;

/**
 * CreateDatabaseApiKeyRequest is the request for the CreateDatabaseApiKey function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyRequest
 */
export declare type CreateDatabaseApiKeyRequest = Message<"qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyRequest"> & {
  /**
   * The actual database api key.
   *
   * @generated from field: qdrant.cloud.cluster.auth.v2.DatabaseApiKey database_api_key = 1;
   */
  databaseApiKey?: DatabaseApiKey;
};

/**
 * CreateDatabaseApiKeyRequest is the request for the CreateDatabaseApiKey function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyRequest
 */
export declare type CreateDatabaseApiKeyRequestValid = Message<"qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyRequest"> & {
  /**
   * The actual database api key.
   *
   * @generated from field: qdrant.cloud.cluster.auth.v2.DatabaseApiKey database_api_key = 1;
   */
  databaseApiKey: DatabaseApiKeyValid;
};

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyRequest.
 * Use `create(CreateDatabaseApiKeyRequestSchema)` to create a new message.
 */
export declare const CreateDatabaseApiKeyRequestSchema: GenMessage<CreateDatabaseApiKeyRequest, {validType: CreateDatabaseApiKeyRequestValid}>;

/**
 * CreateDatabaseApiKeyResponse is the response from the CreateDatabaseApiKey function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyResponse
 */
export declare type CreateDatabaseApiKeyResponse = Message<"qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyResponse"> & {
  /**
   * The actual database api key.
   *
   * @generated from field: qdrant.cloud.cluster.auth.v2.DatabaseApiKey database_api_key = 1;
   */
  databaseApiKey?: DatabaseApiKey;
};

/**
 * CreateDatabaseApiKeyResponse is the response from the CreateDatabaseApiKey function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyResponse
 */
export declare type CreateDatabaseApiKeyResponseValid = Message<"qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyResponse"> & {
  /**
   * The actual database api key.
   *
   * @generated from field: qdrant.cloud.cluster.auth.v2.DatabaseApiKey database_api_key = 1;
   */
  databaseApiKey: DatabaseApiKeyValid;
};

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyResponse.
 * Use `create(CreateDatabaseApiKeyResponseSchema)` to create a new message.
 */
export declare const CreateDatabaseApiKeyResponseSchema: GenMessage<CreateDatabaseApiKeyResponse, {validType: CreateDatabaseApiKeyResponseValid}>;

/**
 * DeleteDatabaseApiKeyRequest is the request for the DeleteDatabaseApiKey function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v2.DeleteDatabaseApiKeyRequest
 */
export declare type DeleteDatabaseApiKeyRequest = Message<"qdrant.cloud.cluster.auth.v2.DeleteDatabaseApiKeyRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier for the cluster (in GUID format).
   * This cluster should be part of the provided account.
   * This is a required field.
   *
   * @generated from field: string cluster_id = 2;
   */
  clusterId: string;

  /**
   * The identifier of the database api key (in GUID format).
   * This is a required field.
   *
   * @generated from field: string database_api_key_id = 3;
   */
  databaseApiKeyId: string;
};

export declare type DeleteDatabaseApiKeyRequestValid = DeleteDatabaseApiKeyRequest;

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.DeleteDatabaseApiKeyRequest.
 * Use `create(DeleteDatabaseApiKeyRequestSchema)` to create a new message.
 */
export declare const DeleteDatabaseApiKeyRequestSchema: GenMessage<DeleteDatabaseApiKeyRequest, {validType: DeleteDatabaseApiKeyRequestValid}>;

/**
 * DeleteDatabaseApiKeyResponse is the response from the DeleteDatabaseApiKey function.
 *
 * Empty
 *
 * @generated from message qdrant.cloud.cluster.auth.v2.DeleteDatabaseApiKeyResponse
 */
export declare type DeleteDatabaseApiKeyResponse = Message<"qdrant.cloud.cluster.auth.v2.DeleteDatabaseApiKeyResponse"> & {
};

export declare type DeleteDatabaseApiKeyResponseValid = DeleteDatabaseApiKeyResponse;

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.DeleteDatabaseApiKeyResponse.
 * Use `create(DeleteDatabaseApiKeyResponseSchema)` to create a new message.
 */
export declare const DeleteDatabaseApiKeyResponseSchema: GenMessage<DeleteDatabaseApiKeyResponse, {validType: DeleteDatabaseApiKeyResponseValid}>;

/**
 * A DatabaseApiKey represents one database api key of a Qdrant cloud account.
 * This database key can grant access to one or more Qdrant databases (clusters).
 *
 * @generated from message qdrant.cloud.cluster.auth.v2.DatabaseApiKey
 */
export declare type DatabaseApiKey = Message<"qdrant.cloud.cluster.auth.v2.DatabaseApiKey"> & {
  /**
   * Unique identifier for the database api key (in GUID format).
   * This is a read-only field and will be available after a database api key is created.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 2;
   */
  accountId: string;

  /**
   * Timestamp when the database api key was created.
   * This is a read-only field and will be available after a database api key is created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * The identifier of the cluster (in GUID format).
   * This is a required field.
   *
   * @generated from field: string cluster_id = 4;
   */
  clusterId: string;

  /**
   * Name of the database api key.
   * This is a required field.
   * Name can only contain letters, numbers, spaces, underscores and dashes.
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * The expiration time of the database api key. The key will be invalid after this time.
   * This field is optional, and if not provided, the key does not expire.
   *
   * @generated from field: optional google.protobuf.Timestamp expires_at = 6;
   */
  expiresAt?: Timestamp;

  /**
   * A list of rules to grant access to the Qdrant database or to specific
   * collections. If no access rules are provided, global access to the database
   * with manage permissions is assumed. The list can contain a maximum of 20
   * access rules.
   *
   * @generated from field: repeated qdrant.cloud.cluster.auth.v2.AccessRule access_rules = 7;
   */
  accessRules: AccessRule[];

  /**
   * The email of the user who created the database api key.
   * This is an optional read-only field and will be available after a database api key is created.
   * If the DatabaseApiKey is created by an actual user the information will be filled-out, if it's created programmatically the field will be empty.
   *
   * @generated from field: string created_by_email = 8;
   */
  createdByEmail: string;

  /**
   * Postfix for the database api key, this represents the last bytes of the key.
   * This is a read-only field and will be available after a database api key is created.
   *
   * @generated from field: string postfix = 9;
   */
  postfix: string;

  /**
   * The key for the database api key.
   * This is a read-only field and will be available only once in the response of CreateDatabaseApiKey.
   * You should securely store this key and it should be handled as a secret.
   *
   * @generated from field: string key = 10;
   */
  key: string;
};

export declare type DatabaseApiKeyValid = DatabaseApiKey;

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.DatabaseApiKey.
 * Use `create(DatabaseApiKeySchema)` to create a new message.
 */
export declare const DatabaseApiKeySchema: GenMessage<DatabaseApiKey, {validType: DatabaseApiKeyValid}>;

/**
 * Represents an access rule. An access rule can either define global access to
 * the database or access to a specific collection.
 *
 * @generated from message qdrant.cloud.cluster.auth.v2.AccessRule
 */
export declare type AccessRule = Message<"qdrant.cloud.cluster.auth.v2.AccessRule"> & {
  /**
   * Defines the scope of the access rule, determining whether it applies globally
   * to the entire database or is restricted to a specific collection.
   *
   * @generated from oneof qdrant.cloud.cluster.auth.v2.AccessRule.scope
   */
  scope: {
    /**
     * A rule granting global access to the entire database.
     *
     * @generated from field: qdrant.cloud.cluster.auth.v2.GlobalAccessRule global_access = 1;
     */
    value: GlobalAccessRule;
    case: "globalAccess";
  } | {
    /**
     * A rule granting access to a specific collection in the database.
     *
     * @generated from field: qdrant.cloud.cluster.auth.v2.CollectionAccessRule collection_access = 2;
     */
    value: CollectionAccessRule;
    case: "collectionAccess";
  } | { case: undefined; value?: undefined };
};

export declare type AccessRuleValid = AccessRule;

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.AccessRule.
 * Use `create(AccessRuleSchema)` to create a new message.
 */
export declare const AccessRuleSchema: GenMessage<AccessRule, {validType: AccessRuleValid}>;

/**
 * Represents a global access rule that grants access to the entire database.
 *
 * @generated from message qdrant.cloud.cluster.auth.v2.GlobalAccessRule
 */
export declare type GlobalAccessRule = Message<"qdrant.cloud.cluster.auth.v2.GlobalAccessRule"> & {
  /**
   * The type of access granted at the global level.
   * This is a required field.
   *
   * @generated from field: qdrant.cloud.cluster.auth.v2.GlobalAccessRuleAccessType access_type = 1;
   */
  accessType: GlobalAccessRuleAccessType;
};

export declare type GlobalAccessRuleValid = GlobalAccessRule;

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.GlobalAccessRule.
 * Use `create(GlobalAccessRuleSchema)` to create a new message.
 */
export declare const GlobalAccessRuleSchema: GenMessage<GlobalAccessRule, {validType: GlobalAccessRuleValid}>;

/**
 * Represents an access rule for a specific collection in the database.
 *
 * @generated from message qdrant.cloud.cluster.auth.v2.CollectionAccessRule
 */
export declare type CollectionAccessRule = Message<"qdrant.cloud.cluster.auth.v2.CollectionAccessRule"> & {
  /**
   * The name of the collection.
   * This is a required field.
   *
   * @generated from field: string collection_name = 1;
   */
  collectionName: string;

  /**
   * The type of access granted for the collection.
   * This is a required field.
   *
   * @generated from field: qdrant.cloud.cluster.auth.v2.CollectionAccessRuleAccessType access_type = 2;
   */
  accessType: CollectionAccessRuleAccessType;
};

export declare type CollectionAccessRuleValid = CollectionAccessRule;

/**
 * Describes the message qdrant.cloud.cluster.auth.v2.CollectionAccessRule.
 * Use `create(CollectionAccessRuleSchema)` to create a new message.
 */
export declare const CollectionAccessRuleSchema: GenMessage<CollectionAccessRule, {validType: CollectionAccessRuleValid}>;

/**
 * GlobalAccessRuleAccessType defines the possible access levels for global access rules.
 * For a detailed list of actions allowed for each access type, see:
 * https://qdrant.tech/documentation/guides/security/#table-of-access
 *
 * @generated from enum qdrant.cloud.cluster.auth.v2.GlobalAccessRuleAccessType
 */
export enum GlobalAccessRuleAccessType {
  /**
   * Unspecified access type.
   *
   * @generated from enum value: GLOBAL_ACCESS_RULE_ACCESS_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Grants access to perform actions that only read data (e.g., list collections).
   *
   * @generated from enum value: GLOBAL_ACCESS_RULE_ACCESS_TYPE_READ_ONLY = 1;
   */
  READ_ONLY = 1,

  /**
   * Grants access to perform all actions available in the database (e.g., update aliases).
   *
   * @generated from enum value: GLOBAL_ACCESS_RULE_ACCESS_TYPE_MANAGE = 2;
   */
  MANAGE = 2,
}

/**
 * Describes the enum qdrant.cloud.cluster.auth.v2.GlobalAccessRuleAccessType.
 */
export declare const GlobalAccessRuleAccessTypeSchema: GenEnum<GlobalAccessRuleAccessType>;

/**
 * CollectionAccessRuleAccessType defines the types of access allowed on a specific collection.
 * For a detailed list of actions allowed for each access type, see:
 * https://qdrant.tech/documentation/guides/security/#table-of-access
 *
 * @generated from enum qdrant.cloud.cluster.auth.v2.CollectionAccessRuleAccessType
 */
export enum CollectionAccessRuleAccessType {
  /**
   * Unspecified access type.
   *
   * @generated from enum value: COLLECTION_ACCESS_RULE_ACCESS_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Grants access to perform collection-related actions that only read data (like `get collection info`).
   *
   * @generated from enum value: COLLECTION_ACCESS_RULE_ACCESS_TYPE_READ_ONLY = 1;
   */
  READ_ONLY = 1,

  /**
   * Grants access to perform collection-related actions that read or write data (like `upsert points`).
   *
   * @generated from enum value: COLLECTION_ACCESS_RULE_ACCESS_TYPE_READ_WRITE = 2;
   */
  READ_WRITE = 2,
}

/**
 * Describes the enum qdrant.cloud.cluster.auth.v2.CollectionAccessRuleAccessType.
 */
export declare const CollectionAccessRuleAccessTypeSchema: GenEnum<CollectionAccessRuleAccessType>;

/**
 * DatabaseApiKeyService is the API used to manage keys that give access to a cluster database.
 *
 * @generated from service qdrant.cloud.cluster.auth.v2.DatabaseApiKeyService
 */
export declare const DatabaseApiKeyService: GenService<{
  /**
   * Lists all database api keys in the account identified by the given ID.
   * Required permissions:
   * - read:api_keys
   *
   * @generated from rpc qdrant.cloud.cluster.auth.v2.DatabaseApiKeyService.ListDatabaseApiKeys
   */
  listDatabaseApiKeys: {
    methodKind: "unary";
    input: typeof ListDatabaseApiKeysRequestSchema;
    output: typeof ListDatabaseApiKeysResponseSchema;
  },
  /**
   * Creates a database api key in the account identified by the given ID.
   * Required permissions:
   * - write:api_keys
   *
   * @generated from rpc qdrant.cloud.cluster.auth.v2.DatabaseApiKeyService.CreateDatabaseApiKey
   */
  createDatabaseApiKey: {
    methodKind: "unary";
    input: typeof CreateDatabaseApiKeyRequestSchema;
    output: typeof CreateDatabaseApiKeyResponseSchema;
  },
  /**
   * Deletes a database api key in the account identified by the given ID.
   * Required permissions:
   * - delete:api_keys
   *
   * @generated from rpc qdrant.cloud.cluster.auth.v2.DatabaseApiKeyService.DeleteDatabaseApiKey
   */
  deleteDatabaseApiKey: {
    methodKind: "unary";
    input: typeof DeleteDatabaseApiKeyRequestSchema;
    output: typeof DeleteDatabaseApiKeyResponseSchema;
  },
}>;

