// @generated by protoc-gen-es v2.5.2 with parameter "target=js+dts,import_extension=js,valid_types=protovalidate_required"
// @generated from file qdrant/cloud/cluster/auth/v1/database_api_key.proto (package qdrant.cloud.cluster.auth.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file qdrant/cloud/cluster/auth/v1/database_api_key.proto.
 */
export declare const file_qdrant_cloud_cluster_auth_v1_database_api_key: GenFile;

/**
 * ListDatabaseApiKeysRequest is the request for the ListDatabaseApiKeys function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v1.ListDatabaseApiKeysRequest
 */
export declare type ListDatabaseApiKeysRequest = Message<"qdrant.cloud.cluster.auth.v1.ListDatabaseApiKeysRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;
};

export declare type ListDatabaseApiKeysRequestValid = ListDatabaseApiKeysRequest;

/**
 * Describes the message qdrant.cloud.cluster.auth.v1.ListDatabaseApiKeysRequest.
 * Use `create(ListDatabaseApiKeysRequestSchema)` to create a new message.
 */
export declare const ListDatabaseApiKeysRequestSchema: GenMessage<ListDatabaseApiKeysRequest, {validType: ListDatabaseApiKeysRequestValid}>;

/**
 * ListDatabaseApiKeysResponse is the response from the ListDatabaseApiKeys function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v1.ListDatabaseApiKeysResponse
 */
export declare type ListDatabaseApiKeysResponse = Message<"qdrant.cloud.cluster.auth.v1.ListDatabaseApiKeysResponse"> & {
  /**
   * The actual database api keys in this list.
   *
   * @generated from field: repeated qdrant.cloud.cluster.auth.v1.DatabaseApiKey items = 1;
   */
  items: DatabaseApiKey[];
};

export declare type ListDatabaseApiKeysResponseValid = ListDatabaseApiKeysResponse;

/**
 * Describes the message qdrant.cloud.cluster.auth.v1.ListDatabaseApiKeysResponse.
 * Use `create(ListDatabaseApiKeysResponseSchema)` to create a new message.
 */
export declare const ListDatabaseApiKeysResponseSchema: GenMessage<ListDatabaseApiKeysResponse, {validType: ListDatabaseApiKeysResponseValid}>;

/**
 * CreateDatabaseApiKeyRequest is the request for the CreateDatabaseApiKey function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyRequest
 */
export declare type CreateDatabaseApiKeyRequest = Message<"qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyRequest"> & {
  /**
   * The actual database api key.
   *
   * @generated from field: qdrant.cloud.cluster.auth.v1.DatabaseApiKey database_api_key = 1;
   */
  databaseApiKey?: DatabaseApiKey;
};

/**
 * CreateDatabaseApiKeyRequest is the request for the CreateDatabaseApiKey function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyRequest
 */
export declare type CreateDatabaseApiKeyRequestValid = Message<"qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyRequest"> & {
  /**
   * The actual database api key.
   *
   * @generated from field: qdrant.cloud.cluster.auth.v1.DatabaseApiKey database_api_key = 1;
   */
  databaseApiKey: DatabaseApiKeyValid;
};

/**
 * Describes the message qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyRequest.
 * Use `create(CreateDatabaseApiKeyRequestSchema)` to create a new message.
 */
export declare const CreateDatabaseApiKeyRequestSchema: GenMessage<CreateDatabaseApiKeyRequest, {validType: CreateDatabaseApiKeyRequestValid}>;

/**
 * CreateDatabaseApiKeyResponse is the response from the CreateDatabaseApiKey function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyResponse
 */
export declare type CreateDatabaseApiKeyResponse = Message<"qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyResponse"> & {
  /**
   * The actual database api key.
   *
   * @generated from field: qdrant.cloud.cluster.auth.v1.DatabaseApiKey database_api_key = 1;
   */
  databaseApiKey?: DatabaseApiKey;
};

/**
 * CreateDatabaseApiKeyResponse is the response from the CreateDatabaseApiKey function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyResponse
 */
export declare type CreateDatabaseApiKeyResponseValid = Message<"qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyResponse"> & {
  /**
   * The actual database api key.
   *
   * @generated from field: qdrant.cloud.cluster.auth.v1.DatabaseApiKey database_api_key = 1;
   */
  databaseApiKey: DatabaseApiKeyValid;
};

/**
 * Describes the message qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyResponse.
 * Use `create(CreateDatabaseApiKeyResponseSchema)` to create a new message.
 */
export declare const CreateDatabaseApiKeyResponseSchema: GenMessage<CreateDatabaseApiKeyResponse, {validType: CreateDatabaseApiKeyResponseValid}>;

/**
 * DeleteDatabaseApiKeyRequest is the request for the DeleteDatabaseApiKey function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v1.DeleteDatabaseApiKeyRequest
 */
export declare type DeleteDatabaseApiKeyRequest = Message<"qdrant.cloud.cluster.auth.v1.DeleteDatabaseApiKeyRequest"> & {
  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier of the database api key (in GUID format).
   * This is a required field.
   *
   * @generated from field: string database_api_key_id = 2;
   */
  databaseApiKeyId: string;
};

export declare type DeleteDatabaseApiKeyRequestValid = DeleteDatabaseApiKeyRequest;

/**
 * Describes the message qdrant.cloud.cluster.auth.v1.DeleteDatabaseApiKeyRequest.
 * Use `create(DeleteDatabaseApiKeyRequestSchema)` to create a new message.
 */
export declare const DeleteDatabaseApiKeyRequestSchema: GenMessage<DeleteDatabaseApiKeyRequest, {validType: DeleteDatabaseApiKeyRequestValid}>;

/**
 * DeleteDatabaseApiKeyResponse is the response from the DeleteDatabaseApiKey function.
 *
 * Empty
 *
 * @generated from message qdrant.cloud.cluster.auth.v1.DeleteDatabaseApiKeyResponse
 */
export declare type DeleteDatabaseApiKeyResponse = Message<"qdrant.cloud.cluster.auth.v1.DeleteDatabaseApiKeyResponse"> & {
};

export declare type DeleteDatabaseApiKeyResponseValid = DeleteDatabaseApiKeyResponse;

/**
 * Describes the message qdrant.cloud.cluster.auth.v1.DeleteDatabaseApiKeyResponse.
 * Use `create(DeleteDatabaseApiKeyResponseSchema)` to create a new message.
 */
export declare const DeleteDatabaseApiKeyResponseSchema: GenMessage<DeleteDatabaseApiKeyResponse, {validType: DeleteDatabaseApiKeyResponseValid}>;

/**
 * A DatabaseApiKey represents one database api key of a Qdrant cloud account.
 * This database key can grant access to one or more Qdrant databases (clusters).
 *
 * @generated from message qdrant.cloud.cluster.auth.v1.DatabaseApiKey
 */
export declare type DatabaseApiKey = Message<"qdrant.cloud.cluster.auth.v1.DatabaseApiKey"> & {
  /**
   * Unique identifier for the database api key (in GUID format).
   * This is a read-only field and will be available after a database api key is created.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The identifier of the account (in GUID format).
   * This is a required field.
   *
   * @generated from field: string account_id = 2;
   */
  accountId: string;

  /**
   * Timestamp when the database api key was created.
   * This is a read-only field and will be available after a database api key is created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * A list of cluster IDs.
   * It should contain at least one ID.
   * After creation, this field cannot be changed.
   *
   * @generated from field: repeated string cluster_ids = 4;
   */
  clusterIds: string[];

  /**
   * Prefix for the database api key, this represents the first bytes of the key.
   * This is a read-only field and will be available after a database api key is created.
   *
   * @generated from field: string prefix = 5;
   */
  prefix: string;

  /**
   * The key for the database api key.
   * This is a read-only field and will be available only once in the response of CreateDatabaseApiKey.
   * You should securely store this key and it should be handled as a secret.
   *
   * @generated from field: string key = 6;
   */
  key: string;
};

export declare type DatabaseApiKeyValid = DatabaseApiKey;

/**
 * Describes the message qdrant.cloud.cluster.auth.v1.DatabaseApiKey.
 * Use `create(DatabaseApiKeySchema)` to create a new message.
 */
export declare const DatabaseApiKeySchema: GenMessage<DatabaseApiKey, {validType: DatabaseApiKeyValid}>;

/**
 * DatabaseApiKeyService is the API used to manage keys that give access to a cluster database.
 *
 * @generated from service qdrant.cloud.cluster.auth.v1.DatabaseApiKeyService
 */
export declare const DatabaseApiKeyService: GenService<{
  /**
   * Lists all database api keys in the account identified by the given ID.
   * Required permissions:
   * - read:api_keys
   *
   * @generated from rpc qdrant.cloud.cluster.auth.v1.DatabaseApiKeyService.ListDatabaseApiKeys
   */
  listDatabaseApiKeys: {
    methodKind: "unary";
    input: typeof ListDatabaseApiKeysRequestSchema;
    output: typeof ListDatabaseApiKeysResponseSchema;
  },
  /**
   * Creates a database api key in the account identified by the given ID.
   * Required permissions:
   * - write:api_keys
   *
   * @generated from rpc qdrant.cloud.cluster.auth.v1.DatabaseApiKeyService.CreateDatabaseApiKey
   */
  createDatabaseApiKey: {
    methodKind: "unary";
    input: typeof CreateDatabaseApiKeyRequestSchema;
    output: typeof CreateDatabaseApiKeyResponseSchema;
  },
  /**
   * Deletes a database api key in the account identified by the given ID.
   * Required permissions:
   * - delete:api_keys
   *
   * @generated from rpc qdrant.cloud.cluster.auth.v1.DatabaseApiKeyService.DeleteDatabaseApiKey
   */
  deleteDatabaseApiKey: {
    methodKind: "unary";
    input: typeof DeleteDatabaseApiKeyRequestSchema;
    output: typeof DeleteDatabaseApiKeyResponseSchema;
  },
}>;

