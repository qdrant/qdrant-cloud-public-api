// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file qdrant/cloud/cluster/auth/v3/database_api_key.proto (package qdrant.cloud.cluster.auth.v3, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../../../google/api/annotations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_qdrant_cloud_common_v1_common } from "../../../common/v1/common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file qdrant/cloud/cluster/auth/v3/database_api_key.proto.
 */
export const file_qdrant_cloud_cluster_auth_v3_database_api_key: GenFile = /*@__PURE__*/
  fileDesc("CjNxZHJhbnQvY2xvdWQvY2x1c3Rlci9hdXRoL3YzL2RhdGFiYXNlX2FwaV9rZXkucHJvdG8SHHFkcmFudC5jbG91ZC5jbHVzdGVyLmF1dGgudjMiWAoaTGlzdERhdGFiYXNlQXBpS2V5c1JlcXVlc3QSHAoKYWNjb3VudF9pZBgBIAEoCUIIukgFcgOwAQESHAoKY2x1c3Rlcl9pZBgCIAEoCUIIukgFcgOwAQEiWgobTGlzdERhdGFiYXNlQXBpS2V5c1Jlc3BvbnNlEjsKBWl0ZW1zGAEgAygLMiwucWRyYW50LmNsb3VkLmNsdXN0ZXIuYXV0aC52My5EYXRhYmFzZUFwaUtleSJlChtDcmVhdGVEYXRhYmFzZUFwaUtleVJlcXVlc3QSRgoQZGF0YWJhc2VfYXBpX2tleRgBIAEoCzIsLnFkcmFudC5jbG91ZC5jbHVzdGVyLmF1dGgudjMuRGF0YWJhc2VBcGlLZXkiZgocQ3JlYXRlRGF0YWJhc2VBcGlLZXlSZXNwb25zZRJGChBkYXRhYmFzZV9hcGlfa2V5GAEgASgLMiwucWRyYW50LmNsb3VkLmNsdXN0ZXIuYXV0aC52My5EYXRhYmFzZUFwaUtleSKAAQobRGVsZXRlRGF0YWJhc2VBcGlLZXlSZXF1ZXN0EhwKCmFjY291bnRfaWQYASABKAlCCLpIBXIDsAEBEhwKCmNsdXN0ZXJfaWQYAiABKAlCCLpIBXIDsAEBEiUKE2RhdGFiYXNlX2FwaV9rZXlfaWQYAyABKAlCCLpIBXIDsAEBIh4KHERlbGV0ZURhdGFiYXNlQXBpS2V5UmVzcG9uc2UisAcKDkRhdGFiYXNlQXBpS2V5EgoKAmlkGAEgASgJEhwKCmFjY291bnRfaWQYAiABKAlCCLpIBXIDsAEBEi4KCmNyZWF0ZWRfYXQYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhwKCmNsdXN0ZXJfaWQYBCABKAlCCLpIBXIDsAEBEiQKBG5hbWUYBSABKAlCFrpIE3IREAQYgAEyCl5bXHdccy1dKyQSOAoPZXhwaXJhdGlvbl90aW1lGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAiAEBEkgKDGFjY2Vzc19ydWxlcxgHIAMoCzIoLnFkcmFudC5jbG91ZC5jbHVzdGVyLmF1dGgudjMuQWNjZXNzUnVsZUIIukgFkgECEBQSGAoQY3JlYXRlZF9ieV9lbWFpbBgIIAEoCRIPCgdwb3N0Zml4GAkgASgJEgsKA2tleRgKIAEoCTqvBLpIqwQaowEKCmFwaV9rZXkuaWQSGnZhbHVlIG11c3QgYmUgYSB2YWxpZCBVVUlEGnl0aGlzLmlkLm1hdGNoZXMoJ15bMC05YS1mQS1GXXs4fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXsxMn0kJykgfHwgIWhhcyh0aGlzLmNyZWF0ZWRfYXQpGt8BCh5ub19taXhlZF9nbG9iYWxfYW5kX2NvbGxlY3Rpb24SSENhbm5vdCBtaXggZ2xvYmFsIGFuZCBjb2xsZWN0aW9uIGFjY2VzcyBydWxlcyBpbiB0aGUgc2FtZSBjb25maWd1cmF0aW9uLhpzISh0aGlzLmFjY2Vzc19ydWxlcy5leGlzdHMociwgci5nbG9iYWxfYWNjZXNzICE9IG51bGwpICYmIHRoaXMuYWNjZXNzX3J1bGVzLmV4aXN0cyhyLCByLmNvbGxlY3Rpb25fYWNjZXNzICE9IG51bGwpKRqgAQoWb25seV9vbmVfZ2xvYmFsX2FjY2VzcxJFVGhlcmUgY2FuJ3QgYmUgbW9yZSB0aGFuIG9uZSBnbG9iYWwgYWNjZXNzIHJ1bGUgaW4gdGhlIGNvbmZpZ3VyYXRpb24uGj9zaXplKHRoaXMuYWNjZXNzX3J1bGVzLmZpbHRlcihyLCByLmdsb2JhbF9hY2Nlc3MgIT0gbnVsbCkpIDw9IDFCEgoQX2V4cGlyYXRpb25fdGltZSLcAgoKQWNjZXNzUnVsZRJFCg1nbG9iYWxfYWNjZXNzGAEgASgLMi4ucWRyYW50LmNsb3VkLmNsdXN0ZXIuYXV0aC52My5HbG9iYWxBY2Nlc3NSdWxlEk0KEWNvbGxlY3Rpb25fYWNjZXNzGAIgASgLMjIucWRyYW50LmNsb3VkLmNsdXN0ZXIuYXV0aC52My5Db2xsZWN0aW9uQWNjZXNzUnVsZTq3AbpIswEasAEKFW9ubHlfb25lX2tpbmRfb2ZfcnVsZRJVRWFjaCBBY2Nlc3NSdWxlIG11c3Qgc3BlY2lmeSBlaXRoZXIgZ2xvYmFsX2FjY2VzcyBvciBjb2xsZWN0aW9uX2FjY2VzcywgYnV0IG5vdCBib3RoLhpAKHRoaXMuZ2xvYmFsX2FjY2VzcyA9PSBudWxsKSAhPSAodGhpcy5jb2xsZWN0aW9uX2FjY2VzcyA9PSBudWxsKSI8ChBHbG9iYWxBY2Nlc3NSdWxlEigKC2FjY2Vzc190eXBlGAEgASgJQhO6SBByDlIEcmVhZFIGbWFuYWdlIvwBChRDb2xsZWN0aW9uQWNjZXNzUnVsZRI0Cg9jb2xsZWN0aW9uX25hbWUYASABKAlCG7pIGHIWEAQYQDIQXlthLXpBLVowLTktX10rJBIsCgthY2Nlc3NfdHlwZRgCIAEoCUIXukgUchJSBHJlYWRSCnJlYWQtd3JpdGUSUAoHcGF5bG9hZBgDIAMoCzI/LnFkcmFudC5jbG91ZC5jbHVzdGVyLmF1dGgudjMuQ29sbGVjdGlvbkFjY2Vzc1J1bGUuUGF5bG9hZEVudHJ5Gi4KDFBheWxvYWRFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBMo0GChVEYXRhYmFzZUFwaUtleVNlcnZpY2US4QEKE0xpc3REYXRhYmFzZUFwaUtleXMSOC5xZHJhbnQuY2xvdWQuY2x1c3Rlci5hdXRoLnYzLkxpc3REYXRhYmFzZUFwaUtleXNSZXF1ZXN0GjkucWRyYW50LmNsb3VkLmNsdXN0ZXIuYXV0aC52My5MaXN0RGF0YWJhc2VBcGlLZXlzUmVzcG9uc2UiVYq1GA1yZWFkOmFwaV9rZXlzgtPkkwI+EjwvYXBpL2NsdXN0ZXIvYXV0aC92My9hY2NvdW50cy97YWNjb3VudF9pZH0vZGF0YWJhc2UtYXBpLWtleXMSkAIKFENyZWF0ZURhdGFiYXNlQXBpS2V5EjkucWRyYW50LmNsb3VkLmNsdXN0ZXIuYXV0aC52My5DcmVhdGVEYXRhYmFzZUFwaUtleVJlcXVlc3QaOi5xZHJhbnQuY2xvdWQuY2x1c3Rlci5hdXRoLnYzLkNyZWF0ZURhdGFiYXNlQXBpS2V5UmVzcG9uc2UigAGKtRgOd3JpdGU6YXBpX2tleXOStRgSYXBpX2tleS5hY2NvdW50X2lkgtPkkwJSOgEqIk0vYXBpL2NsdXN0ZXIvYXV0aC92My9hY2NvdW50cy97ZGF0YWJhc2VfYXBpX2tleS5hY2NvdW50X2lkfS9kYXRhYmFzZS1hcGkta2V5cxL8AQoURGVsZXRlRGF0YWJhc2VBcGlLZXkSOS5xZHJhbnQuY2xvdWQuY2x1c3Rlci5hdXRoLnYzLkRlbGV0ZURhdGFiYXNlQXBpS2V5UmVxdWVzdBo6LnFkcmFudC5jbG91ZC5jbHVzdGVyLmF1dGgudjMuRGVsZXRlRGF0YWJhc2VBcGlLZXlSZXNwb25zZSJtirUYD2RlbGV0ZTphcGlfa2V5c4LT5JMCVCpSL2FwaS9jbHVzdGVyL2F1dGgvdjMvYWNjb3VudHMve2FjY291bnRfaWR9L2RhdGFiYXNlLWFwaS1rZXlzL3tkYXRhYmFzZV9hcGlfa2V5X2lkfUKiAgogY29tLnFkcmFudC5jbG91ZC5jbHVzdGVyLmF1dGgudjNCE0RhdGFiYXNlQXBpS2V5UHJvdG9QAVpUZ2l0aHViLmNvbS9xZHJhbnQvcWRyYW50LWNsb3VkLXB1YmxpYy1hcGkvZ2VuL2dvL3FkcmFudC9jbG91ZC9jbHVzdGVyL2F1dGgvdjM7YXV0aHYzogIEUUNDQaoCHFFkcmFudC5DbG91ZC5DbHVzdGVyLkF1dGguVjPKAhxRZHJhbnRcQ2xvdWRcQ2x1c3RlclxBdXRoXFYz4gIoUWRyYW50XENsb3VkXENsdXN0ZXJcQXV0aFxWM1xHUEJNZXRhZGF0YeoCIFFkcmFudDo6Q2xvdWQ6OkNsdXN0ZXI6OkF1dGg6OlYzYgZwcm90bzM", [file_buf_validate_validate, file_google_api_annotations, file_google_protobuf_timestamp, file_qdrant_cloud_common_v1_common]);

/**
 * ListDatabaseApiKeysRequest is the request for the ListDatabaseApiKeys function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v3.ListDatabaseApiKeysRequest
 */
export type ListDatabaseApiKeysRequest = Message<"qdrant.cloud.cluster.auth.v3.ListDatabaseApiKeysRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier of the cluster (in Guid format).
   * This is a required field.
   *
   * @generated from field: string cluster_id = 2;
   */
  clusterId: string;
};

/**
 * Describes the message qdrant.cloud.cluster.auth.v3.ListDatabaseApiKeysRequest.
 * Use `create(ListDatabaseApiKeysRequestSchema)` to create a new message.
 */
export const ListDatabaseApiKeysRequestSchema: GenMessage<ListDatabaseApiKeysRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v3_database_api_key, 0);

/**
 * ListDatabaseApiKeysResponse is the response from the ListDatabaseApiKeys function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v3.ListDatabaseApiKeysResponse
 */
export type ListDatabaseApiKeysResponse = Message<"qdrant.cloud.cluster.auth.v3.ListDatabaseApiKeysResponse"> & {
  /**
   * The actual database api keys in this list.
   *
   * @generated from field: repeated qdrant.cloud.cluster.auth.v3.DatabaseApiKey items = 1;
   */
  items: DatabaseApiKey[];
};

/**
 * Describes the message qdrant.cloud.cluster.auth.v3.ListDatabaseApiKeysResponse.
 * Use `create(ListDatabaseApiKeysResponseSchema)` to create a new message.
 */
export const ListDatabaseApiKeysResponseSchema: GenMessage<ListDatabaseApiKeysResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v3_database_api_key, 1);

/**
 * CreateDatabaseApiKeyRequest is the request for the CreateDatabaseApiKey function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v3.CreateDatabaseApiKeyRequest
 */
export type CreateDatabaseApiKeyRequest = Message<"qdrant.cloud.cluster.auth.v3.CreateDatabaseApiKeyRequest"> & {
  /**
   * The actual database api key.
   *
   * @generated from field: qdrant.cloud.cluster.auth.v3.DatabaseApiKey database_api_key = 1;
   */
  databaseApiKey?: DatabaseApiKey;
};

/**
 * Describes the message qdrant.cloud.cluster.auth.v3.CreateDatabaseApiKeyRequest.
 * Use `create(CreateDatabaseApiKeyRequestSchema)` to create a new message.
 */
export const CreateDatabaseApiKeyRequestSchema: GenMessage<CreateDatabaseApiKeyRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v3_database_api_key, 2);

/**
 * CreateDatabaseApiKeyResponse is the response from the CreateDatabaseApiKey function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v3.CreateDatabaseApiKeyResponse
 */
export type CreateDatabaseApiKeyResponse = Message<"qdrant.cloud.cluster.auth.v3.CreateDatabaseApiKeyResponse"> & {
  /**
   * The actual database api key.
   *
   * @generated from field: qdrant.cloud.cluster.auth.v3.DatabaseApiKey database_api_key = 1;
   */
  databaseApiKey?: DatabaseApiKey;
};

/**
 * Describes the message qdrant.cloud.cluster.auth.v3.CreateDatabaseApiKeyResponse.
 * Use `create(CreateDatabaseApiKeyResponseSchema)` to create a new message.
 */
export const CreateDatabaseApiKeyResponseSchema: GenMessage<CreateDatabaseApiKeyResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v3_database_api_key, 3);

/**
 * DeleteDatabaseApiKeyRequest is the request for the DeleteDatabaseApiKey function.
 *
 * @generated from message qdrant.cloud.cluster.auth.v3.DeleteDatabaseApiKeyRequest
 */
export type DeleteDatabaseApiKeyRequest = Message<"qdrant.cloud.cluster.auth.v3.DeleteDatabaseApiKeyRequest"> & {
  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * The identifier for the cluster (in Guid format).
   * This cluster should be part of the provided account.
   * This is a required field.
   *
   * @generated from field: string cluster_id = 2;
   */
  clusterId: string;

  /**
   * The identifier of the database api key (in Guid format).
   * This is a required field.
   *
   * @generated from field: string database_api_key_id = 3;
   */
  databaseApiKeyId: string;
};

/**
 * Describes the message qdrant.cloud.cluster.auth.v3.DeleteDatabaseApiKeyRequest.
 * Use `create(DeleteDatabaseApiKeyRequestSchema)` to create a new message.
 */
export const DeleteDatabaseApiKeyRequestSchema: GenMessage<DeleteDatabaseApiKeyRequest> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v3_database_api_key, 4);

/**
 * DeleteDatabaseApiKeyResponse is the response from the DeleteDatabaseApiKey function.
 *
 * Empty
 *
 * @generated from message qdrant.cloud.cluster.auth.v3.DeleteDatabaseApiKeyResponse
 */
export type DeleteDatabaseApiKeyResponse = Message<"qdrant.cloud.cluster.auth.v3.DeleteDatabaseApiKeyResponse"> & {
};

/**
 * Describes the message qdrant.cloud.cluster.auth.v3.DeleteDatabaseApiKeyResponse.
 * Use `create(DeleteDatabaseApiKeyResponseSchema)` to create a new message.
 */
export const DeleteDatabaseApiKeyResponseSchema: GenMessage<DeleteDatabaseApiKeyResponse> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v3_database_api_key, 5);

/**
 * A DatabaseApiKey represents one database api key of a Qdrant cloud account.
 * This database key can grant access to one or more Qdrant databases (clusters).
 *
 * @generated from message qdrant.cloud.cluster.auth.v3.DatabaseApiKey
 */
export type DatabaseApiKey = Message<"qdrant.cloud.cluster.auth.v3.DatabaseApiKey"> & {
  /**
   * Unique identifier for the database api key (in Guid format).
   * This is a read-only field and will be available after a database api key is created.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The identifier of the account (in Guid format).
   * This is a required field.
   *
   * @generated from field: string account_id = 2;
   */
  accountId: string;

  /**
   * Timestamp when the database api key was created.
   * This is a read-only field and will be available after a database api key is created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * The identifier of the cluster (in Guid format).
   * This is a required field.
   *
   * @generated from field: string cluster_id = 4;
   */
  clusterId: string;

  /**
   * Name of the database api key.
   * This is a required field.
   * Name can only contain letters, numbers, spaces, underscores and dashes.
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * The expiration time of the database api key. The key will be invalid after this time.
   * This field is optional, and if not provided, the key does not expire.
   *
   * @generated from field: optional google.protobuf.Timestamp expiration_time = 6;
   */
  expirationTime?: Timestamp;

  /**
   * A list of rules to grant access to the Qdrant database or to specific
   * collections. If no access rules are provided, global access to the database
   * with manage permissions is assumed. The list can contain a maximum of 20
   * access rules.
   *
   * @generated from field: repeated qdrant.cloud.cluster.auth.v3.AccessRule access_rules = 7;
   */
  accessRules: AccessRule[];

  /**
   * The email of the user who created the database api key.
   * This is a read-only field and will be available after a database api key is created.
   *
   * @generated from field: string created_by_email = 8;
   */
  createdByEmail: string;

  /**
   * Postfix for the database api key, this represents the last bytes of the key.
   * This is a read-only field and will be available after a database api key is created.
   *
   * @generated from field: string postfix = 9;
   */
  postfix: string;

  /**
   * The key for the database api key.
   * This is a read-only field and will be available only once in the response of CreateDatabaseApiKey.
   * You should securely store this key and it should be handled as a secret.
   *
   * @generated from field: string key = 10;
   */
  key: string;
};

/**
 * Describes the message qdrant.cloud.cluster.auth.v3.DatabaseApiKey.
 * Use `create(DatabaseApiKeySchema)` to create a new message.
 */
export const DatabaseApiKeySchema: GenMessage<DatabaseApiKey> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v3_database_api_key, 6);

/**
 * Represents an access rule. An access rule can either define global access to
 * the database or access to a specific collection.
 *
 * @generated from message qdrant.cloud.cluster.auth.v3.AccessRule
 */
export type AccessRule = Message<"qdrant.cloud.cluster.auth.v3.AccessRule"> & {
  /**
   * A rule granting global access to the entire database.
   * Only one of the fields (global_access or collection_access) should be set in a single rule.
   *
   * @generated from field: qdrant.cloud.cluster.auth.v3.GlobalAccessRule global_access = 1;
   */
  globalAccess?: GlobalAccessRule;

  /**
   * A rule granting access to a specific collection in the database.
   * Only one of the fields (global_access or collection_access) should be set in a single rule.
   *
   * @generated from field: qdrant.cloud.cluster.auth.v3.CollectionAccessRule collection_access = 2;
   */
  collectionAccess?: CollectionAccessRule;
};

/**
 * Describes the message qdrant.cloud.cluster.auth.v3.AccessRule.
 * Use `create(AccessRuleSchema)` to create a new message.
 */
export const AccessRuleSchema: GenMessage<AccessRule> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v3_database_api_key, 7);

/**
 * Represents a global access rule that grants access to the entire database.
 *
 * @generated from message qdrant.cloud.cluster.auth.v3.GlobalAccessRule
 */
export type GlobalAccessRule = Message<"qdrant.cloud.cluster.auth.v3.GlobalAccessRule"> & {
  /**
   * The type of access granted at the global level.
   * "read" allows read-only access to the database, while "manage" allows read and write access.
   * This is a required field.
   *
   * @generated from field: string access_type = 1;
   */
  accessType: string;
};

/**
 * Describes the message qdrant.cloud.cluster.auth.v3.GlobalAccessRule.
 * Use `create(GlobalAccessRuleSchema)` to create a new message.
 */
export const GlobalAccessRuleSchema: GenMessage<GlobalAccessRule> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v3_database_api_key, 8);

/**
 * Represents an access rule for a specific collection in the database.
 *
 * @generated from message qdrant.cloud.cluster.auth.v3.CollectionAccessRule
 */
export type CollectionAccessRule = Message<"qdrant.cloud.cluster.auth.v3.CollectionAccessRule"> & {
  /**
   * The name of the collection.
   * This is a required field.
   *
   * @generated from field: string collection_name = 1;
   */
  collectionName: string;

  /**
   * The type of access granted for the collection.
   * "read" allows read-only access, while "read-write" allows both read and write access.
   * This is a required field.
   *
   * @generated from field: string access_type = 2;
   */
  accessType: string;

  /**
   * An optional payload containing key-value pairs.
   *
   * @generated from field: map<string, string> payload = 3;
   */
  payload: { [key: string]: string };
};

/**
 * Describes the message qdrant.cloud.cluster.auth.v3.CollectionAccessRule.
 * Use `create(CollectionAccessRuleSchema)` to create a new message.
 */
export const CollectionAccessRuleSchema: GenMessage<CollectionAccessRule> = /*@__PURE__*/
  messageDesc(file_qdrant_cloud_cluster_auth_v3_database_api_key, 9);

/**
 * DatabaseApiKeyService is the API used to manage keys that give access to a cluster database.
 *
 * @generated from service qdrant.cloud.cluster.auth.v3.DatabaseApiKeyService
 */
export const DatabaseApiKeyService: GenService<{
  /**
   * Fetch all database api keys in the account identified by the given ID.
   * Required permissions:
   * - read:api_keys
   *
   * @generated from rpc qdrant.cloud.cluster.auth.v3.DatabaseApiKeyService.ListDatabaseApiKeys
   */
  listDatabaseApiKeys: {
    methodKind: "unary";
    input: typeof ListDatabaseApiKeysRequestSchema;
    output: typeof ListDatabaseApiKeysResponseSchema;
  },
  /**
   * Creates a database api key in the account identified by the given ID.
   * Required permissions:
   * - write:api_keys
   *
   * @generated from rpc qdrant.cloud.cluster.auth.v3.DatabaseApiKeyService.CreateDatabaseApiKey
   */
  createDatabaseApiKey: {
    methodKind: "unary";
    input: typeof CreateDatabaseApiKeyRequestSchema;
    output: typeof CreateDatabaseApiKeyResponseSchema;
  },
  /**
   * Deletes a database api key in the account identified by the given ID.
   * Required permissions:
   * - delete:api_keys
   *
   * @generated from rpc qdrant.cloud.cluster.auth.v3.DatabaseApiKeyService.DeleteDatabaseApiKey
   */
  deleteDatabaseApiKey: {
    methodKind: "unary";
    input: typeof DeleteDatabaseApiKeyRequestSchema;
    output: typeof DeleteDatabaseApiKeyResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_qdrant_cloud_cluster_auth_v3_database_api_key, 0);

