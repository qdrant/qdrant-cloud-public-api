# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: k8s.io/api/networking/v1/generated.proto
# Protobuf Python Version: 6.32.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    32,
    0,
    '',
    'k8s.io/api/networking/v1/generated.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from k8s.io.api.core.v1 import generated_pb2 as k8s_dot_io_dot_api_dot_core_dot_v1_dot_generated__pb2
from k8s.io.apimachinery.pkg.apis.meta.v1 import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_apis_dot_meta_dot_v1_dot_generated__pb2
from k8s.io.apimachinery.pkg.runtime import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_runtime_dot_generated__pb2
from k8s.io.apimachinery.pkg.runtime.schema import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_runtime_dot_schema_dot_generated__pb2
from k8s.io.apimachinery.pkg.util.intstr import generated_pb2 as k8s_dot_io_dot_apimachinery_dot_pkg_dot_util_dot_intstr_dot_generated__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n(k8s.io/api/networking/v1/generated.proto\x12\x18k8s.io.api.networking.v1\x1a\"k8s.io/api/core/v1/generated.proto\x1a\x34k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto\x1a/k8s.io/apimachinery/pkg/runtime/generated.proto\x1a\x36k8s.io/apimachinery/pkg/runtime/schema/generated.proto\x1a\x33k8s.io/apimachinery/pkg/util/intstr/generated.proto\"\x85\x01\n\x0fHTTPIngressPath\x12\x12\n\x04path\x18\x01 \x01(\tR\x04path\x12\x1a\n\x08pathType\x18\x03 \x01(\tR\x08pathType\x12\x42\n\x07\x62\x61\x63kend\x18\x02 \x01(\x0b\x32(.k8s.io.api.networking.v1.IngressBackendR\x07\x62\x61\x63kend\"W\n\x14HTTPIngressRuleValue\x12?\n\x05paths\x18\x01 \x03(\x0b\x32).k8s.io.api.networking.v1.HTTPIngressPathR\x05paths\"5\n\x07IPBlock\x12\x12\n\x04\x63idr\x18\x01 \x01(\tR\x04\x63idr\x12\x16\n\x06\x65xcept\x18\x02 \x03(\tR\x06\x65xcept\"\xd3\x01\n\x07Ingress\x12L\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMetaR\x08metadata\x12\x39\n\x04spec\x18\x02 \x01(\x0b\x32%.k8s.io.api.networking.v1.IngressSpecR\x04spec\x12?\n\x06status\x18\x03 \x01(\x0b\x32\'.k8s.io.api.networking.v1.IngressStatusR\x06status\"\xa6\x01\n\x0eIngressBackend\x12I\n\x07service\x18\x04 \x01(\x0b\x32/.k8s.io.api.networking.v1.IngressServiceBackendR\x07service\x12I\n\x08resource\x18\x03 \x01(\x0b\x32-.k8s.io.api.core.v1.TypedLocalObjectReferenceR\x08resource\"\x9c\x01\n\x0cIngressClass\x12L\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMetaR\x08metadata\x12>\n\x04spec\x18\x02 \x01(\x0b\x32*.k8s.io.api.networking.v1.IngressClassSpecR\x04spec\"\x9c\x01\n\x10IngressClassList\x12J\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMetaR\x08metadata\x12<\n\x05items\x18\x02 \x03(\x0b\x32&.k8s.io.api.networking.v1.IngressClassR\x05items\"\x99\x01\n\x1fIngressClassParametersReference\x12\x1a\n\x08\x61PIGroup\x18\x01 \x01(\tR\x08\x61PIGroup\x12\x12\n\x04kind\x18\x02 \x01(\tR\x04kind\x12\x12\n\x04name\x18\x03 \x01(\tR\x04name\x12\x14\n\x05scope\x18\x04 \x01(\tR\x05scope\x12\x1c\n\tnamespace\x18\x05 \x01(\tR\tnamespace\"\x8d\x01\n\x10IngressClassSpec\x12\x1e\n\ncontroller\x18\x01 \x01(\tR\ncontroller\x12Y\n\nparameters\x18\x02 \x01(\x0b\x32\x39.k8s.io.api.networking.v1.IngressClassParametersReferenceR\nparameters\"\x92\x01\n\x0bIngressList\x12J\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMetaR\x08metadata\x12\x37\n\x05items\x18\x02 \x03(\x0b\x32!.k8s.io.api.networking.v1.IngressR\x05items\"y\n\x0bIngressRule\x12\x12\n\x04host\x18\x01 \x01(\tR\x04host\x12V\n\x10ingressRuleValue\x18\x02 \x01(\x0b\x32*.k8s.io.api.networking.v1.IngressRuleValueR\x10ingressRuleValue\"V\n\x10IngressRuleValue\x12\x42\n\x04http\x18\x01 \x01(\x0b\x32..k8s.io.api.networking.v1.HTTPIngressRuleValueR\x04http\"m\n\x15IngressServiceBackend\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12@\n\x04port\x18\x02 \x01(\x0b\x32,.k8s.io.api.networking.v1.ServiceBackendPortR\x04port\"\x80\x02\n\x0bIngressSpec\x12*\n\x10ingressClassName\x18\x04 \x01(\tR\x10ingressClassName\x12P\n\x0e\x64\x65\x66\x61ultBackend\x18\x01 \x01(\x0b\x32(.k8s.io.api.networking.v1.IngressBackendR\x0e\x64\x65\x66\x61ultBackend\x12\x36\n\x03tls\x18\x02 \x03(\x0b\x32$.k8s.io.api.networking.v1.IngressTLSR\x03tls\x12;\n\x05rules\x18\x03 \x03(\x0b\x32%.k8s.io.api.networking.v1.IngressRuleR\x05rules\"[\n\rIngressStatus\x12J\n\x0cloadBalancer\x18\x01 \x01(\x0b\x32&.k8s.io.api.core.v1.LoadBalancerStatusR\x0cloadBalancer\"B\n\nIngressTLS\x12\x14\n\x05hosts\x18\x01 \x03(\tR\x05hosts\x12\x1e\n\nsecretName\x18\x02 \x01(\tR\nsecretName\"\x9e\x01\n\rNetworkPolicy\x12L\n\x08metadata\x18\x01 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMetaR\x08metadata\x12?\n\x04spec\x18\x02 \x01(\x0b\x32+.k8s.io.api.networking.v1.NetworkPolicySpecR\x04spec\"\x99\x01\n\x17NetworkPolicyEgressRule\x12\x41\n\x05ports\x18\x01 \x03(\x0b\x32+.k8s.io.api.networking.v1.NetworkPolicyPortR\x05ports\x12;\n\x02to\x18\x02 \x03(\x0b\x32+.k8s.io.api.networking.v1.NetworkPolicyPeerR\x02to\"\x9e\x01\n\x18NetworkPolicyIngressRule\x12\x41\n\x05ports\x18\x01 \x03(\x0b\x32+.k8s.io.api.networking.v1.NetworkPolicyPortR\x05ports\x12?\n\x04\x66rom\x18\x02 \x03(\x0b\x32+.k8s.io.api.networking.v1.NetworkPolicyPeerR\x04\x66rom\"\x9e\x01\n\x11NetworkPolicyList\x12J\n\x08metadata\x18\x01 \x01(\x0b\x32..k8s.io.apimachinery.pkg.apis.meta.v1.ListMetaR\x08metadata\x12=\n\x05items\x18\x02 \x03(\x0b\x32\'.k8s.io.api.networking.v1.NetworkPolicyR\x05items\"\x8a\x02\n\x11NetworkPolicyPeer\x12U\n\x0bpodSelector\x18\x01 \x01(\x0b\x32\x33.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorR\x0bpodSelector\x12\x61\n\x11namespaceSelector\x18\x02 \x01(\x0b\x32\x33.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorR\x11namespaceSelector\x12;\n\x07ipBlock\x18\x03 \x01(\x0b\x32!.k8s.io.api.networking.v1.IPBlockR\x07ipBlock\"\x8f\x01\n\x11NetworkPolicyPort\x12\x1a\n\x08protocol\x18\x01 \x01(\tR\x08protocol\x12\x44\n\x04port\x18\x02 \x01(\x0b\x32\x30.k8s.io.apimachinery.pkg.util.intstr.IntOrStringR\x04port\x12\x18\n\x07\x65ndPort\x18\x03 \x01(\x05R\x07\x65ndPort\"\xa5\x02\n\x11NetworkPolicySpec\x12U\n\x0bpodSelector\x18\x01 \x01(\x0b\x32\x33.k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorR\x0bpodSelector\x12L\n\x07ingress\x18\x02 \x03(\x0b\x32\x32.k8s.io.api.networking.v1.NetworkPolicyIngressRuleR\x07ingress\x12I\n\x06\x65gress\x18\x03 \x03(\x0b\x32\x31.k8s.io.api.networking.v1.NetworkPolicyEgressRuleR\x06\x65gress\x12 \n\x0bpolicyTypes\x18\x04 \x03(\tR\x0bpolicyTypes\"@\n\x12ServiceBackendPort\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n\x06number\x18\x02 \x01(\x05R\x06numberB\x1aZ\x18k8s.io/api/networking/v1')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'k8s.io.api.networking.v1.generated_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z\030k8s.io/api/networking/v1'
  _globals['_HTTPINGRESSPATH']._serialized_start=319
  _globals['_HTTPINGRESSPATH']._serialized_end=452
  _globals['_HTTPINGRESSRULEVALUE']._serialized_start=454
  _globals['_HTTPINGRESSRULEVALUE']._serialized_end=541
  _globals['_IPBLOCK']._serialized_start=543
  _globals['_IPBLOCK']._serialized_end=596
  _globals['_INGRESS']._serialized_start=599
  _globals['_INGRESS']._serialized_end=810
  _globals['_INGRESSBACKEND']._serialized_start=813
  _globals['_INGRESSBACKEND']._serialized_end=979
  _globals['_INGRESSCLASS']._serialized_start=982
  _globals['_INGRESSCLASS']._serialized_end=1138
  _globals['_INGRESSCLASSLIST']._serialized_start=1141
  _globals['_INGRESSCLASSLIST']._serialized_end=1297
  _globals['_INGRESSCLASSPARAMETERSREFERENCE']._serialized_start=1300
  _globals['_INGRESSCLASSPARAMETERSREFERENCE']._serialized_end=1453
  _globals['_INGRESSCLASSSPEC']._serialized_start=1456
  _globals['_INGRESSCLASSSPEC']._serialized_end=1597
  _globals['_INGRESSLIST']._serialized_start=1600
  _globals['_INGRESSLIST']._serialized_end=1746
  _globals['_INGRESSRULE']._serialized_start=1748
  _globals['_INGRESSRULE']._serialized_end=1869
  _globals['_INGRESSRULEVALUE']._serialized_start=1871
  _globals['_INGRESSRULEVALUE']._serialized_end=1957
  _globals['_INGRESSSERVICEBACKEND']._serialized_start=1959
  _globals['_INGRESSSERVICEBACKEND']._serialized_end=2068
  _globals['_INGRESSSPEC']._serialized_start=2071
  _globals['_INGRESSSPEC']._serialized_end=2327
  _globals['_INGRESSSTATUS']._serialized_start=2329
  _globals['_INGRESSSTATUS']._serialized_end=2420
  _globals['_INGRESSTLS']._serialized_start=2422
  _globals['_INGRESSTLS']._serialized_end=2488
  _globals['_NETWORKPOLICY']._serialized_start=2491
  _globals['_NETWORKPOLICY']._serialized_end=2649
  _globals['_NETWORKPOLICYEGRESSRULE']._serialized_start=2652
  _globals['_NETWORKPOLICYEGRESSRULE']._serialized_end=2805
  _globals['_NETWORKPOLICYINGRESSRULE']._serialized_start=2808
  _globals['_NETWORKPOLICYINGRESSRULE']._serialized_end=2966
  _globals['_NETWORKPOLICYLIST']._serialized_start=2969
  _globals['_NETWORKPOLICYLIST']._serialized_end=3127
  _globals['_NETWORKPOLICYPEER']._serialized_start=3130
  _globals['_NETWORKPOLICYPEER']._serialized_end=3396
  _globals['_NETWORKPOLICYPORT']._serialized_start=3399
  _globals['_NETWORKPOLICYPORT']._serialized_end=3542
  _globals['_NETWORKPOLICYSPEC']._serialized_start=3545
  _globals['_NETWORKPOLICYSPEC']._serialized_end=3838
  _globals['_SERVICEBACKENDPORT']._serialized_start=3840
  _globals['_SERVICEBACKENDPORT']._serialized_end=3904
# @@protoc_insertion_point(module_scope)
