# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from qdrant.cloud.ui.v1 import ui_pb2 as qdrant_dot_cloud_dot_ui_dot_v1_dot_ui__pb2


class UIViewServiceStub(object):
    """UIViewService provides optimized methods for UI components that need aggregated data.
    This service combines multiple entities to reduce API round trips for common UI patterns.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListUsersWithRoles = channel.unary_unary(
                '/qdrant.cloud.ui.v1.UIViewService/ListUsersWithRoles',
                request_serializer=qdrant_dot_cloud_dot_ui_dot_v1_dot_ui__pb2.ListUsersWithRolesRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_ui_dot_v1_dot_ui__pb2.ListUsersWithRolesResponse.FromString,
                _registered_method=True)


class UIViewServiceServicer(object):
    """UIViewService provides optimized methods for UI components that need aggregated data.
    This service combines multiple entities to reduce API round trips for common UI patterns.
    """

    def ListUsersWithRoles(self, request, context):
        """Lists users in an account with their assigned roles.
        This endpoint provides a consolidated view that would otherwise require separate calls
        to ListUsers and ListUserRoles for each user.
        Required permissions:
        - read:users
        - read:roles
        buf:lint:ignore QDRANT_CLOUD_METHOD_OPTIONS
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UIViewServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListUsersWithRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUsersWithRoles,
                    request_deserializer=qdrant_dot_cloud_dot_ui_dot_v1_dot_ui__pb2.ListUsersWithRolesRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_ui_dot_v1_dot_ui__pb2.ListUsersWithRolesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qdrant.cloud.ui.v1.UIViewService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('qdrant.cloud.ui.v1.UIViewService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UIViewService(object):
    """UIViewService provides optimized methods for UI components that need aggregated data.
    This service combines multiple entities to reduce API round trips for common UI patterns.
    """

    @staticmethod
    def ListUsersWithRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.ui.v1.UIViewService/ListUsersWithRoles',
            qdrant_dot_cloud_dot_ui_dot_v1_dot_ui__pb2.ListUsersWithRolesRequest.SerializeToString,
            qdrant_dot_cloud_dot_ui_dot_v1_dot_ui__pb2.ListUsersWithRolesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
