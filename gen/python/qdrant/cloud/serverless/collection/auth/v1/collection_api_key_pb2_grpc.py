# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from qdrant.cloud.serverless.collection.auth.v1 import collection_api_key_pb2 as qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2


class CollectionApiKeyServiceStub(object):
    """Service for managing API keys for a serverless collection
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListCollectionApiKeys = channel.unary_unary(
                '/qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService/ListCollectionApiKeys',
                request_serializer=qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.ListCollectionApiKeysRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.ListCollectionApiKeysResponse.FromString,
                _registered_method=True)
        self.CreateCollectionApiKey = channel.unary_unary(
                '/qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService/CreateCollectionApiKey',
                request_serializer=qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.CreateCollectionApiKeyRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.CreateCollectionApiKeyResponse.FromString,
                _registered_method=True)
        self.DeleteCollectionApiKey = channel.unary_unary(
                '/qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService/DeleteCollectionApiKey',
                request_serializer=qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.DeleteCollectionApiKeyRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.DeleteCollectionApiKeyResponse.FromString,
                _registered_method=True)


class CollectionApiKeyServiceServicer(object):
    """Service for managing API keys for a serverless collection
    """

    def ListCollectionApiKeys(self, request, context):
        """ListCollectionApiKeys returns all API keys for a collection
        Required Permissions:
        - read:serverless_api_keys
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCollectionApiKey(self, request, context):
        """CreateCollectionApiKey creates a new API key for a collection
        Required Permissions:
        - write:serverless_api_keys
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCollectionApiKey(self, request, context):
        """DeleteCollectionApiKey removes an API key from a collection
        Required Permissions:
        - delete:serverless_api_keys
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CollectionApiKeyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListCollectionApiKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCollectionApiKeys,
                    request_deserializer=qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.ListCollectionApiKeysRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.ListCollectionApiKeysResponse.SerializeToString,
            ),
            'CreateCollectionApiKey': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCollectionApiKey,
                    request_deserializer=qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.CreateCollectionApiKeyRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.CreateCollectionApiKeyResponse.SerializeToString,
            ),
            'DeleteCollectionApiKey': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCollectionApiKey,
                    request_deserializer=qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.DeleteCollectionApiKeyRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.DeleteCollectionApiKeyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CollectionApiKeyService(object):
    """Service for managing API keys for a serverless collection
    """

    @staticmethod
    def ListCollectionApiKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService/ListCollectionApiKeys',
            qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.ListCollectionApiKeysRequest.SerializeToString,
            qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.ListCollectionApiKeysResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateCollectionApiKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService/CreateCollectionApiKey',
            qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.CreateCollectionApiKeyRequest.SerializeToString,
            qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.CreateCollectionApiKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteCollectionApiKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService/DeleteCollectionApiKey',
            qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.DeleteCollectionApiKeyRequest.SerializeToString,
            qdrant_dot_cloud_dot_serverless_dot_collection_dot_auth_dot_v1_dot_collection__api__key__pb2.DeleteCollectionApiKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
