# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from qdrant.cloud.account.v1 import account_pb2 as qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2


class AccountServiceStub(object):
    """AccountService is the API used to configure Accounts.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListAccounts = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/ListAccounts',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountsRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountsResponse.FromString,
                _registered_method=True)
        self.GetAccount = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/GetAccount',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountResponse.FromString,
                _registered_method=True)
        self.CreateAccount = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/CreateAccount',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountResponse.FromString,
                _registered_method=True)
        self.UpdateAccount = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/UpdateAccount',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.UpdateAccountRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.UpdateAccountResponse.FromString,
                _registered_method=True)
        self.DeleteAccount = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/DeleteAccount',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountResponse.FromString,
                _registered_method=True)
        self.ListAccountInvites = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/ListAccountInvites',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountInvitesRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountInvitesResponse.FromString,
                _registered_method=True)
        self.ListMyAccountInvites = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/ListMyAccountInvites',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListMyAccountInvitesRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListMyAccountInvitesResponse.FromString,
                _registered_method=True)
        self.GetAccountInvite = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/GetAccountInvite',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountInviteRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountInviteResponse.FromString,
                _registered_method=True)
        self.CreateAccountInvite = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/CreateAccountInvite',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountInviteRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountInviteResponse.FromString,
                _registered_method=True)
        self.DeleteAccountInvite = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/DeleteAccountInvite',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountInviteRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountInviteResponse.FromString,
                _registered_method=True)
        self.AcceptAccountInvite = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/AcceptAccountInvite',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.AcceptAccountInviteRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.AcceptAccountInviteResponse.FromString,
                _registered_method=True)
        self.RejectOrganizationInvite = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/RejectOrganizationInvite',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.RejectOrganizationInviteRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.RejectOrganizationInviteResponse.FromString,
                _registered_method=True)


class AccountServiceServicer(object):
    """AccountService is the API used to configure Accounts.
    """

    def ListAccounts(self, request, context):
        """Fetch all accounts associated for the provided user, where the user has the provided permission.
        Required permissions:
        - read:accounts
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccount(self, request, context):
        """Get an account identified by the given ID.
        Required permissions:
        - read:account
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAccount(self, request, context):
        """Creates an account for the authenticated user.
        Required permissions:
        - None (authenticated only)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAccount(self, request, context):
        """Update an account identified by the given ID.
        Required permissions:
        - write:account
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAccount(self, request, context):
        """Deletes an account identified by the given ID.
        Required permissions:
        - delete:account
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAccountInvites(self, request, context):
        """Fetch all account invites in the account identified by the given account ID.
        The authenticated user must be a member of the account identifier by the given account ID.
        Required permissions:
        - read:invites
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMyAccountInvites(self, request, context):
        """Fetch all account invites for the authenticated user.
        Required permissions:
        - None (authenticated only)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountInvite(self, request, context):
        """Fetch an account invite by its id.
        The authenticated user must be a member of the account that the invite is for.
        Required permissions:
        - read:invites
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAccountInvite(self, request, context):
        """Create a new account invite.
        The authenticated user must be a member of the account that the invite is for.
        Required permissions:
        - write:invites
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAccountInvite(self, request, context):
        """Delete an account invite
        The authenticated user must be a member of the account that the invite is for.
        Required permissions:
        - delete:invites
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcceptAccountInvite(self, request, context):
        """Accept an account invite
        The authenticated user's email address must match the email address specified in
        the invite.
        Required permissions:
        - None (authenticated only)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RejectOrganizationInvite(self, request, context):
        """Reject an account invite
        The authenticated user's email address must match the email address specified in
        the invite.
        Required permissions:
        - None (authenticated only)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AccountServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAccounts,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountsRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountsResponse.SerializeToString,
            ),
            'GetAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccount,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountResponse.SerializeToString,
            ),
            'CreateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccount,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountResponse.SerializeToString,
            ),
            'UpdateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAccount,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.UpdateAccountRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.UpdateAccountResponse.SerializeToString,
            ),
            'DeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAccount,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountResponse.SerializeToString,
            ),
            'ListAccountInvites': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAccountInvites,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountInvitesRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountInvitesResponse.SerializeToString,
            ),
            'ListMyAccountInvites': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMyAccountInvites,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListMyAccountInvitesRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListMyAccountInvitesResponse.SerializeToString,
            ),
            'GetAccountInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountInvite,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountInviteRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountInviteResponse.SerializeToString,
            ),
            'CreateAccountInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccountInvite,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountInviteRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountInviteResponse.SerializeToString,
            ),
            'DeleteAccountInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAccountInvite,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountInviteRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountInviteResponse.SerializeToString,
            ),
            'AcceptAccountInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptAccountInvite,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.AcceptAccountInviteRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.AcceptAccountInviteResponse.SerializeToString,
            ),
            'RejectOrganizationInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.RejectOrganizationInvite,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.RejectOrganizationInviteRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.RejectOrganizationInviteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qdrant.cloud.account.v1.AccountService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('qdrant.cloud.account.v1.AccountService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AccountService(object):
    """AccountService is the API used to configure Accounts.
    """

    @staticmethod
    def ListAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/ListAccounts',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountsRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/GetAccount',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/CreateAccount',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/UpdateAccount',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.UpdateAccountRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.UpdateAccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/DeleteAccount',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListAccountInvites(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/ListAccountInvites',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountInvitesRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountInvitesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListMyAccountInvites(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/ListMyAccountInvites',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListMyAccountInvitesRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListMyAccountInvitesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAccountInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/GetAccountInvite',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountInviteRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountInviteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateAccountInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/CreateAccountInvite',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountInviteRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountInviteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteAccountInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/DeleteAccountInvite',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountInviteRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountInviteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AcceptAccountInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/AcceptAccountInvite',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.AcceptAccountInviteRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.AcceptAccountInviteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RejectOrganizationInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/RejectOrganizationInvite',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.RejectOrganizationInviteRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.RejectOrganizationInviteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
