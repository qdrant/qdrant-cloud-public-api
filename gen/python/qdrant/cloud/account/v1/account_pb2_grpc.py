# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from qdrant.cloud.account.v1 import account_pb2 as qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2


class AccountServiceStub(object):
    """AccountService is the API used to configure Accounts.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListAccounts = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/ListAccounts',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountsRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountsResponse.FromString,
                _registered_method=True)
        self.GetAccount = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/GetAccount',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountResponse.FromString,
                _registered_method=True)
        self.CreateAccount = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/CreateAccount',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountResponse.FromString,
                _registered_method=True)
        self.UpdateAccount = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/UpdateAccount',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.UpdateAccountRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.UpdateAccountResponse.FromString,
                _registered_method=True)
        self.DeleteAccount = channel.unary_unary(
                '/qdrant.cloud.account.v1.AccountService/DeleteAccount',
                request_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountResponse.FromString,
                _registered_method=True)


class AccountServiceServicer(object):
    """AccountService is the API used to configure Accounts.
    """

    def ListAccounts(self, request, context):
        """Fetch all accounts associated for the provided user, where the user has the provided permission.
        Required permissions:
        - read:accounts
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccount(self, request, context):
        """Get an account identified by the given ID.
        Required permissions:
        - read:account
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAccount(self, request, context):
        """Creates an account for the user identified by the given ID.
        Required permissions:
        - None (authenticated only)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAccount(self, request, context):
        """Update an account identified by the given ID.
        Required permissions:
        - write:account
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAccount(self, request, context):
        """Deletes an account identified by the given ID.
        Required permissions:
        - delete:account
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AccountServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAccounts,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountsRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountsResponse.SerializeToString,
            ),
            'GetAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccount,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountResponse.SerializeToString,
            ),
            'CreateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccount,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountResponse.SerializeToString,
            ),
            'UpdateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAccount,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.UpdateAccountRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.UpdateAccountResponse.SerializeToString,
            ),
            'DeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAccount,
                    request_deserializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qdrant.cloud.account.v1.AccountService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('qdrant.cloud.account.v1.AccountService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AccountService(object):
    """AccountService is the API used to configure Accounts.
    """

    @staticmethod
    def ListAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/ListAccounts',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountsRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.ListAccountsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/GetAccount',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.GetAccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/CreateAccount',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.CreateAccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/UpdateAccount',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.UpdateAccountRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.UpdateAccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.account.v1.AccountService/DeleteAccount',
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountRequest.SerializeToString,
            qdrant_dot_cloud_dot_account_dot_v1_dot_account__pb2.DeleteAccountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
