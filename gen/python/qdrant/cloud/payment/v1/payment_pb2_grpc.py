# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from qdrant.cloud.payment.v1 import payment_pb2 as qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2


class PaymentServiceStub(object):
    """PaymentService is the API used to manage payment settings.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListPaymentMethods = channel.unary_unary(
                '/qdrant.cloud.payment.v1.PaymentService/ListPaymentMethods',
                request_serializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.ListPaymentMethodsRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.ListPaymentMethodsResponse.FromString,
                _registered_method=True)
        self.GetPaymentMethod = channel.unary_unary(
                '/qdrant.cloud.payment.v1.PaymentService/GetPaymentMethod',
                request_serializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.GetPaymentMethodRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.GetPaymentMethodResponse.FromString,
                _registered_method=True)
        self.CreatePaymentMethod = channel.unary_unary(
                '/qdrant.cloud.payment.v1.PaymentService/CreatePaymentMethod',
                request_serializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.CreatePaymentMethodRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.CreatePaymentMethodResponse.FromString,
                _registered_method=True)
        self.UpdatePaymentMethod = channel.unary_unary(
                '/qdrant.cloud.payment.v1.PaymentService/UpdatePaymentMethod',
                request_serializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.UpdatePaymentMethodRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.UpdatePaymentMethodResponse.FromString,
                _registered_method=True)
        self.DeletePaymentMethod = channel.unary_unary(
                '/qdrant.cloud.payment.v1.PaymentService/DeletePaymentMethod',
                request_serializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.DeletePaymentMethodRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.DeletePaymentMethodResponse.FromString,
                _registered_method=True)
        self.GetStripeCheckoutSession = channel.unary_unary(
                '/qdrant.cloud.payment.v1.PaymentService/GetStripeCheckoutSession',
                request_serializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.GetStripeCheckoutSessionRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.GetStripeCheckoutSessionResponse.FromString,
                _registered_method=True)
        self.CreateStripeCheckoutSession = channel.unary_unary(
                '/qdrant.cloud.payment.v1.PaymentService/CreateStripeCheckoutSession',
                request_serializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.CreateStripeCheckoutSessionRequest.SerializeToString,
                response_deserializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.CreateStripeCheckoutSessionResponse.FromString,
                _registered_method=True)


class PaymentServiceServicer(object):
    """PaymentService is the API used to manage payment settings.
    """

    def ListPaymentMethods(self, request, context):
        """Lists all payment methods known by the system for the provided account.
        Required permissions:
        - read:payment_information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentMethod(self, request, context):
        """Gets the payment method identified by the given ID.
        Required permissions:
        - read:payment_information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePaymentMethod(self, request, context):
        """Creates a new payment method for the account.
        This method is used to create a new payment method, which can then be connected to a payment provider (like Stripe).
        Required permissions:
        - write:payment_information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePaymentMethod(self, request, context):
        """Updates the payment method for the account.
        This method is used to update the payment method details, such as billing address.
        Required permissions:
        - write:payment_information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePaymentMethod(self, request, context):
        """Delete the payment method identified by the given ID.
        Required permissions:
        - write:payment_information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStripeCheckoutSession(self, request, context):
        """Get the Stripe Checkout session by its ID.
        This method is used to retrieve the session details after it has been created.
        Required permissions:
        - write:payment_information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateStripeCheckoutSession(self, request, context):
        """Initiates the creation of a Stripe Checkout session for the specified account.
        This session can be used by the client (usually via frontend) to interact directly with Stripe's hosted payment page.
        Required permissions:
        - write:payment_information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaymentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListPaymentMethods': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPaymentMethods,
                    request_deserializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.ListPaymentMethodsRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.ListPaymentMethodsResponse.SerializeToString,
            ),
            'GetPaymentMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentMethod,
                    request_deserializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.GetPaymentMethodRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.GetPaymentMethodResponse.SerializeToString,
            ),
            'CreatePaymentMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePaymentMethod,
                    request_deserializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.CreatePaymentMethodRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.CreatePaymentMethodResponse.SerializeToString,
            ),
            'UpdatePaymentMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePaymentMethod,
                    request_deserializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.UpdatePaymentMethodRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.UpdatePaymentMethodResponse.SerializeToString,
            ),
            'DeletePaymentMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePaymentMethod,
                    request_deserializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.DeletePaymentMethodRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.DeletePaymentMethodResponse.SerializeToString,
            ),
            'GetStripeCheckoutSession': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStripeCheckoutSession,
                    request_deserializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.GetStripeCheckoutSessionRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.GetStripeCheckoutSessionResponse.SerializeToString,
            ),
            'CreateStripeCheckoutSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateStripeCheckoutSession,
                    request_deserializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.CreateStripeCheckoutSessionRequest.FromString,
                    response_serializer=qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.CreateStripeCheckoutSessionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qdrant.cloud.payment.v1.PaymentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('qdrant.cloud.payment.v1.PaymentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PaymentService(object):
    """PaymentService is the API used to manage payment settings.
    """

    @staticmethod
    def ListPaymentMethods(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.payment.v1.PaymentService/ListPaymentMethods',
            qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.ListPaymentMethodsRequest.SerializeToString,
            qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.ListPaymentMethodsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPaymentMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.payment.v1.PaymentService/GetPaymentMethod',
            qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.GetPaymentMethodRequest.SerializeToString,
            qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.GetPaymentMethodResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreatePaymentMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.payment.v1.PaymentService/CreatePaymentMethod',
            qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.CreatePaymentMethodRequest.SerializeToString,
            qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.CreatePaymentMethodResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePaymentMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.payment.v1.PaymentService/UpdatePaymentMethod',
            qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.UpdatePaymentMethodRequest.SerializeToString,
            qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.UpdatePaymentMethodResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeletePaymentMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.payment.v1.PaymentService/DeletePaymentMethod',
            qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.DeletePaymentMethodRequest.SerializeToString,
            qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.DeletePaymentMethodResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStripeCheckoutSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.payment.v1.PaymentService/GetStripeCheckoutSession',
            qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.GetStripeCheckoutSessionRequest.SerializeToString,
            qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.GetStripeCheckoutSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateStripeCheckoutSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qdrant.cloud.payment.v1.PaymentService/CreateStripeCheckoutSession',
            qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.CreateStripeCheckoutSessionRequest.SerializeToString,
            qdrant_dot_cloud_dot_payment_dot_v1_dot_payment__pb2.CreateStripeCheckoutSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
