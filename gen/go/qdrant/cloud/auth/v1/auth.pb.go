// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: qdrant/cloud/auth/v1/auth.proto

package authv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/common/v1"
	_ "github.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/event/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ListManagementKeysRequest is the request for the ListManagementKeys function
type ListManagementKeysRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId     string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListManagementKeysRequest) Reset() {
	*x = ListManagementKeysRequest{}
	mi := &file_qdrant_cloud_auth_v1_auth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListManagementKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagementKeysRequest) ProtoMessage() {}

func (x *ListManagementKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_auth_v1_auth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagementKeysRequest.ProtoReflect.Descriptor instead.
func (*ListManagementKeysRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_auth_v1_auth_proto_rawDescGZIP(), []int{0}
}

func (x *ListManagementKeysRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// ListManagementKeysResponse is the response from the ListManagementKeys function
type ListManagementKeysResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual management keys in this list.
	Items         []*ManagementKey `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListManagementKeysResponse) Reset() {
	*x = ListManagementKeysResponse{}
	mi := &file_qdrant_cloud_auth_v1_auth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListManagementKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListManagementKeysResponse) ProtoMessage() {}

func (x *ListManagementKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_auth_v1_auth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListManagementKeysResponse.ProtoReflect.Descriptor instead.
func (*ListManagementKeysResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_auth_v1_auth_proto_rawDescGZIP(), []int{1}
}

func (x *ListManagementKeysResponse) GetItems() []*ManagementKey {
	if x != nil {
		return x.Items
	}
	return nil
}

// CreateManagementKeyRequest is the request for the CreateManagementKey function
type CreateManagementKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual management key.
	ManagementKey *ManagementKey `protobuf:"bytes,1,opt,name=management_key,json=managementKey,proto3" json:"management_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateManagementKeyRequest) Reset() {
	*x = CreateManagementKeyRequest{}
	mi := &file_qdrant_cloud_auth_v1_auth_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateManagementKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManagementKeyRequest) ProtoMessage() {}

func (x *CreateManagementKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_auth_v1_auth_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManagementKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateManagementKeyRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_auth_v1_auth_proto_rawDescGZIP(), []int{2}
}

func (x *CreateManagementKeyRequest) GetManagementKey() *ManagementKey {
	if x != nil {
		return x.ManagementKey
	}
	return nil
}

// CreateManagementKeyResponse is the response from the CreateManagementKey function
type CreateManagementKeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual management key.
	ManagementKey *ManagementKey `protobuf:"bytes,1,opt,name=management_key,json=managementKey,proto3" json:"management_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateManagementKeyResponse) Reset() {
	*x = CreateManagementKeyResponse{}
	mi := &file_qdrant_cloud_auth_v1_auth_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateManagementKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManagementKeyResponse) ProtoMessage() {}

func (x *CreateManagementKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_auth_v1_auth_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManagementKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateManagementKeyResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_auth_v1_auth_proto_rawDescGZIP(), []int{3}
}

func (x *CreateManagementKeyResponse) GetManagementKey() *ManagementKey {
	if x != nil {
		return x.ManagementKey
	}
	return nil
}

// DeleteManagementKeyRequest is the request for the DeleteManagementKey function
type DeleteManagementKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The identifier of the management key (in GUID format).
	// This is a required field.
	ManagementKeyId string `protobuf:"bytes,2,opt,name=management_key_id,json=managementKeyId,proto3" json:"management_key_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeleteManagementKeyRequest) Reset() {
	*x = DeleteManagementKeyRequest{}
	mi := &file_qdrant_cloud_auth_v1_auth_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteManagementKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteManagementKeyRequest) ProtoMessage() {}

func (x *DeleteManagementKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_auth_v1_auth_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteManagementKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteManagementKeyRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_auth_v1_auth_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteManagementKeyRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DeleteManagementKeyRequest) GetManagementKeyId() string {
	if x != nil {
		return x.ManagementKeyId
	}
	return ""
}

// DeleteManagementKeyResponse is the response from the DeleteManagementKey function
type DeleteManagementKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteManagementKeyResponse) Reset() {
	*x = DeleteManagementKeyResponse{}
	mi := &file_qdrant_cloud_auth_v1_auth_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteManagementKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteManagementKeyResponse) ProtoMessage() {}

func (x *DeleteManagementKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_auth_v1_auth_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteManagementKeyResponse.ProtoReflect.Descriptor instead.
func (*DeleteManagementKeyResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_auth_v1_auth_proto_rawDescGZIP(), []int{5}
}

// A ManagementKey represents a management key of a Qdrant Cloud account.
// This management key grants access to the Qdrant Cloud API.
type ManagementKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the management key (in GUID format).
	// This is a read-only field and will be available after a management key is created.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Timestamp when the management key was created.
	// This is a read-only field and will be available after a management key is created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Prefix for the management key, this represents the first bytes of the key.
	// This is a read-only field and will be available after a management key is created.
	Prefix string `protobuf:"bytes,4,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// The value of the key, to be used to authenticate requests to the Qdrant Cloud API.
	// This is a read-only field and will be available only once in the response of CreateManagementKey.
	// You should securely store this key and it should be handled as a secret.
	Key           string `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManagementKey) Reset() {
	*x = ManagementKey{}
	mi := &file_qdrant_cloud_auth_v1_auth_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagementKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementKey) ProtoMessage() {}

func (x *ManagementKey) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_auth_v1_auth_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementKey.ProtoReflect.Descriptor instead.
func (*ManagementKey) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_auth_v1_auth_proto_rawDescGZIP(), []int{6}
}

func (x *ManagementKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ManagementKey) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ManagementKey) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ManagementKey) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ManagementKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

var File_qdrant_cloud_auth_v1_auth_proto protoreflect.FileDescriptor

const file_qdrant_cloud_auth_v1_auth_proto_rawDesc = "" +
	"\n" +
	"\x1fqdrant/cloud/auth/v1/auth.proto\x12\x14qdrant.cloud.auth.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#qdrant/cloud/common/v1/common.proto\x1a\"qdrant/cloud/event/v1/events.proto\"D\n" +
	"\x19ListManagementKeysRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\"W\n" +
	"\x1aListManagementKeysResponse\x129\n" +
	"\x05items\x18\x01 \x03(\v2#.qdrant.cloud.auth.v1.ManagementKeyR\x05items\"p\n" +
	"\x1aCreateManagementKeyRequest\x12R\n" +
	"\x0emanagement_key\x18\x01 \x01(\v2#.qdrant.cloud.auth.v1.ManagementKeyB\x06\xbaH\x03\xc8\x01\x01R\rmanagementKey\"q\n" +
	"\x1bCreateManagementKeyResponse\x12R\n" +
	"\x0emanagement_key\x18\x01 \x01(\v2#.qdrant.cloud.auth.v1.ManagementKeyB\x06\xbaH\x03\xc8\x01\x01R\rmanagementKey\"{\n" +
	"\x1aDeleteManagementKeyRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x124\n" +
	"\x11management_key_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x0fmanagementKeyId\"\x1d\n" +
	"\x1bDeleteManagementKeyResponse\"\xc5\x03\n" +
	"\rManagementKey\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x16\n" +
	"\x06prefix\x18\x04 \x01(\tR\x06prefix\x12\x10\n" +
	"\x03key\x18\x05 \x01(\tR\x03key:\x95\x02\xbaH\x91\x02\x1a\xaa\x01\n" +
	"\x11management_key.id\x12\x1avalue must be a valid UUID\x1aythis.id.matches('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$') || !has(this.created_at)\x1ab\n" +
	"\x15management_key.prefix\x12\x18prefix must not be empty\x1a/this.prefix.size() > 0 || !has(this.created_at)2\xb8\a\n" +
	"\vAuthService\x12\xcb\x01\n" +
	"\x12ListManagementKeys\x12/.qdrant.cloud.auth.v1.ListManagementKeysRequest\x1a0.qdrant.cloud.auth.v1.ListManagementKeysResponse\"R\x8a\xb5\x18\x14read:management_keys\x82\xd3\xe4\x93\x024\x122/api/auth/v1/accounts/{account_id}/management-keys\x12\x81\x03\n" +
	"\x13CreateManagementKey\x120.qdrant.cloud.auth.v1.CreateManagementKeyRequest\x1a1.qdrant.cloud.auth.v1.CreateManagementKeyResponse\"\x84\x02\x8a\xb5\x18\x15write:management_keys\x92\xb5\x18\x19management_key.account_id\xca\xf3\x18~\b\x01\x12\x0emanagement-key\"\x16resp.management_key.id*R/accounts/{req.management_key.account_id}/management-keys/{resp.management_key.id}\x82\xd3\xe4\x93\x02F:\x01*\"A/api/auth/v1/accounts/{management_key.account_id}/management-keys\x12\xd6\x02\n" +
	"\x13DeleteManagementKey\x120.qdrant.cloud.auth.v1.DeleteManagementKeyRequest\x1a1.qdrant.cloud.auth.v1.DeleteManagementKeyResponse\"\xd9\x01\x8a\xb5\x18\x16delete:management_keys\xca\xf3\x18m\b\x03\x12\x0emanagement-key\"\x15req.management_key_id*B/accounts/{req.account_id}/management-keys/{req.management_key_id}\x82\xd3\xe4\x93\x02H*F/api/auth/v1/accounts/{account_id}/management-keys/{management_key_id}B\xe6\x01\n" +
	"\x18com.qdrant.cloud.auth.v1B\tAuthProtoP\x01ZLgithub.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/auth/v1;authv1\xa2\x02\x03QCA\xaa\x02\x14Qdrant.Cloud.Auth.V1\xca\x02\x14Qdrant\\Cloud\\Auth\\V1\xe2\x02 Qdrant\\Cloud\\Auth\\V1\\GPBMetadata\xea\x02\x17Qdrant::Cloud::Auth::V1b\x06proto3"

var (
	file_qdrant_cloud_auth_v1_auth_proto_rawDescOnce sync.Once
	file_qdrant_cloud_auth_v1_auth_proto_rawDescData []byte
)

func file_qdrant_cloud_auth_v1_auth_proto_rawDescGZIP() []byte {
	file_qdrant_cloud_auth_v1_auth_proto_rawDescOnce.Do(func() {
		file_qdrant_cloud_auth_v1_auth_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_qdrant_cloud_auth_v1_auth_proto_rawDesc), len(file_qdrant_cloud_auth_v1_auth_proto_rawDesc)))
	})
	return file_qdrant_cloud_auth_v1_auth_proto_rawDescData
}

var file_qdrant_cloud_auth_v1_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_qdrant_cloud_auth_v1_auth_proto_goTypes = []any{
	(*ListManagementKeysRequest)(nil),   // 0: qdrant.cloud.auth.v1.ListManagementKeysRequest
	(*ListManagementKeysResponse)(nil),  // 1: qdrant.cloud.auth.v1.ListManagementKeysResponse
	(*CreateManagementKeyRequest)(nil),  // 2: qdrant.cloud.auth.v1.CreateManagementKeyRequest
	(*CreateManagementKeyResponse)(nil), // 3: qdrant.cloud.auth.v1.CreateManagementKeyResponse
	(*DeleteManagementKeyRequest)(nil),  // 4: qdrant.cloud.auth.v1.DeleteManagementKeyRequest
	(*DeleteManagementKeyResponse)(nil), // 5: qdrant.cloud.auth.v1.DeleteManagementKeyResponse
	(*ManagementKey)(nil),               // 6: qdrant.cloud.auth.v1.ManagementKey
	(*timestamppb.Timestamp)(nil),       // 7: google.protobuf.Timestamp
}
var file_qdrant_cloud_auth_v1_auth_proto_depIdxs = []int32{
	6, // 0: qdrant.cloud.auth.v1.ListManagementKeysResponse.items:type_name -> qdrant.cloud.auth.v1.ManagementKey
	6, // 1: qdrant.cloud.auth.v1.CreateManagementKeyRequest.management_key:type_name -> qdrant.cloud.auth.v1.ManagementKey
	6, // 2: qdrant.cloud.auth.v1.CreateManagementKeyResponse.management_key:type_name -> qdrant.cloud.auth.v1.ManagementKey
	7, // 3: qdrant.cloud.auth.v1.ManagementKey.created_at:type_name -> google.protobuf.Timestamp
	0, // 4: qdrant.cloud.auth.v1.AuthService.ListManagementKeys:input_type -> qdrant.cloud.auth.v1.ListManagementKeysRequest
	2, // 5: qdrant.cloud.auth.v1.AuthService.CreateManagementKey:input_type -> qdrant.cloud.auth.v1.CreateManagementKeyRequest
	4, // 6: qdrant.cloud.auth.v1.AuthService.DeleteManagementKey:input_type -> qdrant.cloud.auth.v1.DeleteManagementKeyRequest
	1, // 7: qdrant.cloud.auth.v1.AuthService.ListManagementKeys:output_type -> qdrant.cloud.auth.v1.ListManagementKeysResponse
	3, // 8: qdrant.cloud.auth.v1.AuthService.CreateManagementKey:output_type -> qdrant.cloud.auth.v1.CreateManagementKeyResponse
	5, // 9: qdrant.cloud.auth.v1.AuthService.DeleteManagementKey:output_type -> qdrant.cloud.auth.v1.DeleteManagementKeyResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_qdrant_cloud_auth_v1_auth_proto_init() }
func file_qdrant_cloud_auth_v1_auth_proto_init() {
	if File_qdrant_cloud_auth_v1_auth_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_qdrant_cloud_auth_v1_auth_proto_rawDesc), len(file_qdrant_cloud_auth_v1_auth_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qdrant_cloud_auth_v1_auth_proto_goTypes,
		DependencyIndexes: file_qdrant_cloud_auth_v1_auth_proto_depIdxs,
		MessageInfos:      file_qdrant_cloud_auth_v1_auth_proto_msgTypes,
	}.Build()
	File_qdrant_cloud_auth_v1_auth_proto = out.File
	file_qdrant_cloud_auth_v1_auth_proto_goTypes = nil
	file_qdrant_cloud_auth_v1_auth_proto_depIdxs = nil
}
