// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: qdrant/cloud/serverless/collection/auth/v1/collection_api_key.proto

package authv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CollectionApiKeyAccessType defines the access types that can be granted to a collection API key.
// For a detailed list of actions allowed for each access type, see:
// https://qdrant.tech/documentation/guides/security/#table-of-access
type CollectionApiKeyAccessType int32

const (
	// Unspecified access type.
	CollectionApiKeyAccessType_COLLECTION_API_KEY_ACCESS_TYPE_UNSPECIFIED CollectionApiKeyAccessType = 0
	// Grants access to perform collection-related actions that only read data.
	CollectionApiKeyAccessType_COLLECTION_API_KEY_ACCESS_TYPE_READ_ONLY CollectionApiKeyAccessType = 1
	// Grants access to perform collection-related actions that read or write data (like `upsert points`).
	CollectionApiKeyAccessType_COLLECTION_API_KEY_ACCESS_TYPE_READ_WRITE CollectionApiKeyAccessType = 2
)

// Enum value maps for CollectionApiKeyAccessType.
var (
	CollectionApiKeyAccessType_name = map[int32]string{
		0: "COLLECTION_API_KEY_ACCESS_TYPE_UNSPECIFIED",
		1: "COLLECTION_API_KEY_ACCESS_TYPE_READ_ONLY",
		2: "COLLECTION_API_KEY_ACCESS_TYPE_READ_WRITE",
	}
	CollectionApiKeyAccessType_value = map[string]int32{
		"COLLECTION_API_KEY_ACCESS_TYPE_UNSPECIFIED": 0,
		"COLLECTION_API_KEY_ACCESS_TYPE_READ_ONLY":   1,
		"COLLECTION_API_KEY_ACCESS_TYPE_READ_WRITE":  2,
	}
)

func (x CollectionApiKeyAccessType) Enum() *CollectionApiKeyAccessType {
	p := new(CollectionApiKeyAccessType)
	*p = x
	return p
}

func (x CollectionApiKeyAccessType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CollectionApiKeyAccessType) Descriptor() protoreflect.EnumDescriptor {
	return file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_enumTypes[0].Descriptor()
}

func (CollectionApiKeyAccessType) Type() protoreflect.EnumType {
	return &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_enumTypes[0]
}

func (x CollectionApiKeyAccessType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CollectionApiKeyAccessType.Descriptor instead.
func (CollectionApiKeyAccessType) EnumDescriptor() ([]byte, []int) {
	return file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDescGZIP(), []int{0}
}

// Request all API keys associated with a collection
type ListCollectionApiKeysRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Collection the API keys belong to (in GUID format).
	// This is a required field.
	CollectionId  string `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionApiKeysRequest) Reset() {
	*x = ListCollectionApiKeysRequest{}
	mi := &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionApiKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionApiKeysRequest) ProtoMessage() {}

func (x *ListCollectionApiKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionApiKeysRequest.ProtoReflect.Descriptor instead.
func (*ListCollectionApiKeysRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDescGZIP(), []int{0}
}

func (x *ListCollectionApiKeysRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListCollectionApiKeysRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

// Response containing all API keys associated with a collection
type ListCollectionApiKeysResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of API keys for the collection
	Items         []*CollectionApiKey `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionApiKeysResponse) Reset() {
	*x = ListCollectionApiKeysResponse{}
	mi := &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionApiKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionApiKeysResponse) ProtoMessage() {}

func (x *ListCollectionApiKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionApiKeysResponse.ProtoReflect.Descriptor instead.
func (*ListCollectionApiKeysResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDescGZIP(), []int{1}
}

func (x *ListCollectionApiKeysResponse) GetItems() []*CollectionApiKey {
	if x != nil {
		return x.Items
	}
	return nil
}

// CreateCollectionApiKeyRequest defines parameters for creating a new collection API key
type CreateCollectionApiKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"` //TODO: Remove! However this is a breaking change, so will be done in separate PR
	// Collection the key will access (in GUID format).
	// This is a required field.
	CollectionId string `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"` //TODO: Remove!
	// The API key to create.
	// This is a required field.
	CollectionApiKey *CollectionApiKey `protobuf:"bytes,3,opt,name=collection_api_key,json=collectionApiKey,proto3" json:"collection_api_key,omitempty"` //TODO: Renumber to 1
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateCollectionApiKeyRequest) Reset() {
	*x = CreateCollectionApiKeyRequest{}
	mi := &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCollectionApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionApiKeyRequest) ProtoMessage() {}

func (x *CreateCollectionApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionApiKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateCollectionApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCollectionApiKeyRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CreateCollectionApiKeyRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *CreateCollectionApiKeyRequest) GetCollectionApiKey() *CollectionApiKey {
	if x != nil {
		return x.CollectionApiKey
	}
	return nil
}

// CollectionApiKeyResponse provides the API key after creation
type CreateCollectionApiKeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The newly created API key value
	CollectionApiKey *CollectionApiKey `protobuf:"bytes,1,opt,name=collection_api_key,json=collectionApiKey,proto3" json:"collection_api_key,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateCollectionApiKeyResponse) Reset() {
	*x = CreateCollectionApiKeyResponse{}
	mi := &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCollectionApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionApiKeyResponse) ProtoMessage() {}

func (x *CreateCollectionApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionApiKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateCollectionApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCollectionApiKeyResponse) GetCollectionApiKey() *CollectionApiKey {
	if x != nil {
		return x.CollectionApiKey
	}
	return nil
}

// DeleteCollectionApiKeyRequest identifies the API key to delete
type DeleteCollectionApiKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Collection the key belongs to (in GUID format).
	// This is a required field.
	CollectionId string `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	// ID of the key to delete (in GUID format).
	// This is a required field.
	CollectionApiKeyId string `protobuf:"bytes,3,opt,name=collection_api_key_id,json=collectionApiKeyId,proto3" json:"collection_api_key_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DeleteCollectionApiKeyRequest) Reset() {
	*x = DeleteCollectionApiKeyRequest{}
	mi := &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCollectionApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectionApiKeyRequest) ProtoMessage() {}

func (x *DeleteCollectionApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollectionApiKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteCollectionApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCollectionApiKeyRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DeleteCollectionApiKeyRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *DeleteCollectionApiKeyRequest) GetCollectionApiKeyId() string {
	if x != nil {
		return x.CollectionApiKeyId
	}
	return ""
}

// DeleteCollectionApiKeyResponse is an empty response for deletion confirmation
type DeleteCollectionApiKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCollectionApiKeyResponse) Reset() {
	*x = DeleteCollectionApiKeyResponse{}
	mi := &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCollectionApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectionApiKeyResponse) ProtoMessage() {}

func (x *DeleteCollectionApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollectionApiKeyResponse.ProtoReflect.Descriptor instead.
func (*DeleteCollectionApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDescGZIP(), []int{5}
}

// A CollectionApiKey represents one collection api key of a Qdrant cloud account.
// This collection key can grant access to a Qdrant cloud serverless collection.
type CollectionApiKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the collection api key (in GUID format).
	// This is a read-only field and will be available after a collection api key is created.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Timestamp when the collection api key was created.
	// This is a read-only field and will be available after a collection api key is created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The identifier of the collection (in GUID format).
	// This is a required field.
	CollectionId string `protobuf:"bytes,4,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	// Name of the collection api key.
	// This is a required field.
	// Name can only contain letters, numbers, spaces, underscores and dashes.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// The expiration time of the collection api key. The key will be invalid after this time.
	// This field is optional, and if not provided, the key does not expire.
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt,proto3,oneof" json:"expires_at,omitempty"`
	// The type of access granted for the collection.
	// This is a required field.
	AccessType CollectionApiKeyAccessType `protobuf:"varint,7,opt,name=access_type,json=accessType,proto3,enum=qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyAccessType" json:"access_type,omitempty"`
	// The email of the user who created the collection api key.
	// This is a read-only field and will be available after a collection api key is created.
	CreatedByEmail string `protobuf:"bytes,8,opt,name=created_by_email,json=createdByEmail,proto3" json:"created_by_email,omitempty"`
	// Postfix for the collection api key, this represents the last bytes of the key.
	// This is a read-only field and will be available after a collection api key is created.
	Postfix string `protobuf:"bytes,9,opt,name=postfix,proto3" json:"postfix,omitempty"`
	// The key for the collection api key.
	// This is a read-only field and will be available only once in the response of CreateCollectionApiKey.
	// You should securely store this key and it should be handled as a secret.
	Key           string `protobuf:"bytes,10,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectionApiKey) Reset() {
	*x = CollectionApiKey{}
	mi := &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionApiKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionApiKey) ProtoMessage() {}

func (x *CollectionApiKey) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionApiKey.ProtoReflect.Descriptor instead.
func (*CollectionApiKey) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDescGZIP(), []int{6}
}

func (x *CollectionApiKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CollectionApiKey) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *CollectionApiKey) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CollectionApiKey) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *CollectionApiKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CollectionApiKey) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *CollectionApiKey) GetAccessType() CollectionApiKeyAccessType {
	if x != nil {
		return x.AccessType
	}
	return CollectionApiKeyAccessType_COLLECTION_API_KEY_ACCESS_TYPE_UNSPECIFIED
}

func (x *CollectionApiKey) GetCreatedByEmail() string {
	if x != nil {
		return x.CreatedByEmail
	}
	return ""
}

func (x *CollectionApiKey) GetPostfix() string {
	if x != nil {
		return x.Postfix
	}
	return ""
}

func (x *CollectionApiKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

var File_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto protoreflect.FileDescriptor

const file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDesc = "" +
	"\n" +
	"Cqdrant/cloud/serverless/collection/auth/v1/collection_api_key.proto\x12*qdrant.cloud.serverless.collection.auth.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#qdrant/cloud/common/v1/common.proto\"v\n" +
	"\x1cListCollectionApiKeysRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12-\n" +
	"\rcollection_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\fcollectionId\"s\n" +
	"\x1dListCollectionApiKeysResponse\x12R\n" +
	"\x05items\x18\x01 \x03(\v2<.qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyR\x05items\"\xeb\x01\n" +
	"\x1dCreateCollectionApiKeyRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12-\n" +
	"\rcollection_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\fcollectionId\x12r\n" +
	"\x12collection_api_key\x18\x03 \x01(\v2<.qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyB\x06\xbaH\x03\xc8\x01\x01R\x10collectionApiKey\"\x94\x01\n" +
	"\x1eCreateCollectionApiKeyResponse\x12r\n" +
	"\x12collection_api_key\x18\x01 \x01(\v2<.qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyB\x06\xbaH\x03\xc8\x01\x01R\x10collectionApiKey\"\xb4\x01\n" +
	"\x1dDeleteCollectionApiKeyRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12-\n" +
	"\rcollection_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\fcollectionId\x12;\n" +
	"\x15collection_api_key_id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x12collectionApiKeyId\" \n" +
	"\x1eDeleteCollectionApiKeyResponse\"\xa3\a\n" +
	"\x10CollectionApiKey\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12-\n" +
	"\rcollection_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\fcollectionId\x12*\n" +
	"\x04name\x18\x05 \x01(\tB\x16\xbaH\x13r\x11\x10\x04\x18\x80\x012\n" +
	"^[\\w\\s-]+$R\x04name\x12>\n" +
	"\n" +
	"expires_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\texpiresAt\x88\x01\x01\x12q\n" +
	"\vaccess_type\x18\a \x01(\x0e2F.qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyAccessTypeB\b\xbaH\x05\x82\x01\x02 \x00R\n" +
	"accessType\x12(\n" +
	"\x10created_by_email\x18\b \x01(\tR\x0ecreatedByEmail\x12\x18\n" +
	"\apostfix\x18\t \x01(\tR\apostfix\x12\x10\n" +
	"\x03key\x18\n" +
	" \x01(\tR\x03key:\xa7\x03\xbaH\xa3\x03\x1a\xae\x01\n" +
	"\x15collection_api_key.id\x12\x1avalue must be a valid UUID\x1aythis.id.matches('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$') || !has(this.created_at)\x1a\x84\x01\n" +
	"#collection_api_key.created_by_email\x12\"created_by_email must not be empty\x1a9this.created_by_email.size() > 0 || !has(this.created_at)\x1ai\n" +
	"\x1acollection_api_key.postfix\x12\x19postfix must not be empty\x1a0this.postfix.size() > 0 || !has(this.created_at)B\r\n" +
	"\v_expires_at*\xa9\x01\n" +
	"\x1aCollectionApiKeyAccessType\x12.\n" +
	"*COLLECTION_API_KEY_ACCESS_TYPE_UNSPECIFIED\x10\x00\x12,\n" +
	"(COLLECTION_API_KEY_ACCESS_TYPE_READ_ONLY\x10\x01\x12-\n" +
	")COLLECTION_API_KEY_ACCESS_TYPE_READ_WRITE\x10\x022\xfb\a\n" +
	"\x17CollectionApiKeyService\x12\xa4\x02\n" +
	"\x15ListCollectionApiKeys\x12H.qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysRequest\x1aI.qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysResponse\"v\x8a\xb5\x18\x18read:serverless_api_keys\x82\xd3\xe4\x93\x02T\x12R/api/serverless/auth/v1/accounts/{account_id}/collections/{collection_id}/api-keys\x12\xf3\x02\n" +
	"\x16CreateCollectionApiKey\x12I.qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyRequest\x1aJ.qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyResponse\"\xc1\x01\x8a\xb5\x18\x19write:serverless_api_keys\x92\xb5\x18\x1dcollection_api_key.account_id\x82\xd3\xe4\x93\x02}:\x01*\"x/api/serverless/auth/v1/accounts/{collection_api_key.account_id}/collections/{collection_api_key.collection_id}/api-keys\x12\xc2\x02\n" +
	"\x16DeleteCollectionApiKey\x12I.qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyRequest\x1aJ.qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyResponse\"\x90\x01\x8a\xb5\x18\x1adelete:serverless_api_keys\x82\xd3\xe4\x93\x02l*j/api/serverless/auth/v1/accounts/{account_id}/collections/{collection_id}/api-keys/{collection_api_key_id}B\xfa\x02\n" +
	".com.qdrant.cloud.serverless.collection.auth.v1B\x15CollectionApiKeyProtoP\x01Zbgithub.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/serverless/collection/auth/v1;authv1\xa2\x02\x05QCSCA\xaa\x02*Qdrant.Cloud.Serverless.Collection.Auth.V1\xca\x02*Qdrant\\Cloud\\Serverless\\Collection\\Auth\\V1\xe2\x026Qdrant\\Cloud\\Serverless\\Collection\\Auth\\V1\\GPBMetadata\xea\x02/Qdrant::Cloud::Serverless::Collection::Auth::V1b\x06proto3"

var (
	file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDescOnce sync.Once
	file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDescData []byte
)

func file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDescGZIP() []byte {
	file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDescOnce.Do(func() {
		file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDesc), len(file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDesc)))
	})
	return file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDescData
}

var file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_goTypes = []any{
	(CollectionApiKeyAccessType)(0),        // 0: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyAccessType
	(*ListCollectionApiKeysRequest)(nil),   // 1: qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysRequest
	(*ListCollectionApiKeysResponse)(nil),  // 2: qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysResponse
	(*CreateCollectionApiKeyRequest)(nil),  // 3: qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyRequest
	(*CreateCollectionApiKeyResponse)(nil), // 4: qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyResponse
	(*DeleteCollectionApiKeyRequest)(nil),  // 5: qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyRequest
	(*DeleteCollectionApiKeyResponse)(nil), // 6: qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyResponse
	(*CollectionApiKey)(nil),               // 7: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey
	(*timestamppb.Timestamp)(nil),          // 8: google.protobuf.Timestamp
}
var file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_depIdxs = []int32{
	7, // 0: qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysResponse.items:type_name -> qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey
	7, // 1: qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyRequest.collection_api_key:type_name -> qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey
	7, // 2: qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyResponse.collection_api_key:type_name -> qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey
	8, // 3: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey.created_at:type_name -> google.protobuf.Timestamp
	8, // 4: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey.expires_at:type_name -> google.protobuf.Timestamp
	0, // 5: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKey.access_type:type_name -> qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyAccessType
	1, // 6: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService.ListCollectionApiKeys:input_type -> qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysRequest
	3, // 7: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService.CreateCollectionApiKey:input_type -> qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyRequest
	5, // 8: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService.DeleteCollectionApiKey:input_type -> qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyRequest
	2, // 9: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService.ListCollectionApiKeys:output_type -> qdrant.cloud.serverless.collection.auth.v1.ListCollectionApiKeysResponse
	4, // 10: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService.CreateCollectionApiKey:output_type -> qdrant.cloud.serverless.collection.auth.v1.CreateCollectionApiKeyResponse
	6, // 11: qdrant.cloud.serverless.collection.auth.v1.CollectionApiKeyService.DeleteCollectionApiKey:output_type -> qdrant.cloud.serverless.collection.auth.v1.DeleteCollectionApiKeyResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_init() }
func file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_init() {
	if File_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto != nil {
		return
	}
	file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDesc), len(file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_goTypes,
		DependencyIndexes: file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_depIdxs,
		EnumInfos:         file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_enumTypes,
		MessageInfos:      file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_msgTypes,
	}.Build()
	File_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto = out.File
	file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_goTypes = nil
	file_qdrant_cloud_serverless_collection_auth_v1_collection_api_key_proto_depIdxs = nil
}
