// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: qdrant/cloud/event/v1/events.proto

package eventv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EventType defines the type of the event that occurred to the resource.
type EventType int32

const (
	// Unspecified event type.
	EventType_EVENT_TYPE_UNSPECIFIED EventType = 0
	// The resource was created.
	EventType_EVENT_TYPE_CREATED EventType = 1
	// The resource was updated.
	EventType_EVENT_TYPE_UPDATED EventType = 2
	// The resource was deleted.
	EventType_EVENT_TYPE_DELETED EventType = 3
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		1: "EVENT_TYPE_CREATED",
		2: "EVENT_TYPE_UPDATED",
		3: "EVENT_TYPE_DELETED",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED": 0,
		"EVENT_TYPE_CREATED":     1,
		"EVENT_TYPE_UPDATED":     2,
		"EVENT_TYPE_DELETED":     3,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_qdrant_cloud_event_v1_events_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_qdrant_cloud_event_v1_events_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_qdrant_cloud_event_v1_events_proto_rawDescGZIP(), []int{0}
}

// EventOptions is a custom method option to indicate that an event should be
// generated when this RPC is successfully called.
// The fields should start with 'req.' or 'resp.' to indicate whether the info needs to be
// extracted from the request or the response.
type EventOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of the event that should be generated.
	EventType EventType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=qdrant.cloud.event.v1.EventType" json:"event_type,omitempty"`
	// The type of the resource that this event is about (e.g., "cluster", "backup").
	ResourceType string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	// Whether or not this event should be marked as a status only event.
	// TODO: Alternative we can make EVENT_TYPE_UPDATED_SPEC and EVENT_TYPE_UPDATED_STATUS, imo this bool makes more sense.
	StatusOnly bool `protobuf:"varint,3,opt,name=status_only,json=statusOnly,proto3" json:"status_only,omitempty"`
	// The unique identifier field of the resource.
	// This should be a resolvable (nested) field.
	// E.g. 'resp.cluster_id'
	ResourceIdField string `protobuf:"bytes,4,opt,name=resource_id_field,json=resourceIdField,proto3" json:"resource_id_field,omitempty"`
	// The URL for the resource.
	// This URL can be used to filter if subscribing to events.
	// Like '/Accounts/123/Clusters/*'
	// This should be a resolvable (nested) field template.
	// E.g. '/Accounts/{resp.account_id}/Clusters/{resp.cluster_id}/Backups/{resp.backup_id}'
	ResourceUrlTemplate string `protobuf:"bytes,5,opt,name=resource_url_template,json=resourceUrlTemplate,proto3" json:"resource_url_template,omitempty"`
	// The additional context field.
	// Key will be copied as-is, the value should be a resolvable (nested) field.
	// E.g. {'cluster_id': 'resp.cluster_id', 'backup_id': 'resp.backup_id'}
	AdditionalContextFields map[string]string `protobuf:"bytes,10,rep,name=additional_context_fields,json=additionalContextFields,proto3" json:"additional_context_fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *EventOptions) Reset() {
	*x = EventOptions{}
	mi := &file_qdrant_cloud_event_v1_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOptions) ProtoMessage() {}

func (x *EventOptions) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_event_v1_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOptions.ProtoReflect.Descriptor instead.
func (*EventOptions) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_event_v1_events_proto_rawDescGZIP(), []int{0}
}

func (x *EventOptions) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *EventOptions) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *EventOptions) GetStatusOnly() bool {
	if x != nil {
		return x.StatusOnly
	}
	return false
}

func (x *EventOptions) GetResourceIdField() string {
	if x != nil {
		return x.ResourceIdField
	}
	return ""
}

func (x *EventOptions) GetResourceUrlTemplate() string {
	if x != nil {
		return x.ResourceUrlTemplate
	}
	return ""
}

func (x *EventOptions) GetAdditionalContextFields() map[string]string {
	if x != nil {
		return x.AdditionalContextFields
	}
	return nil
}

// Event represents a significant occurrence in the system, like a resource
// being created, updated, or deleted.
type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A unique identifier for the event, in the form of a UUID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The time at which the event occurred.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The unique identifier of the authenticated actor.
	ActorId string `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	// The type of the authenticated actor.
	ActorType v1.ActorType `protobuf:"varint,4,opt,name=actor_type,json=actorType,proto3,enum=qdrant.cloud.common.v1.ActorType" json:"actor_type,omitempty"`
	// The account ID associated with this event (if applicable, UUID).
	// This field will be set if the event is bound to a specific account.
	AccountId *string `protobuf:"bytes,5,opt,name=account_id,json=accountId,proto3,oneof" json:"account_id,omitempty"`
	// The type of the event.
	EventType EventType `protobuf:"varint,10,opt,name=event_type,json=eventType,proto3,enum=qdrant.cloud.event.v1.EventType" json:"event_type,omitempty"`
	// The type of the resource that this event is about (e.g., "cluster", "backup").
	ResourceType string `protobuf:"bytes,11,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	// Whether or not this event is a status only event.
	// Applicable when event_type is EVENT_TYPE_UPDATED.
	// For example, this can be used to distinguish between a spec update and a status update.
	StatusOnly bool `protobuf:"varint,12,opt,name=status_only,json=statusOnly,proto3" json:"status_only,omitempty"`
	// The unique identifier of the resource.
	// This field will be set if the event is bound to a specific resource.
	// In most cases this is in the form of a UUID.
	ResourceId *string `protobuf:"bytes,13,opt,name=resource_id,json=resourceId,proto3,oneof" json:"resource_id,omitempty"`
	// The URL associated with the resource for this event.
	ResourceUrl string `protobuf:"bytes,14,opt,name=resource_url,json=resourceUrl,proto3" json:"resource_url,omitempty"`
	// Additional key-value context about the event.
	// For example, for a backup event, this could include the "cluster_id".
	AdditionalContext map[string]string `protobuf:"bytes,20,rep,name=additional_context,json=additionalContext,proto3" json:"additional_context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_qdrant_cloud_event_v1_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_event_v1_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_event_v1_events_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Event) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *Event) GetActorType() v1.ActorType {
	if x != nil {
		return x.ActorType
	}
	return v1.ActorType(0)
}

func (x *Event) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *Event) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *Event) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *Event) GetStatusOnly() bool {
	if x != nil {
		return x.StatusOnly
	}
	return false
}

func (x *Event) GetResourceId() string {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return ""
}

func (x *Event) GetResourceUrl() string {
	if x != nil {
		return x.ResourceUrl
	}
	return ""
}

func (x *Event) GetAdditionalContext() map[string]string {
	if x != nil {
		return x.AdditionalContext
	}
	return nil
}

var file_qdrant_cloud_event_v1_events_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*EventOptions)(nil),
		Field:         51001,
		Name:          "qdrant.cloud.event.v1.event_options",
		Tag:           "bytes,51001,opt,name=event_options",
		Filename:      "qdrant/cloud/event/v1/events.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// The actual event options.
	//
	// optional qdrant.cloud.event.v1.EventOptions event_options = 51001;
	E_EventOptions = &file_qdrant_cloud_event_v1_events_proto_extTypes[0]
)

var File_qdrant_cloud_event_v1_events_proto protoreflect.FileDescriptor

const file_qdrant_cloud_event_v1_events_proto_rawDesc = "" +
	"\n" +
	"\"qdrant/cloud/event/v1/events.proto\x12\x15qdrant.cloud.event.v1\x1a\x1bbuf/validate/validate.proto\x1a google/protobuf/descriptor.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#qdrant/cloud/common/v1/common.proto\"\xe6\x03\n" +
	"\fEventOptions\x12K\n" +
	"\n" +
	"event_type\x18\x01 \x01(\x0e2 .qdrant.cloud.event.v1.EventTypeB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\teventType\x12,\n" +
	"\rresource_type\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\fresourceType\x12\x1f\n" +
	"\vstatus_only\x18\x03 \x01(\bR\n" +
	"statusOnly\x123\n" +
	"\x11resource_id_field\x18\x04 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x0fresourceIdField\x12;\n" +
	"\x15resource_url_template\x18\x05 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x13resourceUrlTemplate\x12|\n" +
	"\x19additional_context_fields\x18\n" +
	" \x03(\v2@.qdrant.cloud.event.v1.EventOptions.AdditionalContextFieldsEntryR\x17additionalContextFields\x1aJ\n" +
	"\x1cAdditionalContextFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbc\x05\n" +
	"\x05Event\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\"\n" +
	"\bactor_id\x18\x03 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\aactorId\x12L\n" +
	"\n" +
	"actor_type\x18\x04 \x01(\x0e2!.qdrant.cloud.common.v1.ActorTypeB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\tactorType\x12,\n" +
	"\n" +
	"account_id\x18\x05 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01H\x00R\taccountId\x88\x01\x01\x12K\n" +
	"\n" +
	"event_type\x18\n" +
	" \x01(\x0e2 .qdrant.cloud.event.v1.EventTypeB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\teventType\x12,\n" +
	"\rresource_type\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\fresourceType\x12\x1f\n" +
	"\vstatus_only\x18\f \x01(\bR\n" +
	"statusOnly\x12-\n" +
	"\vresource_id\x18\r \x01(\tB\a\xbaH\x04r\x02\x10\x01H\x01R\n" +
	"resourceId\x88\x01\x01\x12*\n" +
	"\fresource_url\x18\x0e \x01(\tB\a\xbaH\x04r\x02\x10\x01R\vresourceUrl\x12b\n" +
	"\x12additional_context\x18\x14 \x03(\v23.qdrant.cloud.event.v1.Event.AdditionalContextEntryR\x11additionalContext\x1aD\n" +
	"\x16AdditionalContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\r\n" +
	"\v_account_idB\x0e\n" +
	"\f_resource_id*o\n" +
	"\tEventType\x12\x1a\n" +
	"\x16EVENT_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12EVENT_TYPE_CREATED\x10\x01\x12\x16\n" +
	"\x12EVENT_TYPE_UPDATED\x10\x02\x12\x16\n" +
	"\x12EVENT_TYPE_DELETED\x10\x03:j\n" +
	"\revent_options\x12\x1e.google.protobuf.MethodOptions\x18\xb9\x8e\x03 \x01(\v2#.qdrant.cloud.event.v1.EventOptionsR\feventOptionsB\xef\x01\n" +
	"\x19com.qdrant.cloud.event.v1B\vEventsProtoP\x01ZNgithub.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/event/v1;eventv1\xa2\x02\x03QCE\xaa\x02\x15Qdrant.Cloud.Event.V1\xca\x02\x15Qdrant\\Cloud\\Event\\V1\xe2\x02!Qdrant\\Cloud\\Event\\V1\\GPBMetadata\xea\x02\x18Qdrant::Cloud::Event::V1b\x06proto3"

var (
	file_qdrant_cloud_event_v1_events_proto_rawDescOnce sync.Once
	file_qdrant_cloud_event_v1_events_proto_rawDescData []byte
)

func file_qdrant_cloud_event_v1_events_proto_rawDescGZIP() []byte {
	file_qdrant_cloud_event_v1_events_proto_rawDescOnce.Do(func() {
		file_qdrant_cloud_event_v1_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_qdrant_cloud_event_v1_events_proto_rawDesc), len(file_qdrant_cloud_event_v1_events_proto_rawDesc)))
	})
	return file_qdrant_cloud_event_v1_events_proto_rawDescData
}

var file_qdrant_cloud_event_v1_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_qdrant_cloud_event_v1_events_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_qdrant_cloud_event_v1_events_proto_goTypes = []any{
	(EventType)(0),                     // 0: qdrant.cloud.event.v1.EventType
	(*EventOptions)(nil),               // 1: qdrant.cloud.event.v1.EventOptions
	(*Event)(nil),                      // 2: qdrant.cloud.event.v1.Event
	nil,                                // 3: qdrant.cloud.event.v1.EventOptions.AdditionalContextFieldsEntry
	nil,                                // 4: qdrant.cloud.event.v1.Event.AdditionalContextEntry
	(*timestamppb.Timestamp)(nil),      // 5: google.protobuf.Timestamp
	(v1.ActorType)(0),                  // 6: qdrant.cloud.common.v1.ActorType
	(*descriptorpb.MethodOptions)(nil), // 7: google.protobuf.MethodOptions
}
var file_qdrant_cloud_event_v1_events_proto_depIdxs = []int32{
	0, // 0: qdrant.cloud.event.v1.EventOptions.event_type:type_name -> qdrant.cloud.event.v1.EventType
	3, // 1: qdrant.cloud.event.v1.EventOptions.additional_context_fields:type_name -> qdrant.cloud.event.v1.EventOptions.AdditionalContextFieldsEntry
	5, // 2: qdrant.cloud.event.v1.Event.created_at:type_name -> google.protobuf.Timestamp
	6, // 3: qdrant.cloud.event.v1.Event.actor_type:type_name -> qdrant.cloud.common.v1.ActorType
	0, // 4: qdrant.cloud.event.v1.Event.event_type:type_name -> qdrant.cloud.event.v1.EventType
	4, // 5: qdrant.cloud.event.v1.Event.additional_context:type_name -> qdrant.cloud.event.v1.Event.AdditionalContextEntry
	7, // 6: qdrant.cloud.event.v1.event_options:extendee -> google.protobuf.MethodOptions
	1, // 7: qdrant.cloud.event.v1.event_options:type_name -> qdrant.cloud.event.v1.EventOptions
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	7, // [7:8] is the sub-list for extension type_name
	6, // [6:7] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_qdrant_cloud_event_v1_events_proto_init() }
func file_qdrant_cloud_event_v1_events_proto_init() {
	if File_qdrant_cloud_event_v1_events_proto != nil {
		return
	}
	file_qdrant_cloud_event_v1_events_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_qdrant_cloud_event_v1_events_proto_rawDesc), len(file_qdrant_cloud_event_v1_events_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_qdrant_cloud_event_v1_events_proto_goTypes,
		DependencyIndexes: file_qdrant_cloud_event_v1_events_proto_depIdxs,
		EnumInfos:         file_qdrant_cloud_event_v1_events_proto_enumTypes,
		MessageInfos:      file_qdrant_cloud_event_v1_events_proto_msgTypes,
		ExtensionInfos:    file_qdrant_cloud_event_v1_events_proto_extTypes,
	}.Build()
	File_qdrant_cloud_event_v1_events_proto = out.File
	file_qdrant_cloud_event_v1_events_proto_goTypes = nil
	file_qdrant_cloud_event_v1_events_proto_depIdxs = nil
}
