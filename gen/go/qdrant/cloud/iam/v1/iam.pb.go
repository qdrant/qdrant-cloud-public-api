// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: qdrant/cloud/iam/v1/iam.proto

package iamv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UserStatus defines the possible statuses of a user.
type UserStatus int32

const (
	// Default, unspecified status.
	UserStatus_USER_STATUS_UNSPECIFIED UserStatus = 0
	// The user account is active and can be used.
	UserStatus_USER_STATUS_ACTIVE UserStatus = 1
	// The user account is blocked and cannot be used.
	UserStatus_USER_STATUS_BLOCKED UserStatus = 2
	// The user account has been marked for deletion or is deleted.
	UserStatus_USER_STATUS_DELETED UserStatus = 3
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0: "USER_STATUS_UNSPECIFIED",
		1: "USER_STATUS_ACTIVE",
		2: "USER_STATUS_BLOCKED",
		3: "USER_STATUS_DELETED",
	}
	UserStatus_value = map[string]int32{
		"USER_STATUS_UNSPECIFIED": 0,
		"USER_STATUS_ACTIVE":      1,
		"USER_STATUS_BLOCKED":     2,
		"USER_STATUS_DELETED":     3,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_qdrant_cloud_iam_v1_iam_proto_enumTypes[0].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_qdrant_cloud_iam_v1_iam_proto_enumTypes[0]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{0}
}

// LegalDocumentType specifies the type of a legal document.
type LegalDocumentType int32

const (
	// Unspecified document type.
	LegalDocumentType_LEGAL_DOCUMENT_TYPE_UNSPECIFIED LegalDocumentType = 0
	// Terms of Service document.
	LegalDocumentType_LEGAL_DOCUMENT_TYPE_TERMS_OF_SERVICE LegalDocumentType = 1
	// Privacy Policy document.
	LegalDocumentType_LEGAL_DOCUMENT_TYPE_PRIVACY_POLICY LegalDocumentType = 2
	// Service Level Agreement document.
	LegalDocumentType_LEGAL_DOCUMENT_TYPE_SLA LegalDocumentType = 3
)

// Enum value maps for LegalDocumentType.
var (
	LegalDocumentType_name = map[int32]string{
		0: "LEGAL_DOCUMENT_TYPE_UNSPECIFIED",
		1: "LEGAL_DOCUMENT_TYPE_TERMS_OF_SERVICE",
		2: "LEGAL_DOCUMENT_TYPE_PRIVACY_POLICY",
		3: "LEGAL_DOCUMENT_TYPE_SLA",
	}
	LegalDocumentType_value = map[string]int32{
		"LEGAL_DOCUMENT_TYPE_UNSPECIFIED":      0,
		"LEGAL_DOCUMENT_TYPE_TERMS_OF_SERVICE": 1,
		"LEGAL_DOCUMENT_TYPE_PRIVACY_POLICY":   2,
		"LEGAL_DOCUMENT_TYPE_SLA":              3,
	}
)

func (x LegalDocumentType) Enum() *LegalDocumentType {
	p := new(LegalDocumentType)
	*p = x
	return p
}

func (x LegalDocumentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LegalDocumentType) Descriptor() protoreflect.EnumDescriptor {
	return file_qdrant_cloud_iam_v1_iam_proto_enumTypes[1].Descriptor()
}

func (LegalDocumentType) Type() protoreflect.EnumType {
	return &file_qdrant_cloud_iam_v1_iam_proto_enumTypes[1]
}

func (x LegalDocumentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LegalDocumentType.Descriptor instead.
func (LegalDocumentType) EnumDescriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{1}
}

// UserConsentStatus specifies the status from an user for a consent.
type UserConsentStatus int32

const (
	// Unspecified consent status.
	UserConsentStatus_USER_CONSENT_STATUS_UNSPECIFIED UserConsentStatus = 0
	// The user accepted the consent.
	UserConsentStatus_USER_CONSENT_STATUS_ACCEPTED UserConsentStatus = 1
	// The user revoked the consent.
	UserConsentStatus_USER_CONSENT_STATUS_REVOKED UserConsentStatus = 2
	// The consent is pending action from the user.
	// Pending consent means that the user got notified about the new version of the document. After a certain
	// period of time, we auto accept pending consents depending on the document type.
	UserConsentStatus_USER_CONSENT_STATUS_PENDING UserConsentStatus = 3
)

// Enum value maps for UserConsentStatus.
var (
	UserConsentStatus_name = map[int32]string{
		0: "USER_CONSENT_STATUS_UNSPECIFIED",
		1: "USER_CONSENT_STATUS_ACCEPTED",
		2: "USER_CONSENT_STATUS_REVOKED",
		3: "USER_CONSENT_STATUS_PENDING",
	}
	UserConsentStatus_value = map[string]int32{
		"USER_CONSENT_STATUS_UNSPECIFIED": 0,
		"USER_CONSENT_STATUS_ACCEPTED":    1,
		"USER_CONSENT_STATUS_REVOKED":     2,
		"USER_CONSENT_STATUS_PENDING":     3,
	}
)

func (x UserConsentStatus) Enum() *UserConsentStatus {
	p := new(UserConsentStatus)
	*p = x
	return p
}

func (x UserConsentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserConsentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_qdrant_cloud_iam_v1_iam_proto_enumTypes[2].Descriptor()
}

func (UserConsentStatus) Type() protoreflect.EnumType {
	return &file_qdrant_cloud_iam_v1_iam_proto_enumTypes[2]
}

func (x UserConsentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserConsentStatus.Descriptor instead.
func (UserConsentStatus) EnumDescriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{2}
}

// RoleType specified the type of the role
type RoleType int32

const (
	// The role type is unspecified.
	RoleType_ROLE_TYPE_UNSPECIFIED RoleType = 0
	// The role type is system.
	// Note: system roles cannot be changed (create/update/delete).
	RoleType_ROLE_TYPE_SYSTEM RoleType = 1
	// The role type is custom defined.
	RoleType_ROLE_TYPE_CUSTOM RoleType = 2
)

// Enum value maps for RoleType.
var (
	RoleType_name = map[int32]string{
		0: "ROLE_TYPE_UNSPECIFIED",
		1: "ROLE_TYPE_SYSTEM",
		2: "ROLE_TYPE_CUSTOM",
	}
	RoleType_value = map[string]int32{
		"ROLE_TYPE_UNSPECIFIED": 0,
		"ROLE_TYPE_SYSTEM":      1,
		"ROLE_TYPE_CUSTOM":      2,
	}
)

func (x RoleType) Enum() *RoleType {
	p := new(RoleType)
	*p = x
	return p
}

func (x RoleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoleType) Descriptor() protoreflect.EnumDescriptor {
	return file_qdrant_cloud_iam_v1_iam_proto_enumTypes[3].Descriptor()
}

func (RoleType) Type() protoreflect.EnumType {
	return &file_qdrant_cloud_iam_v1_iam_proto_enumTypes[3]
}

func (x RoleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoleType.Descriptor instead.
func (RoleType) EnumDescriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{3}
}

// GetAuthenticatedUserRequest is the request for the GetAuthenticatedUser function
type GetAuthenticatedUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuthenticatedUserRequest) Reset() {
	*x = GetAuthenticatedUserRequest{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuthenticatedUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthenticatedUserRequest) ProtoMessage() {}

func (x *GetAuthenticatedUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthenticatedUserRequest.ProtoReflect.Descriptor instead.
func (*GetAuthenticatedUserRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{0}
}

// GetAuthenticatedUserResponse is the response from the GetAuthenticatedUser function
type GetAuthenticatedUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual user.
	User          *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuthenticatedUserResponse) Reset() {
	*x = GetAuthenticatedUserResponse{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuthenticatedUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthenticatedUserResponse) ProtoMessage() {}

func (x *GetAuthenticatedUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthenticatedUserResponse.ProtoReflect.Descriptor instead.
func (*GetAuthenticatedUserResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{1}
}

func (x *GetAuthenticatedUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// UpdateUserRequest is the request for the UpdateUser function.
type UpdateUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual user.
	User          *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// UpdateUserResponse is the response from the UpdateUser function.
type UpdateUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual user.
	User          *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// GetUserConsentRequest is the request for the GetUserConsent function.
type GetUserConsentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of the legal document.
	// This is a required field and cannot be UNSPECIFIED.
	DocumentType  LegalDocumentType `protobuf:"varint,1,opt,name=document_type,json=documentType,proto3,enum=qdrant.cloud.iam.v1.LegalDocumentType" json:"document_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserConsentRequest) Reset() {
	*x = GetUserConsentRequest{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserConsentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConsentRequest) ProtoMessage() {}

func (x *GetUserConsentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConsentRequest.ProtoReflect.Descriptor instead.
func (*GetUserConsentRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserConsentRequest) GetDocumentType() LegalDocumentType {
	if x != nil {
		return x.DocumentType
	}
	return LegalDocumentType_LEGAL_DOCUMENT_TYPE_UNSPECIFIED
}

// GetUserConsentResponse is the response from the GetUserConsent function.
type GetUserConsentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of the legal document for which consent status is reported.
	DocumentType LegalDocumentType `protobuf:"varint,1,opt,name=document_type,json=documentType,proto3,enum=qdrant.cloud.iam.v1.LegalDocumentType" json:"document_type,omitempty"`
	// The latest consent status recorded from the user for this document type.
	// Will be USER_CONSENT_STATUS_UNSPECIFIED if no status update has been recorded.
	Status UserConsentStatus `protobuf:"varint,2,opt,name=status,proto3,enum=qdrant.cloud.iam.v1.UserConsentStatus" json:"status,omitempty"`
	// Timestamp of the most recent status update.
	// Unset if no status update has been recorded.
	LastModifiedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_modified_at,json=lastModifiedAt,proto3,oneof" json:"last_modified_at,omitempty"`
	// A convenience field indicating if the current status is an acceptance.
	// True if status is USER_CONSENT_STATUS_ACCEPTED, false otherwise.
	IsAccepted    bool `protobuf:"varint,4,opt,name=is_accepted,json=isAccepted,proto3" json:"is_accepted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserConsentResponse) Reset() {
	*x = GetUserConsentResponse{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserConsentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConsentResponse) ProtoMessage() {}

func (x *GetUserConsentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConsentResponse.ProtoReflect.Descriptor instead.
func (*GetUserConsentResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserConsentResponse) GetDocumentType() LegalDocumentType {
	if x != nil {
		return x.DocumentType
	}
	return LegalDocumentType_LEGAL_DOCUMENT_TYPE_UNSPECIFIED
}

func (x *GetUserConsentResponse) GetStatus() UserConsentStatus {
	if x != nil {
		return x.Status
	}
	return UserConsentStatus_USER_CONSENT_STATUS_UNSPECIFIED
}

func (x *GetUserConsentResponse) GetLastModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModifiedAt
	}
	return nil
}

func (x *GetUserConsentResponse) GetIsAccepted() bool {
	if x != nil {
		return x.IsAccepted
	}
	return false
}

// RecordUserConsentRequest is the request for the RecordUserConsent function.
type RecordUserConsentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of the legal document.
	// This is a required field and cannot be UNSPECIFIED.
	DocumentType LegalDocumentType `protobuf:"varint,1,opt,name=document_type,json=documentType,proto3,enum=qdrant.cloud.iam.v1.LegalDocumentType" json:"document_type,omitempty"`
	// The status update initiated by the user.
	// This is a required field and cannot be UNSPECIFIED or PENDING.
	StatusUpdate  UserConsentStatus `protobuf:"varint,2,opt,name=status_update,json=statusUpdate,proto3,enum=qdrant.cloud.iam.v1.UserConsentStatus" json:"status_update,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordUserConsentRequest) Reset() {
	*x = RecordUserConsentRequest{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordUserConsentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordUserConsentRequest) ProtoMessage() {}

func (x *RecordUserConsentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordUserConsentRequest.ProtoReflect.Descriptor instead.
func (*RecordUserConsentRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{6}
}

func (x *RecordUserConsentRequest) GetDocumentType() LegalDocumentType {
	if x != nil {
		return x.DocumentType
	}
	return LegalDocumentType_LEGAL_DOCUMENT_TYPE_UNSPECIFIED
}

func (x *RecordUserConsentRequest) GetStatusUpdate() UserConsentStatus {
	if x != nil {
		return x.StatusUpdate
	}
	return UserConsentStatus_USER_CONSENT_STATUS_UNSPECIFIED
}

// RecordUserConsentResponse is the response from the RecordUserConsent function.
type RecordUserConsentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordUserConsentResponse) Reset() {
	*x = RecordUserConsentResponse{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordUserConsentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordUserConsentResponse) ProtoMessage() {}

func (x *RecordUserConsentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordUserConsentResponse.ProtoReflect.Descriptor instead.
func (*RecordUserConsentResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{7}
}

// ListPermissionsRequest is the request for the ListPermissions function
type ListPermissionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId     string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPermissionsRequest) Reset() {
	*x = ListPermissionsRequest{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionsRequest) ProtoMessage() {}

func (x *ListPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionsRequest.ProtoReflect.Descriptor instead.
func (*ListPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{8}
}

func (x *ListPermissionsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// ListPermissionsResponse is the response from the ListPermissions function
type ListPermissionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The permissions know by the system.
	Permissions   []string `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPermissionsResponse) Reset() {
	*x = ListPermissionsResponse{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionsResponse) ProtoMessage() {}

func (x *ListPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionsResponse.ProtoReflect.Descriptor instead.
func (*ListPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{9}
}

func (x *ListPermissionsResponse) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// ListRolesRequest is the request for the ListRoles function
type ListRolesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId     string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRolesRequest) Reset() {
	*x = ListRolesRequest{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolesRequest) ProtoMessage() {}

func (x *ListRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolesRequest.ProtoReflect.Descriptor instead.
func (*ListRolesRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{10}
}

func (x *ListRolesRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// ListRolesResponse is the response from the ListRoles function
type ListRolesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual roles in this list.
	Items         []*Role `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRolesResponse) Reset() {
	*x = ListRolesResponse{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolesResponse) ProtoMessage() {}

func (x *ListRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolesResponse.ProtoReflect.Descriptor instead.
func (*ListRolesResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{11}
}

func (x *ListRolesResponse) GetItems() []*Role {
	if x != nil {
		return x.Items
	}
	return nil
}

// GetRoleRequest is the request for the GetRole function
type GetRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The identifier of the role (in GUID format).
	// This is a required field.
	RoleId        string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoleRequest) Reset() {
	*x = GetRoleRequest{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleRequest) ProtoMessage() {}

func (x *GetRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleRequest.ProtoReflect.Descriptor instead.
func (*GetRoleRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{12}
}

func (x *GetRoleRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetRoleRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

// GetRoleResponse is the response from the GetRole function
type GetRoleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual role.
	Role          *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoleResponse) Reset() {
	*x = GetRoleResponse{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleResponse) ProtoMessage() {}

func (x *GetRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleResponse.ProtoReflect.Descriptor instead.
func (*GetRoleResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{13}
}

func (x *GetRoleResponse) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

// CreateRoleRequest is the request for the CreateRole function.
type CreateRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual role.
	Role          *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoleRequest) Reset() {
	*x = CreateRoleRequest{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRequest) ProtoMessage() {}

func (x *CreateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateRoleRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{14}
}

func (x *CreateRoleRequest) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

// CreateRoleResponse is the response from the CreateRole function.
type CreateRoleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual role.
	Role          *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoleResponse) Reset() {
	*x = CreateRoleResponse{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleResponse) ProtoMessage() {}

func (x *CreateRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleResponse.ProtoReflect.Descriptor instead.
func (*CreateRoleResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{15}
}

func (x *CreateRoleResponse) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

// UpdateRoleRequest is the request for the UpdateRole function.
type UpdateRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual role.
	Role          *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRoleRequest) Reset() {
	*x = UpdateRoleRequest{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleRequest) ProtoMessage() {}

func (x *UpdateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoleRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateRoleRequest) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

// UpdateRoleResponse is the response from the UpdateRole function.
type UpdateRoleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual role.
	Role          *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRoleResponse) Reset() {
	*x = UpdateRoleResponse{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleResponse) ProtoMessage() {}

func (x *UpdateRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateRoleResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateRoleResponse) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

// DeleteRoleRequest is the request for the DeleteRole function.
type DeleteRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The identifier of the role (in GUID format).
	// This is a required field.
	RoleId        string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRoleRequest) Reset() {
	*x = DeleteRoleRequest{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRequest) ProtoMessage() {}

func (x *DeleteRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoleRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteRoleRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DeleteRoleRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

// DeleteRoleResponse is the response from the DeleteRole function.
type DeleteRoleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRoleResponse) Reset() {
	*x = DeleteRoleResponse{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleResponse) ProtoMessage() {}

func (x *DeleteRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRoleResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{19}
}

// ListEffectivePermissionsRequest is the request for the ListEffectivePermissions function
type ListEffectivePermissionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId     string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEffectivePermissionsRequest) Reset() {
	*x = ListEffectivePermissionsRequest{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEffectivePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEffectivePermissionsRequest) ProtoMessage() {}

func (x *ListEffectivePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEffectivePermissionsRequest.ProtoReflect.Descriptor instead.
func (*ListEffectivePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{20}
}

func (x *ListEffectivePermissionsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// ListEffectivePermissionsResponse is the response from the ListEffectivePermissions function
type ListEffectivePermissionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The effective permissions.
	Permissions   []string `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEffectivePermissionsResponse) Reset() {
	*x = ListEffectivePermissionsResponse{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEffectivePermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEffectivePermissionsResponse) ProtoMessage() {}

func (x *ListEffectivePermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEffectivePermissionsResponse.ProtoReflect.Descriptor instead.
func (*ListEffectivePermissionsResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{21}
}

func (x *ListEffectivePermissionsResponse) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// ListUserRolesRequest is the request for the ListUserRoles function
type ListUserRolesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The identifier of the user (in GUID format).
	// This user should be part of the provided account.
	// This is a required field.
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserRolesRequest) Reset() {
	*x = ListUserRolesRequest{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRolesRequest) ProtoMessage() {}

func (x *ListUserRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRolesRequest.ProtoReflect.Descriptor instead.
func (*ListUserRolesRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{22}
}

func (x *ListUserRolesRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListUserRolesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// ListUserRolesResponse is the response from the ListUserRoles function
type ListUserRolesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The roles assigned to the user.
	// If the user has no roles, this list will be empty.
	Roles         []*Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserRolesResponse) Reset() {
	*x = ListUserRolesResponse{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRolesResponse) ProtoMessage() {}

func (x *ListUserRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRolesResponse.ProtoReflect.Descriptor instead.
func (*ListUserRolesResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{23}
}

func (x *ListUserRolesResponse) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

// AssignUserRolesRequest is the request for the AssignUserRoles function
type AssignUserRolesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The identifier of the user (in GUID format).
	// This user should be part of the provided account.
	// This is a required field.
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The roles to add to the provided user.
	// If a role was already part of the user or the same role is provided multiple times, the role will be added exactly one time.
	RoleIdsToAdd []string `protobuf:"bytes,3,rep,name=role_ids_to_add,json=roleIdsToAdd,proto3" json:"role_ids_to_add,omitempty"`
	// The roles to be deleted from the provided user.
	// If a role is part of the role_ids_to_add this field takes precedence.
	RoleIdsToDelete []string `protobuf:"bytes,4,rep,name=role_ids_to_delete,json=roleIdsToDelete,proto3" json:"role_ids_to_delete,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AssignUserRolesRequest) Reset() {
	*x = AssignUserRolesRequest{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignUserRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignUserRolesRequest) ProtoMessage() {}

func (x *AssignUserRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignUserRolesRequest.ProtoReflect.Descriptor instead.
func (*AssignUserRolesRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{24}
}

func (x *AssignUserRolesRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AssignUserRolesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AssignUserRolesRequest) GetRoleIdsToAdd() []string {
	if x != nil {
		return x.RoleIdsToAdd
	}
	return nil
}

func (x *AssignUserRolesRequest) GetRoleIdsToDelete() []string {
	if x != nil {
		return x.RoleIdsToDelete
	}
	return nil
}

// AssignUserRolesResponse is the response from the AssignUserRoles function
type AssignUserRolesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignUserRolesResponse) Reset() {
	*x = AssignUserRolesResponse{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignUserRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignUserRolesResponse) ProtoMessage() {}

func (x *AssignUserRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignUserRolesResponse.ProtoReflect.Descriptor instead.
func (*AssignUserRolesResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{25}
}

// A User represents a user in the Qdrant cloud.
type User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the user (in GUID format).
	// This is a read-only field and will be available after the user is created.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The timestamp when the user was created.
	// This is a read-only field and will be available after the user is created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The timestamp when the user was last updated.
	// This is a read-only field and will be available after the user is created.
	LastModifiedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_modified_at,json=lastModifiedAt,proto3" json:"last_modified_at,omitempty"`
	// The email address of the user.
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// The status of the user.
	// This is a read-only field.
	Status UserStatus `protobuf:"varint,5,opt,name=status,proto3,enum=qdrant.cloud.iam.v1.UserStatus" json:"status,omitempty"`
	// The default account ID of the user (in GUID format).
	// You should be member of the account when updating.
	DefaultAccountId string `protobuf:"bytes,6,opt,name=default_account_id,json=defaultAccountId,proto3" json:"default_account_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{26}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetLastModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModifiedAt
	}
	return nil
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_USER_STATUS_UNSPECIFIED
}

func (x *User) GetDefaultAccountId() string {
	if x != nil {
		return x.DefaultAccountId
	}
	return ""
}

// A Role represents a role in the Qdrant cloud.
type Role struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the role (in GUID format).
	// This is a read-only field and will be available after a role is created.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The timestamp when the role was created.
	// This is a read-only field and will be available after a role is created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The timestamp when the role was last updated.
	// This is a read-only field and will be available after a role is created.
	LastModifiedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_modified_at,json=lastModifiedAt,proto3" json:"last_modified_at,omitempty"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The name of the role.
	// Name can only contain letters, numbers, underscores and dashes
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// The human readable description of this role.
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// The role type.
	RoleType RoleType `protobuf:"varint,7,opt,name=role_type,json=roleType,proto3,enum=qdrant.cloud.iam.v1.RoleType" json:"role_type,omitempty"`
	// The permissions associated with this role.
	// Must contain at least one permission.
	Permissions   []string `protobuf:"bytes,8,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Role) Reset() {
	*x = Role{}
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_iam_v1_iam_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP(), []int{27}
}

func (x *Role) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Role) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Role) GetLastModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModifiedAt
	}
	return nil
}

func (x *Role) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Role) GetRoleType() RoleType {
	if x != nil {
		return x.RoleType
	}
	return RoleType_ROLE_TYPE_UNSPECIFIED
}

func (x *Role) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

var File_qdrant_cloud_iam_v1_iam_proto protoreflect.FileDescriptor

const file_qdrant_cloud_iam_v1_iam_proto_rawDesc = "" +
	"\n" +
	"\x1dqdrant/cloud/iam/v1/iam.proto\x12\x13qdrant.cloud.iam.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#qdrant/cloud/common/v1/common.proto\"\x1d\n" +
	"\x1bGetAuthenticatedUserRequest\"M\n" +
	"\x1cGetAuthenticatedUserResponse\x12-\n" +
	"\x04user\x18\x01 \x01(\v2\x19.qdrant.cloud.iam.v1.UserR\x04user\"B\n" +
	"\x11UpdateUserRequest\x12-\n" +
	"\x04user\x18\x01 \x01(\v2\x19.qdrant.cloud.iam.v1.UserR\x04user\"C\n" +
	"\x12UpdateUserResponse\x12-\n" +
	"\x04user\x18\x01 \x01(\v2\x19.qdrant.cloud.iam.v1.UserR\x04user\"p\n" +
	"\x15GetUserConsentRequest\x12W\n" +
	"\rdocument_type\x18\x01 \x01(\x0e2&.qdrant.cloud.iam.v1.LegalDocumentTypeB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\fdocumentType\"\xa6\x02\n" +
	"\x16GetUserConsentResponse\x12K\n" +
	"\rdocument_type\x18\x01 \x01(\x0e2&.qdrant.cloud.iam.v1.LegalDocumentTypeR\fdocumentType\x12>\n" +
	"\x06status\x18\x02 \x01(\x0e2&.qdrant.cloud.iam.v1.UserConsentStatusR\x06status\x12I\n" +
	"\x10last_modified_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x0elastModifiedAt\x88\x01\x01\x12\x1f\n" +
	"\vis_accepted\x18\x04 \x01(\bR\n" +
	"isAcceptedB\x13\n" +
	"\x11_last_modified_at\"\xce\x01\n" +
	"\x18RecordUserConsentRequest\x12W\n" +
	"\rdocument_type\x18\x01 \x01(\x0e2&.qdrant.cloud.iam.v1.LegalDocumentTypeB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\fdocumentType\x12Y\n" +
	"\rstatus_update\x18\x02 \x01(\x0e2&.qdrant.cloud.iam.v1.UserConsentStatusB\f\xbaH\t\x82\x01\x06\x10\x01 \x00 \x03R\fstatusUpdate\"\x1b\n" +
	"\x19RecordUserConsentResponse\"A\n" +
	"\x16ListPermissionsRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\";\n" +
	"\x17ListPermissionsResponse\x12 \n" +
	"\vpermissions\x18\x01 \x03(\tR\vpermissions\";\n" +
	"\x10ListRolesRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\"D\n" +
	"\x11ListRolesResponse\x12/\n" +
	"\x05items\x18\x01 \x03(\v2\x19.qdrant.cloud.iam.v1.RoleR\x05items\"\\\n" +
	"\x0eGetRoleRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12!\n" +
	"\arole_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x06roleId\"@\n" +
	"\x0fGetRoleResponse\x12-\n" +
	"\x04role\x18\x01 \x01(\v2\x19.qdrant.cloud.iam.v1.RoleR\x04role\"B\n" +
	"\x11CreateRoleRequest\x12-\n" +
	"\x04role\x18\x01 \x01(\v2\x19.qdrant.cloud.iam.v1.RoleR\x04role\"C\n" +
	"\x12CreateRoleResponse\x12-\n" +
	"\x04role\x18\x01 \x01(\v2\x19.qdrant.cloud.iam.v1.RoleR\x04role\"B\n" +
	"\x11UpdateRoleRequest\x12-\n" +
	"\x04role\x18\x01 \x01(\v2\x19.qdrant.cloud.iam.v1.RoleR\x04role\"C\n" +
	"\x12UpdateRoleResponse\x12-\n" +
	"\x04role\x18\x01 \x01(\v2\x19.qdrant.cloud.iam.v1.RoleR\x04role\"_\n" +
	"\x11DeleteRoleRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12!\n" +
	"\arole_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x06roleId\"\x14\n" +
	"\x12DeleteRoleResponse\"J\n" +
	"\x1fListEffectivePermissionsRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\"D\n" +
	" ListEffectivePermissionsResponse\x12 \n" +
	"\vpermissions\x18\x01 \x03(\tR\vpermissions\"b\n" +
	"\x14ListUserRolesRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12!\n" +
	"\auser_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x06userId\"H\n" +
	"\x15ListUserRolesResponse\x12/\n" +
	"\x05roles\x18\x01 \x03(\v2\x19.qdrant.cloud.iam.v1.RoleR\x05roles\"\xd6\x01\n" +
	"\x16AssignUserRolesRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12!\n" +
	"\auser_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x06userId\x124\n" +
	"\x0frole_ids_to_add\x18\x03 \x03(\tB\r\xbaH\n" +
	"\x92\x01\a\"\x05r\x03\xb0\x01\x01R\froleIdsToAdd\x12:\n" +
	"\x12role_ids_to_delete\x18\x04 \x03(\tB\r\xbaH\n" +
	"\x92\x01\a\"\x05r\x03\xb0\x01\x01R\x0froleIdsToDelete\"\x19\n" +
	"\x17AssignUserRolesResponse\"\xb1\x02\n" +
	"\x04User\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12D\n" +
	"\x10last_modified_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0elastModifiedAt\x12\x1d\n" +
	"\x05email\x18\x04 \x01(\tB\a\xbaH\x04r\x02`\x01R\x05email\x127\n" +
	"\x06status\x18\x05 \x01(\x0e2\x1f.qdrant.cloud.iam.v1.UserStatusR\x06status\x126\n" +
	"\x12default_account_id\x18\x06 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x10defaultAccountId\"\xa8\x04\n" +
	"\x04Role\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12D\n" +
	"\x10last_modified_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0elastModifiedAt\x12'\n" +
	"\n" +
	"account_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12/\n" +
	"\x04name\x18\x05 \x01(\tB\x1b\xbaH\x18r\x16\x10\x04\x18@2\x10^[a-zA-Z0-9-_]+$R\x04name\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12:\n" +
	"\trole_type\x18\a \x01(\x0e2\x1d.qdrant.cloud.iam.v1.RoleTypeR\broleType\x12*\n" +
	"\vpermissions\x18\b \x03(\tB\b\xbaH\x05\x92\x01\x02\b\x01R\vpermissions:\xaa\x01\xbaH\xa6\x01\x1a\xa3\x01\n" +
	"\n" +
	"cluster.id\x12\x1avalue must be a valid UUID\x1aythis.id.matches('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$') || !has(this.created_at)*s\n" +
	"\n" +
	"UserStatus\x12\x1b\n" +
	"\x17USER_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12USER_STATUS_ACTIVE\x10\x01\x12\x17\n" +
	"\x13USER_STATUS_BLOCKED\x10\x02\x12\x17\n" +
	"\x13USER_STATUS_DELETED\x10\x03*\xa7\x01\n" +
	"\x11LegalDocumentType\x12#\n" +
	"\x1fLEGAL_DOCUMENT_TYPE_UNSPECIFIED\x10\x00\x12(\n" +
	"$LEGAL_DOCUMENT_TYPE_TERMS_OF_SERVICE\x10\x01\x12&\n" +
	"\"LEGAL_DOCUMENT_TYPE_PRIVACY_POLICY\x10\x02\x12\x1b\n" +
	"\x17LEGAL_DOCUMENT_TYPE_SLA\x10\x03*\x9c\x01\n" +
	"\x11UserConsentStatus\x12#\n" +
	"\x1fUSER_CONSENT_STATUS_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cUSER_CONSENT_STATUS_ACCEPTED\x10\x01\x12\x1f\n" +
	"\x1bUSER_CONSENT_STATUS_REVOKED\x10\x02\x12\x1f\n" +
	"\x1bUSER_CONSENT_STATUS_PENDING\x10\x03*Q\n" +
	"\bRoleType\x12\x19\n" +
	"\x15ROLE_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10ROLE_TYPE_SYSTEM\x10\x01\x12\x14\n" +
	"\x10ROLE_TYPE_CUSTOM\x10\x022\xb8\x12\n" +
	"\n" +
	"IAMService\x12\xa6\x01\n" +
	"\x14GetAuthenticatedUser\x120.qdrant.cloud.iam.v1.GetAuthenticatedUserRequest\x1a1.qdrant.cloud.iam.v1.GetAuthenticatedUserResponse\")\x8a\xb5\x18\x00\x92\xb5\x18\x00\xa2\xb5\x18\x01\x01\x82\xd3\xe4\x93\x02\x16\x12\x14/api/iam/v1/users/me\x12\x97\x01\n" +
	"\n" +
	"UpdateUser\x12&.qdrant.cloud.iam.v1.UpdateUserRequest\x1a'.qdrant.cloud.iam.v1.UpdateUserResponse\"8\x8a\xb5\x18\n" +
	"write:user\x92\xb5\x18\x00\x82\xd3\xe4\x93\x02 :\x01*\x1a\x1b/api/iam/v1/users/{user.id}\x12\x9c\x01\n" +
	"\x0eGetUserConsent\x12*.qdrant.cloud.iam.v1.GetUserConsentRequest\x1a+.qdrant.cloud.iam.v1.GetUserConsentResponse\"1\x8a\xb5\x18\x00\x92\xb5\x18\x00\xa2\xb5\x18\x01\x01\x82\xd3\xe4\x93\x02\x1e\x12\x1c/api/iam/v1/users/me/consent\x12\xb2\x01\n" +
	"\x11RecordUserConsent\x12-.qdrant.cloud.iam.v1.RecordUserConsentRequest\x1a..qdrant.cloud.iam.v1.RecordUserConsentResponse\">\x8a\xb5\x18\n" +
	"write:user\x92\xb5\x18\x00\xa2\xb5\x18\x01\x01\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/api/iam/v1/users/me/consent\x12\xb1\x01\n" +
	"\x0fListPermissions\x12+.qdrant.cloud.iam.v1.ListPermissionsRequest\x1a,.qdrant.cloud.iam.v1.ListPermissionsResponse\"C\x8a\xb5\x18\n" +
	"read:roles\x82\xd3\xe4\x93\x02/\x12-/api/iam/v1/accounts/{account_id}/permissions\x12\x99\x01\n" +
	"\tListRoles\x12%.qdrant.cloud.iam.v1.ListRolesRequest\x1a&.qdrant.cloud.iam.v1.ListRolesResponse\"=\x8a\xb5\x18\n" +
	"read:roles\x82\xd3\xe4\x93\x02)\x12'/api/iam/v1/accounts/{account_id}/roles\x12\xb0\x01\n" +
	"\aGetRole\x12#.qdrant.cloud.iam.v1.GetRoleRequest\x1a$.qdrant.cloud.iam.v1.GetRoleResponse\"Z\x8a\xb5\x18\n" +
	"read:roles\x92\xb5\x18\x0frole.account_id\x82\xd3\xe4\x93\x023\x121/api/iam/v1/accounts/{account_id}/roles/{role_id}\x12\xbd\x01\n" +
	"\n" +
	"CreateRole\x12&.qdrant.cloud.iam.v1.CreateRoleRequest\x1a'.qdrant.cloud.iam.v1.CreateRoleResponse\"^\x8a\xb5\x18\vwrite:roles\x92\xb5\x18\x0frole.account_id\xa2\xb5\x18\x01\x01\x82\xd3\xe4\x93\x021:\x01*\",/api/iam/v1/accounts/{role.account_id}/roles\x12\xc7\x01\n" +
	"\n" +
	"UpdateRole\x12&.qdrant.cloud.iam.v1.UpdateRoleRequest\x1a'.qdrant.cloud.iam.v1.UpdateRoleResponse\"h\x8a\xb5\x18\vwrite:roles\x92\xb5\x18\x0frole.account_id\xa2\xb5\x18\x01\x01\x82\xd3\xe4\x93\x02;:\x01*\x1a6/api/iam/v1/accounts/{role.account_id}/roles/{role.id}\x12\xad\x01\n" +
	"\n" +
	"DeleteRole\x12&.qdrant.cloud.iam.v1.DeleteRoleRequest\x1a'.qdrant.cloud.iam.v1.DeleteRoleResponse\"N\x8a\xb5\x18\fdelete:roles\xa2\xb5\x18\x01\x01\x82\xd3\xe4\x93\x023*1/api/iam/v1/accounts/{account_id}/roles/{role_id}\x12\xd6\x01\n" +
	"\x18ListEffectivePermissions\x124.qdrant.cloud.iam.v1.ListEffectivePermissionsRequest\x1a5.qdrant.cloud.iam.v1.ListEffectivePermissionsResponse\"M\x8a\xb5\x18\n" +
	"read:roles\x82\xd3\xe4\x93\x029\x127/api/iam/v1/accounts/{account_id}/effective-permissions\x12\xb5\x01\n" +
	"\rListUserRoles\x12).qdrant.cloud.iam.v1.ListUserRolesRequest\x1a*.qdrant.cloud.iam.v1.ListUserRolesResponse\"M\x8a\xb5\x18\n" +
	"read:roles\x82\xd3\xe4\x93\x029\x127/api/iam/v1/accounts/{account_id}/users/{user_id}/roles\x12\xc4\x01\n" +
	"\x0fAssignUserRoles\x12+.qdrant.cloud.iam.v1.AssignUserRolesRequest\x1a,.qdrant.cloud.iam.v1.AssignUserRolesResponse\"V\x8a\xb5\x18\vwrite:roles\xa2\xb5\x18\x01\x01\x82\xd3\xe4\x93\x02<:\x01*\"7/api/iam/v1/accounts/{account_id}/users/{user_id}/rolesB\xde\x01\n" +
	"\x17com.qdrant.cloud.iam.v1B\bIamProtoP\x01ZJgithub.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/iam/v1;iamv1\xa2\x02\x03QCI\xaa\x02\x13Qdrant.Cloud.Iam.V1\xca\x02\x13Qdrant\\Cloud\\Iam\\V1\xe2\x02\x1fQdrant\\Cloud\\Iam\\V1\\GPBMetadata\xea\x02\x16Qdrant::Cloud::Iam::V1b\x06proto3"

var (
	file_qdrant_cloud_iam_v1_iam_proto_rawDescOnce sync.Once
	file_qdrant_cloud_iam_v1_iam_proto_rawDescData []byte
)

func file_qdrant_cloud_iam_v1_iam_proto_rawDescGZIP() []byte {
	file_qdrant_cloud_iam_v1_iam_proto_rawDescOnce.Do(func() {
		file_qdrant_cloud_iam_v1_iam_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_qdrant_cloud_iam_v1_iam_proto_rawDesc), len(file_qdrant_cloud_iam_v1_iam_proto_rawDesc)))
	})
	return file_qdrant_cloud_iam_v1_iam_proto_rawDescData
}

var file_qdrant_cloud_iam_v1_iam_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_qdrant_cloud_iam_v1_iam_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_qdrant_cloud_iam_v1_iam_proto_goTypes = []any{
	(UserStatus)(0),                          // 0: qdrant.cloud.iam.v1.UserStatus
	(LegalDocumentType)(0),                   // 1: qdrant.cloud.iam.v1.LegalDocumentType
	(UserConsentStatus)(0),                   // 2: qdrant.cloud.iam.v1.UserConsentStatus
	(RoleType)(0),                            // 3: qdrant.cloud.iam.v1.RoleType
	(*GetAuthenticatedUserRequest)(nil),      // 4: qdrant.cloud.iam.v1.GetAuthenticatedUserRequest
	(*GetAuthenticatedUserResponse)(nil),     // 5: qdrant.cloud.iam.v1.GetAuthenticatedUserResponse
	(*UpdateUserRequest)(nil),                // 6: qdrant.cloud.iam.v1.UpdateUserRequest
	(*UpdateUserResponse)(nil),               // 7: qdrant.cloud.iam.v1.UpdateUserResponse
	(*GetUserConsentRequest)(nil),            // 8: qdrant.cloud.iam.v1.GetUserConsentRequest
	(*GetUserConsentResponse)(nil),           // 9: qdrant.cloud.iam.v1.GetUserConsentResponse
	(*RecordUserConsentRequest)(nil),         // 10: qdrant.cloud.iam.v1.RecordUserConsentRequest
	(*RecordUserConsentResponse)(nil),        // 11: qdrant.cloud.iam.v1.RecordUserConsentResponse
	(*ListPermissionsRequest)(nil),           // 12: qdrant.cloud.iam.v1.ListPermissionsRequest
	(*ListPermissionsResponse)(nil),          // 13: qdrant.cloud.iam.v1.ListPermissionsResponse
	(*ListRolesRequest)(nil),                 // 14: qdrant.cloud.iam.v1.ListRolesRequest
	(*ListRolesResponse)(nil),                // 15: qdrant.cloud.iam.v1.ListRolesResponse
	(*GetRoleRequest)(nil),                   // 16: qdrant.cloud.iam.v1.GetRoleRequest
	(*GetRoleResponse)(nil),                  // 17: qdrant.cloud.iam.v1.GetRoleResponse
	(*CreateRoleRequest)(nil),                // 18: qdrant.cloud.iam.v1.CreateRoleRequest
	(*CreateRoleResponse)(nil),               // 19: qdrant.cloud.iam.v1.CreateRoleResponse
	(*UpdateRoleRequest)(nil),                // 20: qdrant.cloud.iam.v1.UpdateRoleRequest
	(*UpdateRoleResponse)(nil),               // 21: qdrant.cloud.iam.v1.UpdateRoleResponse
	(*DeleteRoleRequest)(nil),                // 22: qdrant.cloud.iam.v1.DeleteRoleRequest
	(*DeleteRoleResponse)(nil),               // 23: qdrant.cloud.iam.v1.DeleteRoleResponse
	(*ListEffectivePermissionsRequest)(nil),  // 24: qdrant.cloud.iam.v1.ListEffectivePermissionsRequest
	(*ListEffectivePermissionsResponse)(nil), // 25: qdrant.cloud.iam.v1.ListEffectivePermissionsResponse
	(*ListUserRolesRequest)(nil),             // 26: qdrant.cloud.iam.v1.ListUserRolesRequest
	(*ListUserRolesResponse)(nil),            // 27: qdrant.cloud.iam.v1.ListUserRolesResponse
	(*AssignUserRolesRequest)(nil),           // 28: qdrant.cloud.iam.v1.AssignUserRolesRequest
	(*AssignUserRolesResponse)(nil),          // 29: qdrant.cloud.iam.v1.AssignUserRolesResponse
	(*User)(nil),                             // 30: qdrant.cloud.iam.v1.User
	(*Role)(nil),                             // 31: qdrant.cloud.iam.v1.Role
	(*timestamppb.Timestamp)(nil),            // 32: google.protobuf.Timestamp
}
var file_qdrant_cloud_iam_v1_iam_proto_depIdxs = []int32{
	30, // 0: qdrant.cloud.iam.v1.GetAuthenticatedUserResponse.user:type_name -> qdrant.cloud.iam.v1.User
	30, // 1: qdrant.cloud.iam.v1.UpdateUserRequest.user:type_name -> qdrant.cloud.iam.v1.User
	30, // 2: qdrant.cloud.iam.v1.UpdateUserResponse.user:type_name -> qdrant.cloud.iam.v1.User
	1,  // 3: qdrant.cloud.iam.v1.GetUserConsentRequest.document_type:type_name -> qdrant.cloud.iam.v1.LegalDocumentType
	1,  // 4: qdrant.cloud.iam.v1.GetUserConsentResponse.document_type:type_name -> qdrant.cloud.iam.v1.LegalDocumentType
	2,  // 5: qdrant.cloud.iam.v1.GetUserConsentResponse.status:type_name -> qdrant.cloud.iam.v1.UserConsentStatus
	32, // 6: qdrant.cloud.iam.v1.GetUserConsentResponse.last_modified_at:type_name -> google.protobuf.Timestamp
	1,  // 7: qdrant.cloud.iam.v1.RecordUserConsentRequest.document_type:type_name -> qdrant.cloud.iam.v1.LegalDocumentType
	2,  // 8: qdrant.cloud.iam.v1.RecordUserConsentRequest.status_update:type_name -> qdrant.cloud.iam.v1.UserConsentStatus
	31, // 9: qdrant.cloud.iam.v1.ListRolesResponse.items:type_name -> qdrant.cloud.iam.v1.Role
	31, // 10: qdrant.cloud.iam.v1.GetRoleResponse.role:type_name -> qdrant.cloud.iam.v1.Role
	31, // 11: qdrant.cloud.iam.v1.CreateRoleRequest.role:type_name -> qdrant.cloud.iam.v1.Role
	31, // 12: qdrant.cloud.iam.v1.CreateRoleResponse.role:type_name -> qdrant.cloud.iam.v1.Role
	31, // 13: qdrant.cloud.iam.v1.UpdateRoleRequest.role:type_name -> qdrant.cloud.iam.v1.Role
	31, // 14: qdrant.cloud.iam.v1.UpdateRoleResponse.role:type_name -> qdrant.cloud.iam.v1.Role
	31, // 15: qdrant.cloud.iam.v1.ListUserRolesResponse.roles:type_name -> qdrant.cloud.iam.v1.Role
	32, // 16: qdrant.cloud.iam.v1.User.created_at:type_name -> google.protobuf.Timestamp
	32, // 17: qdrant.cloud.iam.v1.User.last_modified_at:type_name -> google.protobuf.Timestamp
	0,  // 18: qdrant.cloud.iam.v1.User.status:type_name -> qdrant.cloud.iam.v1.UserStatus
	32, // 19: qdrant.cloud.iam.v1.Role.created_at:type_name -> google.protobuf.Timestamp
	32, // 20: qdrant.cloud.iam.v1.Role.last_modified_at:type_name -> google.protobuf.Timestamp
	3,  // 21: qdrant.cloud.iam.v1.Role.role_type:type_name -> qdrant.cloud.iam.v1.RoleType
	4,  // 22: qdrant.cloud.iam.v1.IAMService.GetAuthenticatedUser:input_type -> qdrant.cloud.iam.v1.GetAuthenticatedUserRequest
	6,  // 23: qdrant.cloud.iam.v1.IAMService.UpdateUser:input_type -> qdrant.cloud.iam.v1.UpdateUserRequest
	8,  // 24: qdrant.cloud.iam.v1.IAMService.GetUserConsent:input_type -> qdrant.cloud.iam.v1.GetUserConsentRequest
	10, // 25: qdrant.cloud.iam.v1.IAMService.RecordUserConsent:input_type -> qdrant.cloud.iam.v1.RecordUserConsentRequest
	12, // 26: qdrant.cloud.iam.v1.IAMService.ListPermissions:input_type -> qdrant.cloud.iam.v1.ListPermissionsRequest
	14, // 27: qdrant.cloud.iam.v1.IAMService.ListRoles:input_type -> qdrant.cloud.iam.v1.ListRolesRequest
	16, // 28: qdrant.cloud.iam.v1.IAMService.GetRole:input_type -> qdrant.cloud.iam.v1.GetRoleRequest
	18, // 29: qdrant.cloud.iam.v1.IAMService.CreateRole:input_type -> qdrant.cloud.iam.v1.CreateRoleRequest
	20, // 30: qdrant.cloud.iam.v1.IAMService.UpdateRole:input_type -> qdrant.cloud.iam.v1.UpdateRoleRequest
	22, // 31: qdrant.cloud.iam.v1.IAMService.DeleteRole:input_type -> qdrant.cloud.iam.v1.DeleteRoleRequest
	24, // 32: qdrant.cloud.iam.v1.IAMService.ListEffectivePermissions:input_type -> qdrant.cloud.iam.v1.ListEffectivePermissionsRequest
	26, // 33: qdrant.cloud.iam.v1.IAMService.ListUserRoles:input_type -> qdrant.cloud.iam.v1.ListUserRolesRequest
	28, // 34: qdrant.cloud.iam.v1.IAMService.AssignUserRoles:input_type -> qdrant.cloud.iam.v1.AssignUserRolesRequest
	5,  // 35: qdrant.cloud.iam.v1.IAMService.GetAuthenticatedUser:output_type -> qdrant.cloud.iam.v1.GetAuthenticatedUserResponse
	7,  // 36: qdrant.cloud.iam.v1.IAMService.UpdateUser:output_type -> qdrant.cloud.iam.v1.UpdateUserResponse
	9,  // 37: qdrant.cloud.iam.v1.IAMService.GetUserConsent:output_type -> qdrant.cloud.iam.v1.GetUserConsentResponse
	11, // 38: qdrant.cloud.iam.v1.IAMService.RecordUserConsent:output_type -> qdrant.cloud.iam.v1.RecordUserConsentResponse
	13, // 39: qdrant.cloud.iam.v1.IAMService.ListPermissions:output_type -> qdrant.cloud.iam.v1.ListPermissionsResponse
	15, // 40: qdrant.cloud.iam.v1.IAMService.ListRoles:output_type -> qdrant.cloud.iam.v1.ListRolesResponse
	17, // 41: qdrant.cloud.iam.v1.IAMService.GetRole:output_type -> qdrant.cloud.iam.v1.GetRoleResponse
	19, // 42: qdrant.cloud.iam.v1.IAMService.CreateRole:output_type -> qdrant.cloud.iam.v1.CreateRoleResponse
	21, // 43: qdrant.cloud.iam.v1.IAMService.UpdateRole:output_type -> qdrant.cloud.iam.v1.UpdateRoleResponse
	23, // 44: qdrant.cloud.iam.v1.IAMService.DeleteRole:output_type -> qdrant.cloud.iam.v1.DeleteRoleResponse
	25, // 45: qdrant.cloud.iam.v1.IAMService.ListEffectivePermissions:output_type -> qdrant.cloud.iam.v1.ListEffectivePermissionsResponse
	27, // 46: qdrant.cloud.iam.v1.IAMService.ListUserRoles:output_type -> qdrant.cloud.iam.v1.ListUserRolesResponse
	29, // 47: qdrant.cloud.iam.v1.IAMService.AssignUserRoles:output_type -> qdrant.cloud.iam.v1.AssignUserRolesResponse
	35, // [35:48] is the sub-list for method output_type
	22, // [22:35] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_qdrant_cloud_iam_v1_iam_proto_init() }
func file_qdrant_cloud_iam_v1_iam_proto_init() {
	if File_qdrant_cloud_iam_v1_iam_proto != nil {
		return
	}
	file_qdrant_cloud_iam_v1_iam_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_qdrant_cloud_iam_v1_iam_proto_rawDesc), len(file_qdrant_cloud_iam_v1_iam_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qdrant_cloud_iam_v1_iam_proto_goTypes,
		DependencyIndexes: file_qdrant_cloud_iam_v1_iam_proto_depIdxs,
		EnumInfos:         file_qdrant_cloud_iam_v1_iam_proto_enumTypes,
		MessageInfos:      file_qdrant_cloud_iam_v1_iam_proto_msgTypes,
	}.Build()
	File_qdrant_cloud_iam_v1_iam_proto = out.File
	file_qdrant_cloud_iam_v1_iam_proto_goTypes = nil
	file_qdrant_cloud_iam_v1_iam_proto_depIdxs = nil
}
