// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: qdrant/cloud/cluster/auth/v1/database_api_key.proto

package authv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ListDatabaseApiKeysRequest is the request for the ListDatabaseApiKeys function.
type ListDatabaseApiKeysRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId     string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDatabaseApiKeysRequest) Reset() {
	*x = ListDatabaseApiKeysRequest{}
	mi := &file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDatabaseApiKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatabaseApiKeysRequest) ProtoMessage() {}

func (x *ListDatabaseApiKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatabaseApiKeysRequest.ProtoReflect.Descriptor instead.
func (*ListDatabaseApiKeysRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDescGZIP(), []int{0}
}

func (x *ListDatabaseApiKeysRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// ListDatabaseApiKeysResponse is the response from the ListDatabaseApiKeys function.
type ListDatabaseApiKeysResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual database api keys in this list.
	Items         []*DatabaseApiKey `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDatabaseApiKeysResponse) Reset() {
	*x = ListDatabaseApiKeysResponse{}
	mi := &file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDatabaseApiKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatabaseApiKeysResponse) ProtoMessage() {}

func (x *ListDatabaseApiKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatabaseApiKeysResponse.ProtoReflect.Descriptor instead.
func (*ListDatabaseApiKeysResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDescGZIP(), []int{1}
}

func (x *ListDatabaseApiKeysResponse) GetItems() []*DatabaseApiKey {
	if x != nil {
		return x.Items
	}
	return nil
}

// CreateDatabaseApiKeyRequest is the request for the CreateDatabaseApiKey function.
type CreateDatabaseApiKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual database api key.
	DatabaseApiKey *DatabaseApiKey `protobuf:"bytes,1,opt,name=database_api_key,json=databaseApiKey,proto3" json:"database_api_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateDatabaseApiKeyRequest) Reset() {
	*x = CreateDatabaseApiKeyRequest{}
	mi := &file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDatabaseApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatabaseApiKeyRequest) ProtoMessage() {}

func (x *CreateDatabaseApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatabaseApiKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateDatabaseApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDatabaseApiKeyRequest) GetDatabaseApiKey() *DatabaseApiKey {
	if x != nil {
		return x.DatabaseApiKey
	}
	return nil
}

// CreateDatabaseApiKeyResponse is the response from the CreateDatabaseApiKey function.
type CreateDatabaseApiKeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual database api key.
	DatabaseApiKey *DatabaseApiKey `protobuf:"bytes,1,opt,name=database_api_key,json=databaseApiKey,proto3" json:"database_api_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateDatabaseApiKeyResponse) Reset() {
	*x = CreateDatabaseApiKeyResponse{}
	mi := &file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDatabaseApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatabaseApiKeyResponse) ProtoMessage() {}

func (x *CreateDatabaseApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatabaseApiKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateDatabaseApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDatabaseApiKeyResponse) GetDatabaseApiKey() *DatabaseApiKey {
	if x != nil {
		return x.DatabaseApiKey
	}
	return nil
}

// DeleteDatabaseApiKeyRequest is the request for the DeleteDatabaseApiKey function.
type DeleteDatabaseApiKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The identifier of the database api key (in GUID format).
	// This is a required field.
	DatabaseApiKeyId string `protobuf:"bytes,2,opt,name=database_api_key_id,json=databaseApiKeyId,proto3" json:"database_api_key_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeleteDatabaseApiKeyRequest) Reset() {
	*x = DeleteDatabaseApiKeyRequest{}
	mi := &file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDatabaseApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatabaseApiKeyRequest) ProtoMessage() {}

func (x *DeleteDatabaseApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatabaseApiKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteDatabaseApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteDatabaseApiKeyRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DeleteDatabaseApiKeyRequest) GetDatabaseApiKeyId() string {
	if x != nil {
		return x.DatabaseApiKeyId
	}
	return ""
}

// DeleteDatabaseApiKeyResponse is the response from the DeleteDatabaseApiKey function.
type DeleteDatabaseApiKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDatabaseApiKeyResponse) Reset() {
	*x = DeleteDatabaseApiKeyResponse{}
	mi := &file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDatabaseApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatabaseApiKeyResponse) ProtoMessage() {}

func (x *DeleteDatabaseApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatabaseApiKeyResponse.ProtoReflect.Descriptor instead.
func (*DeleteDatabaseApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDescGZIP(), []int{5}
}

// A DatabaseApiKey represents one database api key of a Qdrant cloud account.
// This database key can grant access to one or more Qdrant databases (clusters).
type DatabaseApiKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the database api key (in GUID format).
	// This is a read-only field and will be available after a database api key is created.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Timestamp when the database api key was created.
	// This is a read-only field and will be available after a database api key is created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// A list of cluster IDs.
	// It should contain at least one ID.
	// After creation, this field cannot be changed.
	ClusterIds []string `protobuf:"bytes,4,rep,name=cluster_ids,json=clusterIds,proto3" json:"cluster_ids,omitempty"`
	// Prefix for the database api key, this represents the first bytes of the key.
	// This is a read-only field and will be available after a database api key is created.
	Prefix string `protobuf:"bytes,5,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// The key for the database api key.
	// This is a read-only field and will be available only once in the response of CreateDatabaseApiKey.
	// You should securely store this key and it should be handled as a secret.
	Key           string `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseApiKey) Reset() {
	*x = DatabaseApiKey{}
	mi := &file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseApiKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseApiKey) ProtoMessage() {}

func (x *DatabaseApiKey) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseApiKey.ProtoReflect.Descriptor instead.
func (*DatabaseApiKey) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDescGZIP(), []int{6}
}

func (x *DatabaseApiKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DatabaseApiKey) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DatabaseApiKey) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DatabaseApiKey) GetClusterIds() []string {
	if x != nil {
		return x.ClusterIds
	}
	return nil
}

func (x *DatabaseApiKey) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *DatabaseApiKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

var File_qdrant_cloud_cluster_auth_v1_database_api_key_proto protoreflect.FileDescriptor

const file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDesc = "" +
	"\n" +
	"3qdrant/cloud/cluster/auth/v1/database_api_key.proto\x12\x1cqdrant.cloud.cluster.auth.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#qdrant/cloud/common/v1/common.proto\"E\n" +
	"\x1aListDatabaseApiKeysRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\"a\n" +
	"\x1bListDatabaseApiKeysResponse\x12B\n" +
	"\x05items\x18\x01 \x03(\v2,.qdrant.cloud.cluster.auth.v1.DatabaseApiKeyR\x05items\"\x92\x03\n" +
	"\x1bCreateDatabaseApiKeyRequest\x12^\n" +
	"\x10database_api_key\x18\x01 \x01(\v2,.qdrant.cloud.cluster.auth.v1.DatabaseApiKeyB\x06\xbaH\x03\xc8\x01\x01R\x0edatabaseApiKey:\x92\x02\xbaH\x8e\x02\x1a\x8b\x02\n" +
	"+create_database_api_key.no_read_only_fields\x12Hread-only fields (id, created_at, prefix, key) must not be set on create\x1a\x91\x01this.database_api_key.id == '' && !has(this.database_api_key.created_at) && this.database_api_key.prefix == '' && this.database_api_key.key == ''\"~\n" +
	"\x1cCreateDatabaseApiKeyResponse\x12^\n" +
	"\x10database_api_key\x18\x01 \x01(\v2,.qdrant.cloud.cluster.auth.v1.DatabaseApiKeyB\x06\xbaH\x03\xc8\x01\x01R\x0edatabaseApiKey\"\x7f\n" +
	"\x1bDeleteDatabaseApiKeyRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x127\n" +
	"\x13database_api_key_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x10databaseApiKeyId\"\x1e\n" +
	"\x1cDeleteDatabaseApiKeyResponse\"\xfc\x03\n" +
	"\x0eDatabaseApiKey\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x120\n" +
	"\vcluster_ids\x18\x04 \x03(\tB\x0f\xbaH\f\x92\x01\t\b\x01\"\x05r\x03\xb0\x01\x01R\n" +
	"clusterIds\x12\x16\n" +
	"\x06prefix\x18\x05 \x01(\tR\x06prefix\x12\x10\n" +
	"\x03key\x18\x06 \x01(\tR\x03key:\x99\x02\xbaH\x95\x02\x1a\xac\x01\n" +
	"\x13database_api_key.id\x12\x1avalue must be a valid UUID\x1aythis.id.matches('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$') || !has(this.created_at)\x1ad\n" +
	"\x17database_api_key.prefix\x12\x18prefix must not be empty\x1a/this.prefix.size() > 0 || !has(this.created_at)2\x96\x06\n" +
	"\x15DatabaseApiKeyService\x12\xe1\x01\n" +
	"\x13ListDatabaseApiKeys\x128.qdrant.cloud.cluster.auth.v1.ListDatabaseApiKeysRequest\x1a9.qdrant.cloud.cluster.auth.v1.ListDatabaseApiKeysResponse\"U\x8a\xb5\x18\rread:api_keys\x82\xd3\xe4\x93\x02>\x12</api/cluster/auth/v1/accounts/{account_id}/database-api-keys\x12\x99\x02\n" +
	"\x14CreateDatabaseApiKey\x129.qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyRequest\x1a:.qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyResponse\"\x89\x01\x8a\xb5\x18\x0ewrite:api_keys\x92\xb5\x18\x1bdatabase_api_key.account_id\x82\xd3\xe4\x93\x02R:\x01*\"M/api/cluster/auth/v1/accounts/{database_api_key.account_id}/database-api-keys\x12\xfc\x01\n" +
	"\x14DeleteDatabaseApiKey\x129.qdrant.cloud.cluster.auth.v1.DeleteDatabaseApiKeyRequest\x1a:.qdrant.cloud.cluster.auth.v1.DeleteDatabaseApiKeyResponse\"m\x8a\xb5\x18\x0fdelete:api_keys\x82\xd3\xe4\x93\x02T*R/api/cluster/auth/v1/accounts/{account_id}/database-api-keys/{database_api_key_id}B\xa2\x02\n" +
	" com.qdrant.cloud.cluster.auth.v1B\x13DatabaseApiKeyProtoP\x01ZTgithub.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/cluster/auth/v1;authv1\xa2\x02\x04QCCA\xaa\x02\x1cQdrant.Cloud.Cluster.Auth.V1\xca\x02\x1cQdrant\\Cloud\\Cluster\\Auth\\V1\xe2\x02(Qdrant\\Cloud\\Cluster\\Auth\\V1\\GPBMetadata\xea\x02 Qdrant::Cloud::Cluster::Auth::V1b\x06proto3"

var (
	file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDescOnce sync.Once
	file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDescData []byte
)

func file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDescGZIP() []byte {
	file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDescOnce.Do(func() {
		file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDesc), len(file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDesc)))
	})
	return file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDescData
}

var file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_goTypes = []any{
	(*ListDatabaseApiKeysRequest)(nil),   // 0: qdrant.cloud.cluster.auth.v1.ListDatabaseApiKeysRequest
	(*ListDatabaseApiKeysResponse)(nil),  // 1: qdrant.cloud.cluster.auth.v1.ListDatabaseApiKeysResponse
	(*CreateDatabaseApiKeyRequest)(nil),  // 2: qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyRequest
	(*CreateDatabaseApiKeyResponse)(nil), // 3: qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyResponse
	(*DeleteDatabaseApiKeyRequest)(nil),  // 4: qdrant.cloud.cluster.auth.v1.DeleteDatabaseApiKeyRequest
	(*DeleteDatabaseApiKeyResponse)(nil), // 5: qdrant.cloud.cluster.auth.v1.DeleteDatabaseApiKeyResponse
	(*DatabaseApiKey)(nil),               // 6: qdrant.cloud.cluster.auth.v1.DatabaseApiKey
	(*timestamppb.Timestamp)(nil),        // 7: google.protobuf.Timestamp
}
var file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_depIdxs = []int32{
	6, // 0: qdrant.cloud.cluster.auth.v1.ListDatabaseApiKeysResponse.items:type_name -> qdrant.cloud.cluster.auth.v1.DatabaseApiKey
	6, // 1: qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyRequest.database_api_key:type_name -> qdrant.cloud.cluster.auth.v1.DatabaseApiKey
	6, // 2: qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyResponse.database_api_key:type_name -> qdrant.cloud.cluster.auth.v1.DatabaseApiKey
	7, // 3: qdrant.cloud.cluster.auth.v1.DatabaseApiKey.created_at:type_name -> google.protobuf.Timestamp
	0, // 4: qdrant.cloud.cluster.auth.v1.DatabaseApiKeyService.ListDatabaseApiKeys:input_type -> qdrant.cloud.cluster.auth.v1.ListDatabaseApiKeysRequest
	2, // 5: qdrant.cloud.cluster.auth.v1.DatabaseApiKeyService.CreateDatabaseApiKey:input_type -> qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyRequest
	4, // 6: qdrant.cloud.cluster.auth.v1.DatabaseApiKeyService.DeleteDatabaseApiKey:input_type -> qdrant.cloud.cluster.auth.v1.DeleteDatabaseApiKeyRequest
	1, // 7: qdrant.cloud.cluster.auth.v1.DatabaseApiKeyService.ListDatabaseApiKeys:output_type -> qdrant.cloud.cluster.auth.v1.ListDatabaseApiKeysResponse
	3, // 8: qdrant.cloud.cluster.auth.v1.DatabaseApiKeyService.CreateDatabaseApiKey:output_type -> qdrant.cloud.cluster.auth.v1.CreateDatabaseApiKeyResponse
	5, // 9: qdrant.cloud.cluster.auth.v1.DatabaseApiKeyService.DeleteDatabaseApiKey:output_type -> qdrant.cloud.cluster.auth.v1.DeleteDatabaseApiKeyResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_init() }
func file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_init() {
	if File_qdrant_cloud_cluster_auth_v1_database_api_key_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDesc), len(file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_goTypes,
		DependencyIndexes: file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_depIdxs,
		MessageInfos:      file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_msgTypes,
	}.Build()
	File_qdrant_cloud_cluster_auth_v1_database_api_key_proto = out.File
	file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_goTypes = nil
	file_qdrant_cloud_cluster_auth_v1_database_api_key_proto_depIdxs = nil
}
