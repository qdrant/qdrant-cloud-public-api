// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: qdrant/cloud/cluster/auth/v2/database_api_key.proto

package authv2

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GlobalAccessRuleAccessType defines the possible access levels for global access rules.
// For a detailed list of actions allowed for each access type, see:
// https://qdrant.tech/documentation/guides/security/#table-of-access
type GlobalAccessRuleAccessType int32

const (
	// Unspecified access type.
	GlobalAccessRuleAccessType_GLOBAL_ACCESS_RULE_ACCESS_TYPE_UNSPECIFIED GlobalAccessRuleAccessType = 0
	// Grants access to perform actions that only read data (e.g., list collections).
	GlobalAccessRuleAccessType_GLOBAL_ACCESS_RULE_ACCESS_TYPE_READ_ONLY GlobalAccessRuleAccessType = 1
	// Grants access to perform all actions available in the database (e.g., update aliases).
	GlobalAccessRuleAccessType_GLOBAL_ACCESS_RULE_ACCESS_TYPE_MANAGE GlobalAccessRuleAccessType = 2
)

// Enum value maps for GlobalAccessRuleAccessType.
var (
	GlobalAccessRuleAccessType_name = map[int32]string{
		0: "GLOBAL_ACCESS_RULE_ACCESS_TYPE_UNSPECIFIED",
		1: "GLOBAL_ACCESS_RULE_ACCESS_TYPE_READ_ONLY",
		2: "GLOBAL_ACCESS_RULE_ACCESS_TYPE_MANAGE",
	}
	GlobalAccessRuleAccessType_value = map[string]int32{
		"GLOBAL_ACCESS_RULE_ACCESS_TYPE_UNSPECIFIED": 0,
		"GLOBAL_ACCESS_RULE_ACCESS_TYPE_READ_ONLY":   1,
		"GLOBAL_ACCESS_RULE_ACCESS_TYPE_MANAGE":      2,
	}
)

func (x GlobalAccessRuleAccessType) Enum() *GlobalAccessRuleAccessType {
	p := new(GlobalAccessRuleAccessType)
	*p = x
	return p
}

func (x GlobalAccessRuleAccessType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GlobalAccessRuleAccessType) Descriptor() protoreflect.EnumDescriptor {
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_enumTypes[0].Descriptor()
}

func (GlobalAccessRuleAccessType) Type() protoreflect.EnumType {
	return &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_enumTypes[0]
}

func (x GlobalAccessRuleAccessType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GlobalAccessRuleAccessType.Descriptor instead.
func (GlobalAccessRuleAccessType) EnumDescriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescGZIP(), []int{0}
}

// CollectionAccessRuleAccessType defines the types of access allowed on a specific collection.
// For a detailed list of actions allowed for each access type, see:
// https://qdrant.tech/documentation/guides/security/#table-of-access
type CollectionAccessRuleAccessType int32

const (
	// Unspecified access type.
	CollectionAccessRuleAccessType_COLLECTION_ACCESS_RULE_ACCESS_TYPE_UNSPECIFIED CollectionAccessRuleAccessType = 0
	// Grants access to perform collection-related actions that only read data (like `get collection info`).
	CollectionAccessRuleAccessType_COLLECTION_ACCESS_RULE_ACCESS_TYPE_READ_ONLY CollectionAccessRuleAccessType = 1
	// Grants access to perform collection-related actions that read or write data (like `upsert points`).
	CollectionAccessRuleAccessType_COLLECTION_ACCESS_RULE_ACCESS_TYPE_READ_WRITE CollectionAccessRuleAccessType = 2
)

// Enum value maps for CollectionAccessRuleAccessType.
var (
	CollectionAccessRuleAccessType_name = map[int32]string{
		0: "COLLECTION_ACCESS_RULE_ACCESS_TYPE_UNSPECIFIED",
		1: "COLLECTION_ACCESS_RULE_ACCESS_TYPE_READ_ONLY",
		2: "COLLECTION_ACCESS_RULE_ACCESS_TYPE_READ_WRITE",
	}
	CollectionAccessRuleAccessType_value = map[string]int32{
		"COLLECTION_ACCESS_RULE_ACCESS_TYPE_UNSPECIFIED": 0,
		"COLLECTION_ACCESS_RULE_ACCESS_TYPE_READ_ONLY":   1,
		"COLLECTION_ACCESS_RULE_ACCESS_TYPE_READ_WRITE":  2,
	}
)

func (x CollectionAccessRuleAccessType) Enum() *CollectionAccessRuleAccessType {
	p := new(CollectionAccessRuleAccessType)
	*p = x
	return p
}

func (x CollectionAccessRuleAccessType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CollectionAccessRuleAccessType) Descriptor() protoreflect.EnumDescriptor {
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_enumTypes[1].Descriptor()
}

func (CollectionAccessRuleAccessType) Type() protoreflect.EnumType {
	return &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_enumTypes[1]
}

func (x CollectionAccessRuleAccessType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CollectionAccessRuleAccessType.Descriptor instead.
func (CollectionAccessRuleAccessType) EnumDescriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescGZIP(), []int{1}
}

// ListDatabaseApiKeysRequest is the request for the ListDatabaseApiKeys function.
type ListDatabaseApiKeysRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The identifier of the cluster (in GUID format).
	// This is a required field.
	ClusterId     string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDatabaseApiKeysRequest) Reset() {
	*x = ListDatabaseApiKeysRequest{}
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDatabaseApiKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatabaseApiKeysRequest) ProtoMessage() {}

func (x *ListDatabaseApiKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatabaseApiKeysRequest.ProtoReflect.Descriptor instead.
func (*ListDatabaseApiKeysRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescGZIP(), []int{0}
}

func (x *ListDatabaseApiKeysRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListDatabaseApiKeysRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

// ListDatabaseApiKeysResponse is the response from the ListDatabaseApiKeys function.
type ListDatabaseApiKeysResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual database api keys in this list.
	Items         []*DatabaseApiKey `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDatabaseApiKeysResponse) Reset() {
	*x = ListDatabaseApiKeysResponse{}
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDatabaseApiKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatabaseApiKeysResponse) ProtoMessage() {}

func (x *ListDatabaseApiKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatabaseApiKeysResponse.ProtoReflect.Descriptor instead.
func (*ListDatabaseApiKeysResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescGZIP(), []int{1}
}

func (x *ListDatabaseApiKeysResponse) GetItems() []*DatabaseApiKey {
	if x != nil {
		return x.Items
	}
	return nil
}

// CreateDatabaseApiKeyRequest is the request for the CreateDatabaseApiKey function.
type CreateDatabaseApiKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual database api key.
	DatabaseApiKey *DatabaseApiKey `protobuf:"bytes,1,opt,name=database_api_key,json=databaseApiKey,proto3" json:"database_api_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateDatabaseApiKeyRequest) Reset() {
	*x = CreateDatabaseApiKeyRequest{}
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDatabaseApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatabaseApiKeyRequest) ProtoMessage() {}

func (x *CreateDatabaseApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatabaseApiKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateDatabaseApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDatabaseApiKeyRequest) GetDatabaseApiKey() *DatabaseApiKey {
	if x != nil {
		return x.DatabaseApiKey
	}
	return nil
}

// CreateDatabaseApiKeyResponse is the response from the CreateDatabaseApiKey function.
type CreateDatabaseApiKeyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual database api key.
	DatabaseApiKey *DatabaseApiKey `protobuf:"bytes,1,opt,name=database_api_key,json=databaseApiKey,proto3" json:"database_api_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateDatabaseApiKeyResponse) Reset() {
	*x = CreateDatabaseApiKeyResponse{}
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDatabaseApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatabaseApiKeyResponse) ProtoMessage() {}

func (x *CreateDatabaseApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatabaseApiKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateDatabaseApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDatabaseApiKeyResponse) GetDatabaseApiKey() *DatabaseApiKey {
	if x != nil {
		return x.DatabaseApiKey
	}
	return nil
}

// DeleteDatabaseApiKeyRequest is the request for the DeleteDatabaseApiKey function.
type DeleteDatabaseApiKeyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The identifier for the cluster (in GUID format).
	// This cluster should be part of the provided account.
	// This is a required field.
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The identifier of the database api key (in GUID format).
	// This is a required field.
	DatabaseApiKeyId string `protobuf:"bytes,3,opt,name=database_api_key_id,json=databaseApiKeyId,proto3" json:"database_api_key_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeleteDatabaseApiKeyRequest) Reset() {
	*x = DeleteDatabaseApiKeyRequest{}
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDatabaseApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatabaseApiKeyRequest) ProtoMessage() {}

func (x *DeleteDatabaseApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatabaseApiKeyRequest.ProtoReflect.Descriptor instead.
func (*DeleteDatabaseApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteDatabaseApiKeyRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DeleteDatabaseApiKeyRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *DeleteDatabaseApiKeyRequest) GetDatabaseApiKeyId() string {
	if x != nil {
		return x.DatabaseApiKeyId
	}
	return ""
}

// DeleteDatabaseApiKeyResponse is the response from the DeleteDatabaseApiKey function.
type DeleteDatabaseApiKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDatabaseApiKeyResponse) Reset() {
	*x = DeleteDatabaseApiKeyResponse{}
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDatabaseApiKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDatabaseApiKeyResponse) ProtoMessage() {}

func (x *DeleteDatabaseApiKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDatabaseApiKeyResponse.ProtoReflect.Descriptor instead.
func (*DeleteDatabaseApiKeyResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescGZIP(), []int{5}
}

// A DatabaseApiKey represents one database api key of a Qdrant cloud account.
// This database key can grant access to one or more Qdrant databases (clusters).
type DatabaseApiKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the database api key (in GUID format).
	// This is a read-only field and will be available after a database api key is created.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Timestamp when the database api key was created.
	// This is a read-only field and will be available after a database api key is created.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The identifier of the cluster (in GUID format).
	// This is a required field.
	ClusterId string `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Name of the database api key.
	// This is a required field.
	// Name can only contain letters, numbers, spaces, underscores and dashes.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// The expiration time of the database api key. The key will be invalid after this time.
	// This field is optional, and if not provided, the key does not expire.
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt,proto3,oneof" json:"expires_at,omitempty"`
	// A list of rules to grant access to the Qdrant database or to specific
	// collections. If no access rules are provided, global access to the database
	// with manage permissions is assumed. The list can contain a maximum of 20
	// access rules.
	AccessRules []*AccessRule `protobuf:"bytes,7,rep,name=access_rules,json=accessRules,proto3" json:"access_rules,omitempty"`
	// The email of the user who created the database api key.
	// This is a read-only field and will be available after a database api key is created.
	CreatedByEmail string `protobuf:"bytes,8,opt,name=created_by_email,json=createdByEmail,proto3" json:"created_by_email,omitempty"`
	// Postfix for the database api key, this represents the last bytes of the key.
	// This is a read-only field and will be available after a database api key is created.
	Postfix string `protobuf:"bytes,9,opt,name=postfix,proto3" json:"postfix,omitempty"`
	// The key for the database api key.
	// This is a read-only field and will be available only once in the response of CreateDatabaseApiKey.
	// You should securely store this key and it should be handled as a secret.
	Key           string `protobuf:"bytes,10,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseApiKey) Reset() {
	*x = DatabaseApiKey{}
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseApiKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseApiKey) ProtoMessage() {}

func (x *DatabaseApiKey) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseApiKey.ProtoReflect.Descriptor instead.
func (*DatabaseApiKey) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescGZIP(), []int{6}
}

func (x *DatabaseApiKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DatabaseApiKey) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DatabaseApiKey) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DatabaseApiKey) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *DatabaseApiKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatabaseApiKey) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *DatabaseApiKey) GetAccessRules() []*AccessRule {
	if x != nil {
		return x.AccessRules
	}
	return nil
}

func (x *DatabaseApiKey) GetCreatedByEmail() string {
	if x != nil {
		return x.CreatedByEmail
	}
	return ""
}

func (x *DatabaseApiKey) GetPostfix() string {
	if x != nil {
		return x.Postfix
	}
	return ""
}

func (x *DatabaseApiKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Represents an access rule. An access rule can either define global access to
// the database or access to a specific collection.
type AccessRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Defines the scope of the access rule, determining whether it applies globally
	// to the entire database or is restricted to a specific collection.
	//
	// Types that are valid to be assigned to Scope:
	//
	//	*AccessRule_GlobalAccess
	//	*AccessRule_CollectionAccess
	Scope         isAccessRule_Scope `protobuf_oneof:"scope"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessRule) Reset() {
	*x = AccessRule{}
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessRule) ProtoMessage() {}

func (x *AccessRule) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessRule.ProtoReflect.Descriptor instead.
func (*AccessRule) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescGZIP(), []int{7}
}

func (x *AccessRule) GetScope() isAccessRule_Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *AccessRule) GetGlobalAccess() *GlobalAccessRule {
	if x != nil {
		if x, ok := x.Scope.(*AccessRule_GlobalAccess); ok {
			return x.GlobalAccess
		}
	}
	return nil
}

func (x *AccessRule) GetCollectionAccess() *CollectionAccessRule {
	if x != nil {
		if x, ok := x.Scope.(*AccessRule_CollectionAccess); ok {
			return x.CollectionAccess
		}
	}
	return nil
}

type isAccessRule_Scope interface {
	isAccessRule_Scope()
}

type AccessRule_GlobalAccess struct {
	// A rule granting global access to the entire database.
	GlobalAccess *GlobalAccessRule `protobuf:"bytes,1,opt,name=global_access,json=globalAccess,proto3,oneof"`
}

type AccessRule_CollectionAccess struct {
	// A rule granting access to a specific collection in the database.
	CollectionAccess *CollectionAccessRule `protobuf:"bytes,2,opt,name=collection_access,json=collectionAccess,proto3,oneof"`
}

func (*AccessRule_GlobalAccess) isAccessRule_Scope() {}

func (*AccessRule_CollectionAccess) isAccessRule_Scope() {}

// Represents a global access rule that grants access to the entire database.
type GlobalAccessRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of access granted at the global level.
	// This is a required field.
	AccessType    GlobalAccessRuleAccessType `protobuf:"varint,1,opt,name=access_type,json=accessType,proto3,enum=qdrant.cloud.cluster.auth.v2.GlobalAccessRuleAccessType" json:"access_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalAccessRule) Reset() {
	*x = GlobalAccessRule{}
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalAccessRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalAccessRule) ProtoMessage() {}

func (x *GlobalAccessRule) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalAccessRule.ProtoReflect.Descriptor instead.
func (*GlobalAccessRule) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescGZIP(), []int{8}
}

func (x *GlobalAccessRule) GetAccessType() GlobalAccessRuleAccessType {
	if x != nil {
		return x.AccessType
	}
	return GlobalAccessRuleAccessType_GLOBAL_ACCESS_RULE_ACCESS_TYPE_UNSPECIFIED
}

// Represents an access rule for a specific collection in the database.
type CollectionAccessRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the collection.
	// This is a required field.
	CollectionName string `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	// The type of access granted for the collection.
	// This is a required field.
	AccessType CollectionAccessRuleAccessType `protobuf:"varint,2,opt,name=access_type,json=accessType,proto3,enum=qdrant.cloud.cluster.auth.v2.CollectionAccessRuleAccessType" json:"access_type,omitempty"`
	// An optional set of key-value pairs used to restrict access within the collection.
	// Only points containing the specified key-value pairs in their payload will be accessible.
	Payload       map[string]string `protobuf:"bytes,3,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectionAccessRule) Reset() {
	*x = CollectionAccessRule{}
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionAccessRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionAccessRule) ProtoMessage() {}

func (x *CollectionAccessRule) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionAccessRule.ProtoReflect.Descriptor instead.
func (*CollectionAccessRule) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescGZIP(), []int{9}
}

func (x *CollectionAccessRule) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *CollectionAccessRule) GetAccessType() CollectionAccessRuleAccessType {
	if x != nil {
		return x.AccessType
	}
	return CollectionAccessRuleAccessType_COLLECTION_ACCESS_RULE_ACCESS_TYPE_UNSPECIFIED
}

func (x *CollectionAccessRule) GetPayload() map[string]string {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_qdrant_cloud_cluster_auth_v2_database_api_key_proto protoreflect.FileDescriptor

const file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDesc = "" +
	"\n" +
	"3qdrant/cloud/cluster/auth/v2/database_api_key.proto\x12\x1cqdrant.cloud.cluster.auth.v2\x1a\x1bbuf/validate/validate.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#qdrant/cloud/common/v1/common.proto\"n\n" +
	"\x1aListDatabaseApiKeysRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12'\n" +
	"\n" +
	"cluster_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\tclusterId\"a\n" +
	"\x1bListDatabaseApiKeysResponse\x12B\n" +
	"\x05items\x18\x01 \x03(\v2,.qdrant.cloud.cluster.auth.v2.DatabaseApiKeyR\x05items\"u\n" +
	"\x1bCreateDatabaseApiKeyRequest\x12V\n" +
	"\x10database_api_key\x18\x01 \x01(\v2,.qdrant.cloud.cluster.auth.v2.DatabaseApiKeyR\x0edatabaseApiKey\"v\n" +
	"\x1cCreateDatabaseApiKeyResponse\x12V\n" +
	"\x10database_api_key\x18\x01 \x01(\v2,.qdrant.cloud.cluster.auth.v2.DatabaseApiKeyR\x0edatabaseApiKey\"\xa8\x01\n" +
	"\x1bDeleteDatabaseApiKeyRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12'\n" +
	"\n" +
	"cluster_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\tclusterId\x127\n" +
	"\x13database_api_key_id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x10databaseApiKeyId\"\x1e\n" +
	"\x1cDeleteDatabaseApiKeyResponse\"\x8e\b\n" +
	"\x0eDatabaseApiKey\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12'\n" +
	"\n" +
	"cluster_id\x18\x04 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\tclusterId\x12*\n" +
	"\x04name\x18\x05 \x01(\tB\x16\xbaH\x13r\x11\x10\x04\x18\x80\x012\n" +
	"^[\\w\\s-]+$R\x04name\x12>\n" +
	"\n" +
	"expires_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\texpiresAt\x88\x01\x01\x12U\n" +
	"\faccess_rules\x18\a \x03(\v2(.qdrant.cloud.cluster.auth.v2.AccessRuleB\b\xbaH\x05\x92\x01\x02\x10\x14R\vaccessRules\x12(\n" +
	"\x10created_by_email\x18\b \x01(\tR\x0ecreatedByEmail\x12\x18\n" +
	"\apostfix\x18\t \x01(\tR\apostfix\x12\x10\n" +
	"\x03key\x18\n" +
	" \x01(\tR\x03key:\xb6\x04\xbaH\xb2\x04\x1a\xac\x01\n" +
	"\x13database_api_key.id\x12\x1avalue must be a valid UUID\x1aythis.id.matches('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$') || !has(this.created_at)\x1a\xe0\x01\n" +
	"\x1eno_mixed_global_and_collection\x12OThere can't be global and collection access rules in the same database api key.\x1am!(this.access_rules.exists(r, has(r.global_access)) && this.access_rules.exists(r, has(r.collection_access)))\x1a\x9d\x01\n" +
	"\x16only_one_global_access\x12EThere can't be more than one global access rule in the configuration.\x1a<size(this.access_rules.filter(r, has(r.global_access))) <= 1B\r\n" +
	"\v_expires_at\"\xcf\x01\n" +
	"\n" +
	"AccessRule\x12U\n" +
	"\rglobal_access\x18\x01 \x01(\v2..qdrant.cloud.cluster.auth.v2.GlobalAccessRuleH\x00R\fglobalAccess\x12a\n" +
	"\x11collection_access\x18\x02 \x01(\v22.qdrant.cloud.cluster.auth.v2.CollectionAccessRuleH\x00R\x10collectionAccessB\a\n" +
	"\x05scope\"m\n" +
	"\x10GlobalAccessRule\x12Y\n" +
	"\vaccess_type\x18\x01 \x01(\x0e28.qdrant.cloud.cluster.auth.v2.GlobalAccessRuleAccessTypeR\n" +
	"accessType\"\xd2\x02\n" +
	"\x14CollectionAccessRule\x12D\n" +
	"\x0fcollection_name\x18\x01 \x01(\tB\x1b\xbaH\x18r\x16\x10\x04\x18@2\x10^[a-zA-Z0-9-_]+$R\x0ecollectionName\x12]\n" +
	"\vaccess_type\x18\x02 \x01(\x0e2<.qdrant.cloud.cluster.auth.v2.CollectionAccessRuleAccessTypeR\n" +
	"accessType\x12Y\n" +
	"\apayload\x18\x03 \x03(\v2?.qdrant.cloud.cluster.auth.v2.CollectionAccessRule.PayloadEntryR\apayload\x1a:\n" +
	"\fPayloadEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xa5\x01\n" +
	"\x1aGlobalAccessRuleAccessType\x12.\n" +
	"*GLOBAL_ACCESS_RULE_ACCESS_TYPE_UNSPECIFIED\x10\x00\x12,\n" +
	"(GLOBAL_ACCESS_RULE_ACCESS_TYPE_READ_ONLY\x10\x01\x12)\n" +
	"%GLOBAL_ACCESS_RULE_ACCESS_TYPE_MANAGE\x10\x02*\xb9\x01\n" +
	"\x1eCollectionAccessRuleAccessType\x122\n" +
	".COLLECTION_ACCESS_RULE_ACCESS_TYPE_UNSPECIFIED\x10\x00\x120\n" +
	",COLLECTION_ACCESS_RULE_ACCESS_TYPE_READ_ONLY\x10\x01\x121\n" +
	"-COLLECTION_ACCESS_RULE_ACCESS_TYPE_READ_WRITE\x10\x022\x96\x06\n" +
	"\x15DatabaseApiKeyService\x12\xe1\x01\n" +
	"\x13ListDatabaseApiKeys\x128.qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysRequest\x1a9.qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysResponse\"U\x8a\xb5\x18\rread:api_keys\x82\xd3\xe4\x93\x02>\x12</api/cluster/auth/v2/accounts/{account_id}/database-api-keys\x12\x99\x02\n" +
	"\x14CreateDatabaseApiKey\x129.qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyRequest\x1a:.qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyResponse\"\x89\x01\x8a\xb5\x18\x0ewrite:api_keys\x92\xb5\x18\x1bdatabase_api_key.account_id\x82\xd3\xe4\x93\x02R:\x01*\"M/api/cluster/auth/v2/accounts/{database_api_key.account_id}/database-api-keys\x12\xfc\x01\n" +
	"\x14DeleteDatabaseApiKey\x129.qdrant.cloud.cluster.auth.v2.DeleteDatabaseApiKeyRequest\x1a:.qdrant.cloud.cluster.auth.v2.DeleteDatabaseApiKeyResponse\"m\x8a\xb5\x18\x0fdelete:api_keys\x82\xd3\xe4\x93\x02T*R/api/cluster/auth/v2/accounts/{account_id}/database-api-keys/{database_api_key_id}B\xa2\x02\n" +
	" com.qdrant.cloud.cluster.auth.v2B\x13DatabaseApiKeyProtoP\x01ZTgithub.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/cluster/auth/v2;authv2\xa2\x02\x04QCCA\xaa\x02\x1cQdrant.Cloud.Cluster.Auth.V2\xca\x02\x1cQdrant\\Cloud\\Cluster\\Auth\\V2\xe2\x02(Qdrant\\Cloud\\Cluster\\Auth\\V2\\GPBMetadata\xea\x02 Qdrant::Cloud::Cluster::Auth::V2b\x06proto3"

var (
	file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescOnce sync.Once
	file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescData []byte
)

func file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescGZIP() []byte {
	file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescOnce.Do(func() {
		file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDesc), len(file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDesc)))
	})
	return file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDescData
}

var file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_goTypes = []any{
	(GlobalAccessRuleAccessType)(0),      // 0: qdrant.cloud.cluster.auth.v2.GlobalAccessRuleAccessType
	(CollectionAccessRuleAccessType)(0),  // 1: qdrant.cloud.cluster.auth.v2.CollectionAccessRuleAccessType
	(*ListDatabaseApiKeysRequest)(nil),   // 2: qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysRequest
	(*ListDatabaseApiKeysResponse)(nil),  // 3: qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysResponse
	(*CreateDatabaseApiKeyRequest)(nil),  // 4: qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyRequest
	(*CreateDatabaseApiKeyResponse)(nil), // 5: qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyResponse
	(*DeleteDatabaseApiKeyRequest)(nil),  // 6: qdrant.cloud.cluster.auth.v2.DeleteDatabaseApiKeyRequest
	(*DeleteDatabaseApiKeyResponse)(nil), // 7: qdrant.cloud.cluster.auth.v2.DeleteDatabaseApiKeyResponse
	(*DatabaseApiKey)(nil),               // 8: qdrant.cloud.cluster.auth.v2.DatabaseApiKey
	(*AccessRule)(nil),                   // 9: qdrant.cloud.cluster.auth.v2.AccessRule
	(*GlobalAccessRule)(nil),             // 10: qdrant.cloud.cluster.auth.v2.GlobalAccessRule
	(*CollectionAccessRule)(nil),         // 11: qdrant.cloud.cluster.auth.v2.CollectionAccessRule
	nil,                                  // 12: qdrant.cloud.cluster.auth.v2.CollectionAccessRule.PayloadEntry
	(*timestamppb.Timestamp)(nil),        // 13: google.protobuf.Timestamp
}
var file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_depIdxs = []int32{
	8,  // 0: qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysResponse.items:type_name -> qdrant.cloud.cluster.auth.v2.DatabaseApiKey
	8,  // 1: qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyRequest.database_api_key:type_name -> qdrant.cloud.cluster.auth.v2.DatabaseApiKey
	8,  // 2: qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyResponse.database_api_key:type_name -> qdrant.cloud.cluster.auth.v2.DatabaseApiKey
	13, // 3: qdrant.cloud.cluster.auth.v2.DatabaseApiKey.created_at:type_name -> google.protobuf.Timestamp
	13, // 4: qdrant.cloud.cluster.auth.v2.DatabaseApiKey.expires_at:type_name -> google.protobuf.Timestamp
	9,  // 5: qdrant.cloud.cluster.auth.v2.DatabaseApiKey.access_rules:type_name -> qdrant.cloud.cluster.auth.v2.AccessRule
	10, // 6: qdrant.cloud.cluster.auth.v2.AccessRule.global_access:type_name -> qdrant.cloud.cluster.auth.v2.GlobalAccessRule
	11, // 7: qdrant.cloud.cluster.auth.v2.AccessRule.collection_access:type_name -> qdrant.cloud.cluster.auth.v2.CollectionAccessRule
	0,  // 8: qdrant.cloud.cluster.auth.v2.GlobalAccessRule.access_type:type_name -> qdrant.cloud.cluster.auth.v2.GlobalAccessRuleAccessType
	1,  // 9: qdrant.cloud.cluster.auth.v2.CollectionAccessRule.access_type:type_name -> qdrant.cloud.cluster.auth.v2.CollectionAccessRuleAccessType
	12, // 10: qdrant.cloud.cluster.auth.v2.CollectionAccessRule.payload:type_name -> qdrant.cloud.cluster.auth.v2.CollectionAccessRule.PayloadEntry
	2,  // 11: qdrant.cloud.cluster.auth.v2.DatabaseApiKeyService.ListDatabaseApiKeys:input_type -> qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysRequest
	4,  // 12: qdrant.cloud.cluster.auth.v2.DatabaseApiKeyService.CreateDatabaseApiKey:input_type -> qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyRequest
	6,  // 13: qdrant.cloud.cluster.auth.v2.DatabaseApiKeyService.DeleteDatabaseApiKey:input_type -> qdrant.cloud.cluster.auth.v2.DeleteDatabaseApiKeyRequest
	3,  // 14: qdrant.cloud.cluster.auth.v2.DatabaseApiKeyService.ListDatabaseApiKeys:output_type -> qdrant.cloud.cluster.auth.v2.ListDatabaseApiKeysResponse
	5,  // 15: qdrant.cloud.cluster.auth.v2.DatabaseApiKeyService.CreateDatabaseApiKey:output_type -> qdrant.cloud.cluster.auth.v2.CreateDatabaseApiKeyResponse
	7,  // 16: qdrant.cloud.cluster.auth.v2.DatabaseApiKeyService.DeleteDatabaseApiKey:output_type -> qdrant.cloud.cluster.auth.v2.DeleteDatabaseApiKeyResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_init() }
func file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_init() {
	if File_qdrant_cloud_cluster_auth_v2_database_api_key_proto != nil {
		return
	}
	file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[6].OneofWrappers = []any{}
	file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes[7].OneofWrappers = []any{
		(*AccessRule_GlobalAccess)(nil),
		(*AccessRule_CollectionAccess)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDesc), len(file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_goTypes,
		DependencyIndexes: file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_depIdxs,
		EnumInfos:         file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_enumTypes,
		MessageInfos:      file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_msgTypes,
	}.Build()
	File_qdrant_cloud_cluster_auth_v2_database_api_key_proto = out.File
	file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_goTypes = nil
	file_qdrant_cloud_cluster_auth_v2_database_api_key_proto_depIdxs = nil
}
