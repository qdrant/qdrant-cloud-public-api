// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: qdrant/cloud/booking/v1/booking.proto

package bookingv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PackageStatus defines the valid states a package can be in.
type PackageStatus int32

const (
	// Unspecified package status.
	PackageStatus_PACKAGE_STATUS_UNSPECIFIED PackageStatus = 0
	// The package is active and available for use.
	PackageStatus_PACKAGE_STATUS_ACTIVE PackageStatus = 1
	// The package is deactivated.
	PackageStatus_PACKAGE_STATUS_DEACTIVATED PackageStatus = 2
)

// Enum value maps for PackageStatus.
var (
	PackageStatus_name = map[int32]string{
		0: "PACKAGE_STATUS_UNSPECIFIED",
		1: "PACKAGE_STATUS_ACTIVE",
		2: "PACKAGE_STATUS_DEACTIVATED",
	}
	PackageStatus_value = map[string]int32{
		"PACKAGE_STATUS_UNSPECIFIED": 0,
		"PACKAGE_STATUS_ACTIVE":      1,
		"PACKAGE_STATUS_DEACTIVATED": 2,
	}
)

func (x PackageStatus) Enum() *PackageStatus {
	p := new(PackageStatus)
	*p = x
	return p
}

func (x PackageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PackageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_qdrant_cloud_booking_v1_booking_proto_enumTypes[0].Descriptor()
}

func (PackageStatus) Type() protoreflect.EnumType {
	return &file_qdrant_cloud_booking_v1_booking_proto_enumTypes[0]
}

func (x PackageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PackageStatus.Descriptor instead.
func (PackageStatus) EnumDescriptor() ([]byte, []int) {
	return file_qdrant_cloud_booking_v1_booking_proto_rawDescGZIP(), []int{0}
}

// PackageTier defines the valid tiers a package can be in.
type PackageTier int32

const (
	// Unspecified package tier.
	PackageTier_PACKAGE_TIER_STATUS_UNSPECIFIED PackageTier = 0
	// Standard tier.
	PackageTier_PACKAGE_TIER_STANDARD PackageTier = 1
	// Premium tier.
	PackageTier_PACKAGE_TIER_PREMIUM PackageTier = 2
)

// Enum value maps for PackageTier.
var (
	PackageTier_name = map[int32]string{
		0: "PACKAGE_TIER_STATUS_UNSPECIFIED",
		1: "PACKAGE_TIER_STANDARD",
		2: "PACKAGE_TIER_PREMIUM",
	}
	PackageTier_value = map[string]int32{
		"PACKAGE_TIER_STATUS_UNSPECIFIED": 0,
		"PACKAGE_TIER_STANDARD":           1,
		"PACKAGE_TIER_PREMIUM":            2,
	}
)

func (x PackageTier) Enum() *PackageTier {
	p := new(PackageTier)
	*p = x
	return p
}

func (x PackageTier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PackageTier) Descriptor() protoreflect.EnumDescriptor {
	return file_qdrant_cloud_booking_v1_booking_proto_enumTypes[1].Descriptor()
}

func (PackageTier) Type() protoreflect.EnumType {
	return &file_qdrant_cloud_booking_v1_booking_proto_enumTypes[1]
}

func (x PackageTier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PackageTier.Descriptor instead.
func (PackageTier) EnumDescriptor() ([]byte, []int) {
	return file_qdrant_cloud_booking_v1_booking_proto_rawDescGZIP(), []int{1}
}

// ListPackagesRequest is the request for the ListPackages function
type ListPackagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Required field specifying the cloud provider where the cluster will be hosted.
	// Must match one of the provider IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListCloudProviders` method.
	CloudProviderId string `protobuf:"bytes,2,opt,name=cloud_provider_id,json=cloudProviderId,proto3" json:"cloud_provider_id,omitempty"`
	// Filter specifying the cloud region where the cluster will be hosted.
	// Must match one of the region IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListCloudProviderRegions` method.
	// This field can be omitted if `cloud_provider_id` is set to `hybrid`.
	CloudProviderRegionId *string `protobuf:"bytes,3,opt,name=cloud_provider_region_id,json=cloudProviderRegionId,proto3,oneof" json:"cloud_provider_region_id,omitempty"`
	// The status of the packages to filter.
	// This is an optional field. If value is not set, only active packages are returned.
	Statuses      []PackageStatus `protobuf:"varint,4,rep,packed,name=statuses,proto3,enum=qdrant.cloud.booking.v1.PackageStatus" json:"statuses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPackagesRequest) Reset() {
	*x = ListPackagesRequest{}
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPackagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPackagesRequest) ProtoMessage() {}

func (x *ListPackagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPackagesRequest.ProtoReflect.Descriptor instead.
func (*ListPackagesRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_booking_v1_booking_proto_rawDescGZIP(), []int{0}
}

func (x *ListPackagesRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListPackagesRequest) GetCloudProviderId() string {
	if x != nil {
		return x.CloudProviderId
	}
	return ""
}

func (x *ListPackagesRequest) GetCloudProviderRegionId() string {
	if x != nil && x.CloudProviderRegionId != nil {
		return *x.CloudProviderRegionId
	}
	return ""
}

func (x *ListPackagesRequest) GetStatuses() []PackageStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

// ListPackagesResponse is the response from the ListPackages function
type ListPackagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual packages in this list
	Items         []*Package `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPackagesResponse) Reset() {
	*x = ListPackagesResponse{}
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPackagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPackagesResponse) ProtoMessage() {}

func (x *ListPackagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPackagesResponse.ProtoReflect.Descriptor instead.
func (*ListPackagesResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_booking_v1_booking_proto_rawDescGZIP(), []int{1}
}

func (x *ListPackagesResponse) GetItems() []*Package {
	if x != nil {
		return x.Items
	}
	return nil
}

// ListGlobalPackagesRequest is the request for the ListGlobalPackages function
type ListGlobalPackagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Mandatory filter specifying the cloud provider where the cluster will be hosted.
	// Must match one of the provider IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListGlobalCloudProviders` method.
	CloudProviderId string `protobuf:"bytes,1,opt,name=cloud_provider_id,json=cloudProviderId,proto3" json:"cloud_provider_id,omitempty"`
	// Filter specifying the cloud region where the cluster will be hosted.
	// Must match one of the region IDs returned by the `qdrant.cloud.platform.v1.PlatformService.ListGlobalCloudProviderRegions` method.
	// Field can be omitted, if cloud_provider_id is `hybrid`
	CloudProviderRegionId *string `protobuf:"bytes,2,opt,name=cloud_provider_region_id,json=cloudProviderRegionId,proto3,oneof" json:"cloud_provider_region_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ListGlobalPackagesRequest) Reset() {
	*x = ListGlobalPackagesRequest{}
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGlobalPackagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGlobalPackagesRequest) ProtoMessage() {}

func (x *ListGlobalPackagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGlobalPackagesRequest.ProtoReflect.Descriptor instead.
func (*ListGlobalPackagesRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_booking_v1_booking_proto_rawDescGZIP(), []int{2}
}

func (x *ListGlobalPackagesRequest) GetCloudProviderId() string {
	if x != nil {
		return x.CloudProviderId
	}
	return ""
}

func (x *ListGlobalPackagesRequest) GetCloudProviderRegionId() string {
	if x != nil && x.CloudProviderRegionId != nil {
		return *x.CloudProviderRegionId
	}
	return ""
}

// ListPackagesResponse is the response from the ListPackages function
type ListGlobalPackagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual packages in this list
	Items         []*Package `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGlobalPackagesResponse) Reset() {
	*x = ListGlobalPackagesResponse{}
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGlobalPackagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGlobalPackagesResponse) ProtoMessage() {}

func (x *ListGlobalPackagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGlobalPackagesResponse.ProtoReflect.Descriptor instead.
func (*ListGlobalPackagesResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_booking_v1_booking_proto_rawDescGZIP(), []int{3}
}

func (x *ListGlobalPackagesResponse) GetItems() []*Package {
	if x != nil {
		return x.Items
	}
	return nil
}

// GetPackageRequest is the request for the GetPackage function
type GetPackageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the account (in GUID format).
	// This is a required field.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The unique identifier of the package.
	// A unique string ID assigned to each package.
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPackageRequest) Reset() {
	*x = GetPackageRequest{}
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackageRequest) ProtoMessage() {}

func (x *GetPackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackageRequest.ProtoReflect.Descriptor instead.
func (*GetPackageRequest) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_booking_v1_booking_proto_rawDescGZIP(), []int{4}
}

func (x *GetPackageRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetPackageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GetPackageResponse is the response from the GetPackage function
type GetPackageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual package
	Package       *Package `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPackageResponse) Reset() {
	*x = GetPackageResponse{}
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPackageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackageResponse) ProtoMessage() {}

func (x *GetPackageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackageResponse.ProtoReflect.Descriptor instead.
func (*GetPackageResponse) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_booking_v1_booking_proto_rawDescGZIP(), []int{5}
}

func (x *GetPackageResponse) GetPackage() *Package {
	if x != nil {
		return x.Package
	}
	return nil
}

// Package represents a single package.
// A package is a configuration (CPU/Memory/Disk size) for a cluster with a price.
type Package struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the package.
	// A unique string ID assigned to each package.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the package.
	// A human-readable identifier for the package.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Specifies if this is a free or paid package.
	// Must be either "free" or "paid".
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// The resource configuration associated with the package
	ResourceConfiguration *ResourceConfiguration `protobuf:"bytes,4,opt,name=resource_configuration,json=resourceConfiguration,proto3" json:"resource_configuration,omitempty"`
	// The currency of the prices.
	// Specifies the currency in which the prices are denominated.
	// Must be a 3-letter ISO 4217 currency code (e.g., "USD").
	Currency string `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	// The unit price per hour in millicents, in integer format.
	// Represents the cost per hour for a single unit of the resource.
	// You will be billed hourly for the resources you use. Partial hours are rounded up and billed as full hours.
	UnitIntPricePerHour int32 `protobuf:"varint,6,opt,name=unit_int_price_per_hour,json=unitIntPricePerHour,proto3" json:"unit_int_price_per_hour,omitempty"`
	// The status of the package.
	// Indicates the current status of the package.
	Status PackageStatus `protobuf:"varint,7,opt,name=status,proto3,enum=qdrant.cloud.booking.v1.PackageStatus" json:"status,omitempty"`
	// The tier of the package.
	Tier PackageTier `protobuf:"varint,9,opt,name=tier,proto3,enum=qdrant.cloud.booking.v1.PackageTier" json:"tier,omitempty"`
	// Optional additional resources that can be added to the cluster.
	// if not set, additional resources are not available for this package.
	// Currently, only `DISK` is supported.
	AvailableAdditionalResources *AvailableAdditionalResources `protobuf:"bytes,8,opt,name=available_additional_resources,json=availableAdditionalResources,proto3,oneof" json:"available_additional_resources,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *Package) Reset() {
	*x = Package{}
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_booking_v1_booking_proto_rawDescGZIP(), []int{6}
}

func (x *Package) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Package) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Package) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Package) GetResourceConfiguration() *ResourceConfiguration {
	if x != nil {
		return x.ResourceConfiguration
	}
	return nil
}

func (x *Package) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Package) GetUnitIntPricePerHour() int32 {
	if x != nil {
		return x.UnitIntPricePerHour
	}
	return 0
}

func (x *Package) GetStatus() PackageStatus {
	if x != nil {
		return x.Status
	}
	return PackageStatus_PACKAGE_STATUS_UNSPECIFIED
}

func (x *Package) GetTier() PackageTier {
	if x != nil {
		return x.Tier
	}
	return PackageTier_PACKAGE_TIER_STATUS_UNSPECIFIED
}

func (x *Package) GetAvailableAdditionalResources() *AvailableAdditionalResources {
	if x != nil {
		return x.AvailableAdditionalResources
	}
	return nil
}

// AvailableAdditionalResources represents additional resources that can be added to the cluster.
type AvailableAdditionalResources struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unit price per hour in millicents, in integer format.
	// Represents the cost per hour for a single unit(GiB) of the resource.
	// You will be billed hourly for the resources you use. Partial hours are rounded up and billed as full hours.
	DiskPricePerHour uint32 `protobuf:"varint,1,opt,name=disk_price_per_hour,json=diskPricePerHour,proto3" json:"disk_price_per_hour,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AvailableAdditionalResources) Reset() {
	*x = AvailableAdditionalResources{}
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableAdditionalResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableAdditionalResources) ProtoMessage() {}

func (x *AvailableAdditionalResources) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableAdditionalResources.ProtoReflect.Descriptor instead.
func (*AvailableAdditionalResources) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_booking_v1_booking_proto_rawDescGZIP(), []int{7}
}

func (x *AvailableAdditionalResources) GetDiskPricePerHour() uint32 {
	if x != nil {
		return x.DiskPricePerHour
	}
	return 0
}

// ResourceConfiguration defines the resource configuration for a package.
type ResourceConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The amount of RAM (e.g., "1GiB")
	Ram string `protobuf:"bytes,1,opt,name=ram,proto3" json:"ram,omitempty"`
	// The amount of CPU (e.g., "1000m" (1 vCPU))
	Cpu string `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	// The amount of disk (e.g., "100GiB")
	Disk          string `protobuf:"bytes,3,opt,name=disk,proto3" json:"disk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceConfiguration) Reset() {
	*x = ResourceConfiguration{}
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceConfiguration) ProtoMessage() {}

func (x *ResourceConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_qdrant_cloud_booking_v1_booking_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceConfiguration.ProtoReflect.Descriptor instead.
func (*ResourceConfiguration) Descriptor() ([]byte, []int) {
	return file_qdrant_cloud_booking_v1_booking_proto_rawDescGZIP(), []int{8}
}

func (x *ResourceConfiguration) GetRam() string {
	if x != nil {
		return x.Ram
	}
	return ""
}

func (x *ResourceConfiguration) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *ResourceConfiguration) GetDisk() string {
	if x != nil {
		return x.Disk
	}
	return ""
}

var File_qdrant_cloud_booking_v1_booking_proto protoreflect.FileDescriptor

const file_qdrant_cloud_booking_v1_booking_proto_rawDesc = "" +
	"\n" +
	"%qdrant/cloud/booking/v1/booking.proto\x12\x17qdrant.cloud.booking.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1cgoogle/api/annotations.proto\x1a#qdrant/cloud/common/v1/common.proto\"\xe3\x03\n" +
	"\x13ListPackagesRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x123\n" +
	"\x11cloud_provider_id\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x03R\x0fcloudProviderId\x12<\n" +
	"\x18cloud_provider_region_id\x18\x03 \x01(\tH\x00R\x15cloudProviderRegionId\x88\x01\x01\x12B\n" +
	"\bstatuses\x18\x04 \x03(\x0e2&.qdrant.cloud.booking.v1.PackageStatusR\bstatuses:\xce\x01\xbaH\xca\x01\x1a\xc7\x01\n" +
	".list_packages.cloud_provider_region_id_present\x12Kcloud_provider_region_id is required when cloud_provider_id is not 'hybrid'\x1aHthis.cloud_provider_id == 'hybrid' || has(this.cloud_provider_region_id)B\x1b\n" +
	"\x19_cloud_provider_region_id\"N\n" +
	"\x14ListPackagesResponse\x126\n" +
	"\x05items\x18\x01 \x03(\v2 .qdrant.cloud.booking.v1.PackageR\x05items\"\x83\x03\n" +
	"\x19ListGlobalPackagesRequest\x123\n" +
	"\x11cloud_provider_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x03R\x0fcloudProviderId\x12<\n" +
	"\x18cloud_provider_region_id\x18\x02 \x01(\tH\x00R\x15cloudProviderRegionId\x88\x01\x01:\xd5\x01\xbaH\xd1\x01\x1a\xce\x01\n" +
	"5list_global_packages.cloud_provider_region_id_present\x12Kcloud_provider_region_id is required when cloud_provider_id is not 'hybrid'\x1aHthis.cloud_provider_id == 'hybrid' || has(this.cloud_provider_region_id)B\x1b\n" +
	"\x19_cloud_provider_region_id\"T\n" +
	"\x1aListGlobalPackagesResponse\x126\n" +
	"\x05items\x18\x01 \x03(\v2 .qdrant.cloud.booking.v1.PackageR\x05items\"V\n" +
	"\x11GetPackageRequest\x12'\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\taccountId\x12\x18\n" +
	"\x02id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\"X\n" +
	"\x12GetPackageResponse\x12B\n" +
	"\apackage\x18\x01 \x01(\v2 .qdrant.cloud.booking.v1.PackageB\x06\xbaH\x03\xc8\x01\x01R\apackage\"\x88\x05\n" +
	"\aPackage\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12/\n" +
	"\x04name\x18\x02 \x01(\tB\x1b\xbaH\x18r\x16\x10\x04\x18@2\x10^[a-zA-Z0-9-_]+$R\x04name\x12%\n" +
	"\x04type\x18\x03 \x01(\tB\x11\xbaH\x0er\fR\x04freeR\x04paidR\x04type\x12e\n" +
	"\x16resource_configuration\x18\x04 \x01(\v2..qdrant.cloud.booking.v1.ResourceConfigurationR\x15resourceConfiguration\x12-\n" +
	"\bcurrency\x18\x05 \x01(\tB\x11\xbaH\x0er\f2\n" +
	"^[A-Z]{3}$R\bcurrency\x12=\n" +
	"\x17unit_int_price_per_hour\x18\x06 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x13unitIntPricePerHour\x12J\n" +
	"\x06status\x18\a \x01(\x0e2&.qdrant.cloud.booking.v1.PackageStatusB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\x06status\x12D\n" +
	"\x04tier\x18\t \x01(\x0e2$.qdrant.cloud.booking.v1.PackageTierB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\x04tier\x12\x80\x01\n" +
	"\x1eavailable_additional_resources\x18\b \x01(\v25.qdrant.cloud.booking.v1.AvailableAdditionalResourcesH\x00R\x1cavailableAdditionalResources\x88\x01\x01B!\n" +
	"\x1f_available_additional_resources\"V\n" +
	"\x1cAvailableAdditionalResources\x126\n" +
	"\x13disk_price_per_hour\x18\x01 \x01(\rB\a\xbaH\x04*\x02(\x00R\x10diskPricePerHour\"j\n" +
	"\x15ResourceConfiguration\x12\x19\n" +
	"\x03ram\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x03ram\x12\x19\n" +
	"\x03cpu\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x03cpu\x12\x1b\n" +
	"\x04disk\x18\x03 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04disk*j\n" +
	"\rPackageStatus\x12\x1e\n" +
	"\x1aPACKAGE_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15PACKAGE_STATUS_ACTIVE\x10\x01\x12\x1e\n" +
	"\x1aPACKAGE_STATUS_DEACTIVATED\x10\x02*g\n" +
	"\vPackageTier\x12#\n" +
	"\x1fPACKAGE_TIER_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15PACKAGE_TIER_STANDARD\x10\x01\x12\x18\n" +
	"\x14PACKAGE_TIER_PREMIUM\x10\x022\x89\x04\n" +
	"\x0eBookingService\x12\xa7\x01\n" +
	"\fListPackages\x12,.qdrant.cloud.booking.v1.ListPackagesRequest\x1a-.qdrant.cloud.booking.v1.ListPackagesResponse\":\x8a\xb5\x18\x00\x82\xd3\xe4\x93\x020\x12./api/booking/v1/accounts/{account_id}/packages\x12\xa6\x01\n" +
	"\n" +
	"GetPackage\x12*.qdrant.cloud.booking.v1.GetPackageRequest\x1a+.qdrant.cloud.booking.v1.GetPackageResponse\"?\x8a\xb5\x18\x00\x82\xd3\xe4\x93\x025\x123/api/booking/v1/accounts/{account_id}/packages/{id}\x12\xa3\x01\n" +
	"\x12ListGlobalPackages\x122.qdrant.cloud.booking.v1.ListGlobalPackagesRequest\x1a3.qdrant.cloud.booking.v1.ListGlobalPackagesResponse\"$\x98\xb5\x18\x00\x82\xd3\xe4\x93\x02\x1a\x12\x18/api/booking/v1/packagesB\xfe\x01\n" +
	"\x1bcom.qdrant.cloud.booking.v1B\fBookingProtoP\x01ZRgithub.com/qdrant/qdrant-cloud-public-api/gen/go/qdrant/cloud/booking/v1;bookingv1\xa2\x02\x03QCB\xaa\x02\x17Qdrant.Cloud.Booking.V1\xca\x02\x17Qdrant\\Cloud\\Booking\\V1\xe2\x02#Qdrant\\Cloud\\Booking\\V1\\GPBMetadata\xea\x02\x1aQdrant::Cloud::Booking::V1b\x06proto3"

var (
	file_qdrant_cloud_booking_v1_booking_proto_rawDescOnce sync.Once
	file_qdrant_cloud_booking_v1_booking_proto_rawDescData []byte
)

func file_qdrant_cloud_booking_v1_booking_proto_rawDescGZIP() []byte {
	file_qdrant_cloud_booking_v1_booking_proto_rawDescOnce.Do(func() {
		file_qdrant_cloud_booking_v1_booking_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_qdrant_cloud_booking_v1_booking_proto_rawDesc), len(file_qdrant_cloud_booking_v1_booking_proto_rawDesc)))
	})
	return file_qdrant_cloud_booking_v1_booking_proto_rawDescData
}

var file_qdrant_cloud_booking_v1_booking_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_qdrant_cloud_booking_v1_booking_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_qdrant_cloud_booking_v1_booking_proto_goTypes = []any{
	(PackageStatus)(0),                   // 0: qdrant.cloud.booking.v1.PackageStatus
	(PackageTier)(0),                     // 1: qdrant.cloud.booking.v1.PackageTier
	(*ListPackagesRequest)(nil),          // 2: qdrant.cloud.booking.v1.ListPackagesRequest
	(*ListPackagesResponse)(nil),         // 3: qdrant.cloud.booking.v1.ListPackagesResponse
	(*ListGlobalPackagesRequest)(nil),    // 4: qdrant.cloud.booking.v1.ListGlobalPackagesRequest
	(*ListGlobalPackagesResponse)(nil),   // 5: qdrant.cloud.booking.v1.ListGlobalPackagesResponse
	(*GetPackageRequest)(nil),            // 6: qdrant.cloud.booking.v1.GetPackageRequest
	(*GetPackageResponse)(nil),           // 7: qdrant.cloud.booking.v1.GetPackageResponse
	(*Package)(nil),                      // 8: qdrant.cloud.booking.v1.Package
	(*AvailableAdditionalResources)(nil), // 9: qdrant.cloud.booking.v1.AvailableAdditionalResources
	(*ResourceConfiguration)(nil),        // 10: qdrant.cloud.booking.v1.ResourceConfiguration
}
var file_qdrant_cloud_booking_v1_booking_proto_depIdxs = []int32{
	0,  // 0: qdrant.cloud.booking.v1.ListPackagesRequest.statuses:type_name -> qdrant.cloud.booking.v1.PackageStatus
	8,  // 1: qdrant.cloud.booking.v1.ListPackagesResponse.items:type_name -> qdrant.cloud.booking.v1.Package
	8,  // 2: qdrant.cloud.booking.v1.ListGlobalPackagesResponse.items:type_name -> qdrant.cloud.booking.v1.Package
	8,  // 3: qdrant.cloud.booking.v1.GetPackageResponse.package:type_name -> qdrant.cloud.booking.v1.Package
	10, // 4: qdrant.cloud.booking.v1.Package.resource_configuration:type_name -> qdrant.cloud.booking.v1.ResourceConfiguration
	0,  // 5: qdrant.cloud.booking.v1.Package.status:type_name -> qdrant.cloud.booking.v1.PackageStatus
	1,  // 6: qdrant.cloud.booking.v1.Package.tier:type_name -> qdrant.cloud.booking.v1.PackageTier
	9,  // 7: qdrant.cloud.booking.v1.Package.available_additional_resources:type_name -> qdrant.cloud.booking.v1.AvailableAdditionalResources
	2,  // 8: qdrant.cloud.booking.v1.BookingService.ListPackages:input_type -> qdrant.cloud.booking.v1.ListPackagesRequest
	6,  // 9: qdrant.cloud.booking.v1.BookingService.GetPackage:input_type -> qdrant.cloud.booking.v1.GetPackageRequest
	4,  // 10: qdrant.cloud.booking.v1.BookingService.ListGlobalPackages:input_type -> qdrant.cloud.booking.v1.ListGlobalPackagesRequest
	3,  // 11: qdrant.cloud.booking.v1.BookingService.ListPackages:output_type -> qdrant.cloud.booking.v1.ListPackagesResponse
	7,  // 12: qdrant.cloud.booking.v1.BookingService.GetPackage:output_type -> qdrant.cloud.booking.v1.GetPackageResponse
	5,  // 13: qdrant.cloud.booking.v1.BookingService.ListGlobalPackages:output_type -> qdrant.cloud.booking.v1.ListGlobalPackagesResponse
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_qdrant_cloud_booking_v1_booking_proto_init() }
func file_qdrant_cloud_booking_v1_booking_proto_init() {
	if File_qdrant_cloud_booking_v1_booking_proto != nil {
		return
	}
	file_qdrant_cloud_booking_v1_booking_proto_msgTypes[0].OneofWrappers = []any{}
	file_qdrant_cloud_booking_v1_booking_proto_msgTypes[2].OneofWrappers = []any{}
	file_qdrant_cloud_booking_v1_booking_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_qdrant_cloud_booking_v1_booking_proto_rawDesc), len(file_qdrant_cloud_booking_v1_booking_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qdrant_cloud_booking_v1_booking_proto_goTypes,
		DependencyIndexes: file_qdrant_cloud_booking_v1_booking_proto_depIdxs,
		EnumInfos:         file_qdrant_cloud_booking_v1_booking_proto_enumTypes,
		MessageInfos:      file_qdrant_cloud_booking_v1_booking_proto_msgTypes,
	}.Build()
	File_qdrant_cloud_booking_v1_booking_proto = out.File
	file_qdrant_cloud_booking_v1_booking_proto_goTypes = nil
	file_qdrant_cloud_booking_v1_booking_proto_depIdxs = nil
}
